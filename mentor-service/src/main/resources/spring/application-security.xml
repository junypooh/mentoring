<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http pattern="/images/**" security="none" />
    <http pattern="/js/**" security="none" />
    <http pattern="/css/**" security="none" />
    <http pattern="/resources/**" security="none" />
    <http pattern="/daumeditor/js/**" security="none"/>
    <http pattern="/daumeditor/images/**" security="none"/>
    <http pattern="/daumeditor/css/**" security="none"/>
    <http pattern="/daumeditor/*.html" security="none"/>
    <http pattern="/daumeditor/pages/**/*.html" security="none"/>

    <http pattern="/mobile/**" auto-config="false" disable-url-rewriting="true" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
        <!-- <intercept-url pattern="/mobile/login*" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER')" />
        <intercept-url pattern="/mobile/logout*" access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER')" />
        <intercept-url pattern="/mobile/main.do" access="hasRole('ROLE_STUDENT,ROLE_TEACHER')" /> -->
        <!-- <intercept-url pattern="/**" requires-channel="https" /> --><!-- HTTPS 적용시 주석제거 -->

        <custom-filter position="FORM_LOGIN_FILTER" ref="mobileUsernamePasswordAuthenticationFilter" />

        <logout logout-success-url="/mobile/login.do"
            logout-url="/mobile/j_spring_security_logout.do"
            delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"
            invalidate-session="true" />

        <!--<form-login login-page="/mobile/login.do"
            default-target-url="/mobile/main.do"
            login-processing-url="/mobile/j_spring_security_check.do"
            username-parameter="username"
            password-parameter="password"
            authentication-failure-url="/mobile/login.do"
            authentication-success-handler-ref="mobileLoggingAuthenticationSuccessHandler"
             />-->

        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>
		<remember-me key="mobileMentor" token-validity-seconds="2419200" user-service-ref="userDetailsService" authentication-success-handler-ref="mobileLoggingAuthenticationSuccessHandler"/>
        <csrf request-matcher-ref="csrfSecurityRequestMatcher"/>
        <port-mappings>
            <port-mapping http="80" https="443" />
            <port-mapping http="8080" https="8443" />
        </port-mappings>
    </http>

    <beans:bean id="mobileUsernamePasswordAuthenticationFilter" class="kr.or.career.mentor.security.MobileUsernamePasswordAuthenticationFilter">
        <beans:property name="usernameParameter" value="username"/>
        <beans:property name="passwordParameter" value="password"/>
        <beans:property name="filterProcessesUrl" value="/mobile/j_spring_security_check.do"/>
        <beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager"/>
        <beans:property name="authenticationFailureHandler" ref="mobileFailureHandler"/>
        <beans:property name="authenticationSuccessHandler" ref="mobileLoggingAuthenticationSuccessHandler"/>
    </beans:bean>

    <beans:bean id="mobileLoggingAuthenticationSuccessHandler" class="kr.or.career.mentor.handler.LoggingAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/mobile/main.do" />
        <beans:property name="targetUrlParameter" value="_spring_security_target_url" />
    </beans:bean>

    <beans:bean id="mobileFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/mobile/login.do"/>
    </beans:bean>

    <beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/mobile/login.do"/>
    </beans:bean>

    <http auto-config="true" use-expressions="true">
        <!-- <intercept-url pattern="/memberInfo/*" access="hasRole('ROLE_USER')" /> -->
        <!-- <intercept-url pattern="/**" requires-channel="https" /> --><!-- HTTPS 적용시 주석제거 -->

        <access-denied-handler error-page="/403.jsp" />
        <form-login login-page="/login.do"
            login-processing-url="/j_spring_security_check.do"
            default-target-url="/index.do"
            username-parameter="username"
            password-parameter="password"
            authentication-failure-url="/login.do?error=true"
            authentication-success-handler-ref="loggingAuthenticationSuccessHandler"
            />
        <logout logout-url="/j_spring_security_logout.do"
            logout-success-url="/index.do"
            delete-cookies="JSESSIONID"
            invalidate-session="true" />
        <remember-me key="mentor" user-service-ref="userDetailsService" authentication-success-handler-ref="loggingAuthenticationSuccessHandler"/>

        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>

        <csrf request-matcher-ref="csrfSecurityRequestMatcher"/>

        <port-mappings>
            <port-mapping http="80" https="443" />
            <port-mapping http="8080" https="8443" />
        </port-mappings>
    </http>

    <beans:bean id="csrfSecurityRequestMatcher" class="kr.or.career.mentor.security.CsrfSecurityRequestMatcher" />


    <beans:bean id="loggingAuthenticationSuccessHandler" class="kr.or.career.mentor.handler.LoggingAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/index.do" />
        <beans:property name="targetUrlParameter" value="_spring_security_target_url" />
    </beans:bean>

    <beans:bean id="accessDenied" class="kr.or.career.mentor.security.handler.CustomAccessDeniedHandler">
        <beans:property name="errorPage" value="/index.do" />
    </beans:bean>

    <beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
        <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="reloadableFilterInvocationSecurityMetadataSource" />
        <!-- <beans:property name="rejectPublicInvocations" value="true"/> -->
    </beans:bean>

    <beans:bean id="accessDecisionManager"
        class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter">
                    <beans:property name="rolePrefix" value="" />
                </beans:bean>
            </beans:list>
        </beans:constructor-arg>
        <beans:property name="allowIfAllAbstainDecisions"
            value="false" />
    </beans:bean>

    <beans:bean id="reloadableFilterInvocationSecurityMetadataSource"
        class="kr.or.career.mentor.security.ReloadableFilterInvocationSecurityMetadataSource">
        <beans:constructor-arg ref="requestMap" />
        <beans:property name="securedObjectService" ref="securedObjectService" />
    </beans:bean>

    <beans:bean id="securedObjectService"
        class="kr.or.career.mentor.security.service.impl.SecuredObjectServiceImpl">
        <beans:property name="secureObjectDao" ref="securedObjectDao" />
    </beans:bean>

    <beans:bean id="securedObjectDao" class="kr.or.career.mentor.security.dao.SecuredObjectDao">
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <beans:bean id="requestMap"
        class="kr.or.career.mentor.security.UrlResourcesMapFactoryBean"
        init-method="init">
        <beans:property name="securedObjectService" ref="securedObjectService" />
    </beans:bean>

    <beans:bean id="mentorPasswordEncoder" class="kr.or.career.mentor.security.MentorPasswordEncoder" />

    <beans:bean id="userDetailsChecker" class="kr.or.career.mentor.security.AccountStatusUserDetailsChecker" />

    <beans:bean id="noneUserDetailsChecker" class="kr.or.career.mentor.security.NoneUserDetailsChecker" />

    <global-method-security secured-annotations="enabled" />
<!-- 	<authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="mentorPasswordEncoder" >
                <salt-source user-property="id" />
            </password-encoder>
        </authentication-provider>
    </authentication-manager> -->

    <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="hideUserNotFoundExceptions" value="false" />
        <beans:property name="userDetailsService" ref="userDetailsService" />
        <beans:property name="passwordEncoder" ref="mentorPasswordEncoder" />
        <beans:property name="preAuthenticationChecks" ref="noneUserDetailsChecker" />
        <beans:property name="postAuthenticationChecks" ref="userDetailsChecker"/>
        <beans:property name="saltSource">
            <beans:bean class="org.springframework.security.authentication.dao.ReflectionSaltSource">
                <beans:property name="userPropertyToUse" value="id" />
            </beans:bean>
        </beans:property>
    </beans:bean>

    <authentication-manager>
        <authentication-provider ref="daoAuthenticationProvider" />
    </authentication-manager>
</beans:beans>
