<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.career.mentor.dao.SchInfoMapper">

    <resultMap id="schInfoWithGroup" type="kr.or.career.mentor.domain.SchInfoExcelDTO" autoMapping="true">
        <id column="SCH_NO" property="schNo"/>
        <id column="GRP_NO" property="grpNo"/>
        <collection property="appliedSchLectInfos" ofType="kr.or.career.mentor.domain.AppliedSchLectInfo" autoMapping="true">
            <id column="SCH_NO" property="schNo"/>
            <id column="SET_SER" property="setSer"/>
            <id column="LECT_SER" property="lectSer"/>
            <id column="LECT_TIMS" property="lectTims"/>
        </collection>
    </resultMap>

    <!-- 학교 목록 조회 -->
    <select id="listSchInfo" parameterType="kr.or.career.mentor.domain.SchInfo" resultType="kr.or.career.mentor.domain.SchInfo">
        SELECT
            A.sch_no,            A.sch_nm,            A.sch_class_cd,
            E.CD_NM AS sch_class_nm,
            A.sido_nm,
            A.sggu_nm,            A.umdng_nm,            A.post_cd,            A.loca_addr,   A.loca_detail_addr,
        A.cont_tel,            A.site_url,            A.found_day
        ,ROW_NUMBER() OVER(ORDER BY E.cd,sido_nm,sggu_nm,sch_nm) AS rn
        FROM CNET_SCH_INFO A
        INNER JOIN CNET_CODE E
        ON A.sch_class_cd = E.cd
        AND E.SUP_CD = '100494'
        <where>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNo)">AND NOT EXISTS (SELECT 1 FROM CNET_SCH_GRP_MAPP L WHERE L.GRP_NO = #{grpNo} AND L.SCH_NO = A.SCH_NO)</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schNm)">AND REGEXP_LIKE(sch_nm,#{schNm})</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schClassCd)">AND sch_class_cd = #{schClassCd}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(sidoNm)">AND sido_nm = #{sidoNm}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(sgguNm)">AND sggu_nm = #{sgguNm}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(useYn)">AND A.use_yn = #{useYn}</if>
            <if test="schNos != null">
                AND (1,A.SCH_NO) IN <foreach collection="schNos" open="(" separator="," close=")" item="item">(1,#{item})</foreach>
            </if>
        </where>
    </select>

    <select id="listSchInfoWithGroupTest" parameterType="kr.or.career.mentor.domain.BizGrpSearch" resultType="kr.or.career.mentor.domain.SchInfoDTO">
        /* paging */
        SELECT
        A.sch_no,            A.sch_nm,            A.sch_class_cd,
        E.cd_nm AS sch_class_nm,
        A.sido_nm,
        A.sggu_nm,            A.umdng_nm,            A.post_cd,            A.loca_addr, A.loca_detail_addr,
        A.cont_tel,            A.site_url,            A.found_day,
        X.GRP_DATA,
        (SELECT COUNT(SCH_NO) FROM CNET_SCH_GRP_MAPP WHERE SCH_NO = A.SCH_NO) AS CLAS_CNT,
        (SELECT COUNT(SCH_NO) FROM CNET_LECT_APPL_CNT WHERE SCH_NO = A.SCH_NO) AS CLAS_PERM_CNT,
        A.USE_YN,
        ROW_NUMBER() OVER(ORDER BY A.REG_DTM DESC) AS rn
        /* paging */
        FROM CNET_SCH_INFO A
        INNER JOIN CNET_CLAS_ROOM_INFO R
        ON A.sch_no = R.sch_no
        INNER JOIN CNET_CODE E
        ON A.sch_class_cd = E.cd
        AND E.SUP_CD = '100494'
        LEFT OUTER JOIN (
        SELECT  G.SCH_NO
        , LISTAGG (G.GRP_NO || '},{' ||H.GRP_NM || '},{' || I.CLAS_START_DAY || '},{' || I.CLAS_END_DAY, '],[') WITHIN GROUP (ORDER BY G.SCH_NO)  AS GRP_DATA
        FROM CNET_SCH_GRP_MAPP G
        INNER JOIN CNET_BIZ_GRP_INFO H
        ON G.grp_no = H.grp_no
        INNER JOIN CNET_BIZ_SET_INFO I
        ON H.grp_no = I.SET_TARGT_NO
        <where>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
                <![CDATA[
                AND CLAS_START_DAY between Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') and Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
                or CLAS_END_DAY between Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') and Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isEmpty(clasEndDay)">
                <![CDATA[
            AND CLAS_START_DAY >= Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '')
        ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
                <![CDATA[
                AND CLAS_END_DAY <= Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
            ]]>
            </if>
        </where>
        GROUP BY G.SCH_NO
        ) X
        ON A.SCH_NO = X.SCH_NO
        <!--
      <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay)
      or @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)
      or @org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
      INNER JOIN (
                    SELECT  G.SCH_NO
                         FROM CNET_SCH_GRP_MAPP G
                INNER JOIN CNET_BIZ_GRP_INFO H
                             ON G.grp_no = H.grp_no
                INNER JOIN CNET_BIZ_SET_INFO I
                             ON H.grp_no = I.SET_TARGT_NO
                           AND TO_CHAR(SYSDATE,'yyyymmdd') BETWEEN  I.CLAS_START_DAY AND I.CLAS_END_DAY
                         <where>
                             <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
                                 <![CDATA[
                                    AND CLAS_START_DAY between Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') and Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
                                    or CLAS_END_DAY between Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') and Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
                                ]]>
                             </if>
                             <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isEmpty(clasEndDay)">
                                 <![CDATA[
                                    AND CLAS_START_DAY >= Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '')
                                ]]>
                             </if>
                             <if test="@org.apache.commons.lang3.StringUtils@isEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
                                 <![CDATA[
                                    AND CLAS_END_DAY <= Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
                                ]]>
                             </if>
                         <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
                            AND REGEXP_LIKE(H.grp_nm,#{grpNm})
                         </if>
                         </where>
                        GROUP BY G.SCH_NO
                ) Y
              ON A.SCH_NO = Y.SCH_NO
       </if>
       -->
        <where>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schNm)">AND REGEXP_LIKE(sch_nm,#{schNm})</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schClassCd)">AND sch_class_cd = #{schClassCd}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(sidoNm)">AND sido_nm = #{sidoNm}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(sgguNm)">AND sggu_nm = #{sgguNm}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isEmpty(clasEndDay)">
                AND Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') BETWEEN  B.CLAS_START_DAY AND B.CLAS_END_DAY
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay) and @org.apache.commons.lang3.StringUtils@isEmpty(clasStartDay)">
                AND Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '') BETWEEN B.CLAS_START_DAY AND B.CLAS_END_DAY
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay)">
                <![CDATA[
            AND (
                Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') BETWEEN B.CLAS_START_DAY  AND B.CLAS_END_DAY
                    OR Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '') BETWEEN  B.CLAS_START_DAY AND B.CLAS_END_DAY
                )
            ]]>
            </if>

        </where>
        ORDER BY A.REG_DTM DESC
    </select>

    <select id="listSchInfoWithGroup" parameterType="kr.or.career.mentor.domain.BizGrpSearch" resultType="kr.or.career.mentor.domain.SchInfoDTO">
    /* paging */
        SELECT
            A.sch_no,            A.sch_nm,            A.sch_class_cd,
            E.cd_nm AS sch_class_nm,
            A.sido_nm,
            A.sggu_nm,            A.umdng_nm,            A.post_cd,            A.loca_addr, A.loca_detail_addr,
            A.cont_tel,            A.site_url,            A.found_day,
            (SELECT COUNT(SCH_NO) FROM CNET_SCH_GRP_MAPP WHERE SCH_NO = A.SCH_NO) AS CLAS_CNT,
            (SELECT SUM(CASE WHEN CLAC.CLAS_PERM_CNT != 0 THEN CLAC.CLAS_PERM_CNT ELSE SBSI.CLAS_CNT END ) AS CLAS_CNT
            FROM CNET_SCH_GRP_MAPP CSGM
            INNER JOIN CNET_BIZ_SET_INFO SBSI
            ON CSGM.GRP_NO = SBSI.Set_Targt_NO
            LEFT OUTER JOIN CNET_LECT_APPL_CNT CLAC
            ON SBSI.Set_Ser = CLAC.Set_Ser AND CLAC.SCH_NO = CSGM.SCH_NO
            WHERE CSGM.SCH_NO = A.SCH_NO) AS CLAS_PERM_CNT,
            A.USE_YN,
            TO_CHAR(A.REG_DTM,'YYYY.MM.DD') AS REG_DTM,
            C.ID AS USER_ID,
        (SELECT COUNT(CRI.CLAS_ROOM_SER) FROM Cnet_Clas_Room_Info CRI INNER JOIN Cnet_Clas_Room_Reg_Req_Hist CRH ON Cri.Clas_Room_Ser = Crh.Clas_Room_Ser WHERE CRI.USE_YN = 'Y' AND Crh.Reg_Stat_Cd = '101526' AND CRI.DEL_YN = 'N' AND CRI.SCH_NO = A.SCH_NO) AS CLAS_ROOM_CNT,
            ROW_NUMBER() OVER(ORDER BY A.REG_DTM DESC nulls last) AS rn
    /* paging */
        FROM CNET_SCH_INFO A
        LEFT OUTER JOIN CNET_MBR_SCH_CUALF B
            ON A.SCH_NO = B.SCH_NO
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schMbrCualfCd)">AND B.sch_mbr_cualf_cd = #{schMbrCualfCd}</if>
        LEFT OUTER JOIN CNET_MBR_INFO C
            ON B.MBR_NO = C.MBR_NO
        INNER JOIN CNET_CODE E
            ON A.sch_class_cd = E.cd
            AND E.SUP_CD = '100494'

        <!--
      <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay)
      or @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)
      or @org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
      INNER JOIN (
                    SELECT  G.SCH_NO
                         FROM CNET_SCH_GRP_MAPP G
                INNER JOIN CNET_BIZ_GRP_INFO H
                             ON G.grp_no = H.grp_no
                INNER JOIN CNET_BIZ_SET_INFO I
                             ON H.grp_no = I.SET_TARGT_NO
                           AND TO_CHAR(SYSDATE,'yyyymmdd') BETWEEN  I.CLAS_START_DAY AND I.CLAS_END_DAY
                         <where>
                             <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
                                 <![CDATA[
                                    AND CLAS_START_DAY between Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') and Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
                                    or CLAS_END_DAY between Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') and Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
                                ]]>
                             </if>
                             <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isEmpty(clasEndDay)">
                                 <![CDATA[
                                    AND CLAS_START_DAY >= Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '')
                                ]]>
                             </if>
                             <if test="@org.apache.commons.lang3.StringUtils@isEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
                                 <![CDATA[
                                    AND CLAS_END_DAY <= Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
                                ]]>
                             </if>
                         <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
                            AND REGEXP_LIKE(H.grp_nm,#{grpNm})
                         </if>
                         </where>
                        GROUP BY G.SCH_NO
                ) Y
              ON A.SCH_NO = Y.SCH_NO
       </if>
       -->

        <where>

            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schNm)">AND REGEXP_LIKE(A.sch_nm,#{schNm})</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schClassCd)">AND A.sch_class_cd = #{schClassCd}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(sidoNm)">AND A.sido_nm = #{sidoNm}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(sgguNm)">AND A.sggu_nm = #{sgguNm}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(useYn)">AND A.use_yn = #{useYn}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schCd)">AND A.sch_no = #{schCd}</if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(userId)">AND REGEXP_LIKE(C.id,#{userId})</if>


            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
                <![CDATA[
                AND TO_CHAR(A.REG_DTM, 'YYYYMMDD') between Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') and Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isEmpty(clasEndDay)">
                <![CDATA[
            AND TO_CHAR(A.REG_DTM, 'YYYYMMDD') >= Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '')
        ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
                <![CDATA[
                AND TO_CHAR(A.REG_DTM, 'YYYYMMDD') <= Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
            ]]>
            </if>

        </where>
        ORDER BY A.REG_DTM DESC nulls last
    </select>


    <!-- 관리자 학교 상세 조회용 쿼리 -->
    <select id="retrieveSchInfoDetail" parameterType="kr.or.career.mentor.domain.SchInfo" resultType="kr.or.career.mentor.domain.SchInfoDTO">
        SELECT  A.sch_no,            A.sch_nm,            A.sch_class_cd,
                E.CD_NM AS sch_class_nm,
                A.sido_nm,
                A.sggu_nm,            A.umdng_nm,            A.post_cd,            A.loca_addr, A.loca_detail_addr,
                A.cont_tel,            A.site_url,            A.found_day,          A.use_yn, A.device_type, A.join_class
                , (select cd_nm from cnet_code where cd = a.device_type ) as device_type_cd_nm
                , (select cd_nm from cnet_code where cd = a.join_class ) as join_class_cd_nm
            ,  (SELECT COUNT(*) FROM CNET_CLAS_ROOM_INFO S WHERE S.SCH_NO = A.SCH_NO) AS CLASS_CNT
            , B.TEACHER_CNT, B.STUDENT_CNT,
            G.ID AS USER_ID,
            G.NM AS USERNAME,
            G.Email_Addr,
            G.TEL,
            G.MBR_NO,
            H.DEVICE_TYPE_HOLD,
            A.REG_DTM,
            I.SCH_CLSF_CHRSTC_NM
          FROM CNET_SCH_INFO A
    INNER JOIN  (SELECT #{schNo} AS SCH_NO, SUM(DECODE(S3.MBR_CLASS_CD,'100859',1,0)) AS TEACHER_CNT, SUM(DECODE(S3.MBR_CLASS_CD,'100858',1,0)) AS STUDENT_CNT
                   FROM CNET_CLAS_ROOM_REG_REQ_HIST S1
             INNER JOIN CNET_CLAS_ROOM_INFO S2
                     ON S1.CLAS_ROOM_SER = S2.CLAS_ROOM_SER
             INNER JOIN CNET_MBR_INFO S3
                     ON S1.REQ_MBR_NO = S3.MBR_NO
                  WHERE S2.SCH_NO = #{schNo}
                    AND S1.REG_STAT_CD = '101526') B
            ON A.SCH_NO = B.SCH_NO
    INNER JOIN CNET_CODE E
             ON A.sch_class_cd = E.cd
            AND E.SUP_CD = '100494'
    LEFT OUTER JOIN CNET_MBR_SCH_CUALF F
        ON A.SCH_NO = F.SCH_NO

    LEFT OUTER JOIN CNET_MBR_INFO G
        ON F.MBR_NO = G.MBR_NO
    LEFT OUTER JOIN
        (SELECT SCH_NO, WM_CONCAT(CD_NM) AS DEVICE_TYPE_HOLD FROM CNET_SCH_DVC_STAT SDS
        INNER JOIN CNET_CODE CC ON SDS.DEVICE_TYPE = CC.CD GROUP BY SCH_NO) H
        ON A.SCH_NO = H.SCH_NO
    LEFT OUTER JOIN
        (SELECT CSCI.SCH_NO, WM_CONCAT(CD_NM) AS SCH_CLSF_CHRSTC_NM FROM CNET_SCH_CLSF_CHRSTC_INFO CSCI
        INNER JOIN CNET_CODE CC ON CSCI.SCH_CHRSTC_CD = CC.CD GROUP BY CSCI.SCH_NO) I
        ON A.SCH_NO = I.SCH_NO
        <where>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schMbrCualfCd)">AND F.sch_mbr_cualf_cd = #{schMbrCualfCd}</if>
        </where>
    </select>


    <!-- 학교 조회 -->
    <select id="retrieveSchInfo" parameterType="kr.or.career.mentor.domain.SchInfo" resultType="kr.or.career.mentor.domain.SchInfo">
        SELECT
            A.sch_no,
            A.sch_nm,
            A.sch_class_cd,
            A.sido_nm,
            A.sggu_nm,
            A.umdng_nm,
            A.post_cd,
            A.loca_addr,
            A.loca_detail_addr,
            A.cont_tel,
            A.site_url,
            A.found_day,
            A.use_yn,
            A.device_type,
            A.join_class,
            C.ID AS USER_ID,
            C.NM AS USERNAME,
            C.Email_Addr,
            C.TEL,
            C.MBR_NO,
            H.DEVICE_TYPE_HOLD
        FROM cnet_sch_info A
        LEFT OUTER JOIN CNET_MBR_SCH_CUALF B
            ON A.SCH_NO = B.SCH_NO
        LEFT OUTER JOIN CNET_MBR_INFO C
            ON B.MBR_NO = C.MBR_NO
        LEFT OUTER JOIN
            (SELECT SCH_NO, WM_CONCAT(DEVICE_TYPE) AS DEVICE_TYPE_HOLD FROM CNET_SCH_DVC_STAT GROUP BY SCH_NO) H
            ON A.SCH_NO = H.SCH_NO
        WHERE A.sch_no = #{schNo} AND B.Sch_Mbr_Cualf_Cd = '101699'
    </select>


    <!-- 학교 추가 -->
    <insert id="insertSchInfo" parameterType="kr.or.career.mentor.domain.SchInfo">
        INSERT INTO CNET_SCH_INFO (
            sch_no,
            sch_nm,
            sch_class_cd,
            sido_nm,
            sggu_nm,
            umdng_nm,
            post_cd,
            loca_addr,
            loca_detail_addr,
            cont_tel,
            site_url,
            found_day,
            use_yn,
            device_type,
            join_class
        )
        VALUES (
            #{schNo},
            #{schNm, jdbcType=VARCHAR},
            #{schClassCd, jdbcType=VARCHAR},
            #{sidoNm, jdbcType=VARCHAR},
            #{sgguNm, jdbcType=VARCHAR},
            #{umdngNm, jdbcType=VARCHAR},
            #{postCd, jdbcType=VARCHAR},
            #{locaAddr, jdbcType=VARCHAR},
            #{locaDetailAddr, jdbcType=VARCHAR},
            #{contTel, jdbcType=VARCHAR},
            #{siteUrl, jdbcType=VARCHAR},
            Regexp_Replace(#{foundDay, jdbcType=VARCHAR}, '[[:punct:]]', ''),
            #{useYn, jdbcType=VARCHAR},
            #{deviceType, jdbcType=VARCHAR},
            #{joinClass, jdbcType=VARCHAR}
        )
    <selectKey keyProperty="schNo" resultType="string" order="BEFORE">
        SELECT LPAD(SQ_SCH_INFO.NEXTVAL,10,'0') FROM DUAL
    </selectKey>
    </insert>

    <update id="updateSchInfo" parameterType="kr.or.career.mentor.domain.SchInfo">
    UPDATE CNET_SCH_INFO
            SET
            sch_nm = #{schNm, jdbcType=VARCHAR},
            sch_class_cd = #{schClassCd, jdbcType=VARCHAR},
            sido_nm = #{sidoNm, jdbcType=VARCHAR},
            sggu_nm = #{sgguNm, jdbcType=VARCHAR},
            umdng_nm = #{umdngNm, jdbcType=VARCHAR},
            post_cd = #{postCd, jdbcType=VARCHAR},
            loca_addr = #{locaAddr, jdbcType=VARCHAR},
            loca_detail_addr = #{locaDetailAddr, jdbcType=VARCHAR},
            cont_tel = #{contTel, jdbcType=VARCHAR},
            site_url = #{siteUrl, jdbcType=VARCHAR},
            found_day = Regexp_Replace(#{foundDay, jdbcType=VARCHAR}, '[[:punct:]]', ''),
            use_yn = #{useYn, jdbcType=VARCHAR},
            device_type = #{deviceType, jdbcType=VARCHAR},
            join_class = #{joinClass, jdbcType=VARCHAR}
     WHERE sch_no = #{schNo}
    </update>


    <!-- 학교 삭제 -->
    <delete id="deleteSchInfo">
        DELETE
        FROM cnet_sch_info
        WHERE 1 = 1
            AND sch_no = #{schNo}
    </delete>

    <select id="excelDownListSchInfoWithGroup" parameterType="kr.or.career.mentor.domain.BizGrpSearch" resultMap="schInfoWithGroup">
        <![CDATA[
        SELECT
                ROW_NUMBER() OVER(ORDER BY A.SCH_NM, A.SCH_NO, D.SET_TARGT_CD, C.GRP_NM) AS RN
              , A.SIDO_NM
              , A.LOCA_ADDR
              , A.LOCA_DETAIL_ADDR
              , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '100494' AND Z.CD = A.SCH_CLASS_CD) AS SCH_CLASS_CD_NM
              , A.SCH_NM
              , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101599' AND Z.CD = D.SET_TARGT_CD) AS SET_TARGT_CD_NM
              , C.GRP_NM
              , NVL(D.CLAS_CNT,0) as CLAS_CNT
              , NVL(E.CLAS_APPL_CNT, 0) AS CLAS_APPL_CNT
              , TO_CHAR(TO_DATE(D.CLAS_START_DAY, 'YYYYMMDD'), 'YYYY.MM.DD') || ' ~ ' || TO_CHAR(TO_DATE(D.CLAS_END_DAY, 'YYYYMMDD'), 'YYYY.MM.DD') AS CLAS_PERIOD
              , NVL(G.CO_NM, '-') AS CO_NM
              , A.SCH_NO
              , C.GRP_NO
              , D.SET_SER
              , NVL(I.LECT_SER,'') as LECT_SER
              , I.LECT_TIMS
              , I.CLAS_ROOM_SER
              , I.LECT_DATE_TIME
              , I.LECT_TITLE
              , ( CASE WHEN A.DEVICE_TYPE = '101683' THEN '욱성'
                       WHEN A.DEVICE_TYPE = '101684' THEN '웹캠'
                       END ) AS DEVICE_TYPE
            , FN_SCH_PRSN_INFO(A.SCH_NO, 'NM') AS USERNAME
            , FN_SCH_PRSN_INFO(A.SCH_NO, 'MOBILE') AS MOBILE
          FROM CNET_SCH_INFO A
         LEFT OUTER JOIN CNET_SCH_GRP_MAPP B ON (B.SCH_NO = A.SCH_NO)
         LEFT OUTER JOIN CNET_BIZ_GRP_INFO C ON (C.GRP_NO = B.GRP_NO)
         LEFT OUTER JOIN (
                        SELECT * FROM CNET_BIZ_SET_INFO
        ]]>
        <where>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
            <![CDATA[
                AND CLAS_START_DAY between Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') and Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
                or CLAS_END_DAY between Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '') and Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isEmpty(clasEndDay)">
            <![CDATA[
            AND CLAS_START_DAY >= Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '')
        ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isEmpty(clasStartDay) and @org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
            <![CDATA[
                AND CLAS_END_DAY <= Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
            ]]>
        </if>
        </where>
        <![CDATA[
                         )D ON (D.SET_TARGT_NO = C.GRP_NO)
          LEFT OUTER JOIN CNET_LECT_APPL_CNT E ON (E.SCH_NO = A.SCH_NO AND E.SET_SER = D.SET_SER)
         LEFT OUTER JOIN CNET_MBR_INFO F ON (F.MBR_NO = C.INST_MBR_NO)
          LEFT OUTER JOIN CNET_CO_INFO G ON (G.CO_NO = F.POS_CO_NO)
        LEFT OUTER JOIN
                        (SELECT IB.SCH_NO,
                                IB.CLAS_ROOM_SER,
                                IA.SET_SER,
                                IA.LECT_SER,
                                IA.LECT_TIMS,
                                TO_CHAR (
                                TO_DATE ( (IE.LECT_DAY || IE.LECT_START_TIME),
                                'YYYYMMDDHH24MI'),
                                'YYYY.MM.DD HH24:MI')
                                || ' ~ '
                                || TO_CHAR (TO_DATE (IE.LECT_END_TIME, 'HH24MI'), 'HH24:MI')
                                AS LECT_DATE_TIME,
                                ID.LECT_TITLE
                        FROM    CNET_LECT_APPL_INFO IA
                                    INNER JOIN CNET_CLAS_ROOM_INFO IB
                                        ON IA.CLAS_ROOM_SER = IB.CLAS_ROOM_SER
                                    INNER JOIN CNET_BIZ_SET_INFO IC ON IC.SET_SER = IA.SET_SER
                                    INNER JOIN CNET_LECT_INFO ID
                                        ON IA.lect_ser = ID.lect_ser
                                    INNER JOIN CNET_LECT_SCHD_INFO IE
                                        ON     IE.LECT_SER = IA.LECT_SER
                                            AND IE.lect_tims = ia.lect_tims
                        WHERE   IA.APPL_STAT_CD IN ('101575', '101576', '101577')
                        ) I
                            ON (a.sch_no = I.sch_no AND D.SET_SER = I.SET_SER)
        ]]>
        <where>
            <!--
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasStartDay)">
                <![CDATA[
                AND D.CLAS_START_DAY <= Regexp_Replace(#{clasStartDay}, '[[:punct:]]', '')
                ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasEndDay)">
                <![CDATA[
                AND D.CLAS_END_DAY >= Regexp_Replace(#{clasEndDay}, '[[:punct:]]', '')
                ]]>
            </if>
            -->
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
                AND REGEXP_LIKE(C.GRP_NM,#{grpNm})
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schClassCd)">
                AND A.SCH_CLASS_CD = #{schClassCd}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(sidoNm)">
                AND REGEXP_LIKE(A.SIDO_NM,#{sidoNm})
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schNm)">
                AND REGEXP_LIKE(A.sch_nm,#{schNm})
            </if>
        </where>
    </select>

    <select id="excelDownSubListSchInfoWithGroup" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.SubSchInfoExcelDTO">
        SELECT
                TO_CHAR(TO_DATE((A.LECT_DAY || A.LECT_START_TIME), 'YYYYMMDDHH24MI'), 'YYYY.MM.DD HH24:MI') || ' ~ ' || TO_CHAR(TO_DATE(A.LECT_END_TIME, 'HH24MI'), 'HH24:MI') AS LECT_DATE_TIME
              , B.LECT_TITLE
          FROM CNET_LECT_SCHD_INFO A
         INNER JOIN CNET_LECT_INFO B ON (B.LECT_SER = A.LECT_SER)
         INNER JOIN (
                     SELECT DISTINCT X.LECT_SER, X.LECT_TIMS
                       FROM CNET_LECT_APPL_INFO X
                      WHERE 1 = 1
                        AND X.CLAS_ROOM_SER IN (SELECT Z.CLAS_ROOM_SER FROM CNET_CLAS_ROOM_INFO Z WHERE Z.SCH_NO = #{schNo})
                        AND X.SET_SER = #{setSer}
                        AND X.APPL_STAT_CD IN ('101575', '101576', '101577')
                     ) C ON (C.LECT_SER = A.LECT_SER AND C.LECT_TIMS = A.LECT_TIMS)
    </select>



    <!-- 회원 학교 자격 -->
    <insert id="insertSchCualf" parameterType="kr.or.career.mentor.domain.SchInfo">
        <selectKey keyProperty="schMbrRollSer" resultType="string" order="BEFORE">
            SELECT LPAD(SQ_MBR_SCH_CUALF.NEXTVAL,10,'0') FROM DUAL
        </selectKey>
        INSERT INTO CNET_MBR_SCH_CUALF
        (
            SCH_MBR_ROLL_SER,
            MBR_NO,
            SCH_NO,
            SCH_MBR_CUALF_CD,
            CUALF_REG_STAT_CD,
            USE_YN,
            REG_DTM,
            REG_MBR_NO,
            AUTH_DTM,
            AUTH_MBR_NO
        ) VALUES(
            #{schMbrRollSer},
            #{mbrNo, jdbcType=VARCHAR},
            #{schNo, jdbcType=VARCHAR},
            #{schMbrCualfCd, jdbcType=VARCHAR},
            #{cualfRegStatCd, jdbcType=VARCHAR},
            'Y',
            SYSDATE,
            #{regMbrNo, jdbcType=VARCHAR},
            DECODE(#{cualfRegStatCd, jdbcType=VARCHAR}, '101702', SYSDATE, NULL),
            DECODE(#{cualfRegStatCd, jdbcType=VARCHAR}, '101702', #{regMbrNo, jdbcType=VARCHAR}, NULL)
        )
    </insert>

    <!-- 회원 학교 자격 삭제 -->
    <delete id="deleteSchCualf" parameterType="kr.or.career.mentor.domain.SchInfo">
        UPDATE CNET_MBR_SCH_CUALF
        SET USE_YN = 'N'
        , REG_DTM = SYSDATE
        , REG_MBR_NO = #{mbrNo}
        WHERE SCH_MBR_ROLL_SER = #{schMbrRollSer}
    </delete>


    <!-- 학교 보유장비 삭제 -->
    <delete id="deleteSchDevice" parameterType="kr.or.career.mentor.domain.SchInfo">
        DELETE
        FROM CNET_SCH_DVC_STAT
        WHERE sch_no = #{schNo}
    </delete>
    <!-- 학교 보유장비 등록 -->
    <insert id="insertSchDevice" parameterType="kr.or.career.mentor.domain.SchInfo">
        INSERT INTO CNET_SCH_DVC_STAT
        (
        SCH_NO,
        DEVICE_TYPE,
        REG_MBR_NO,
        REG_DTM
        ) VALUES(
        #{schNo, jdbcType=VARCHAR},
        #{deviceTypeHold, jdbcType=VARCHAR},
        #{mbrNo, jdbcType=VARCHAR},
        SYSDATE
        )
    </insert>



    <!-- 학교 특성 등록 -->
    <insert id="insertSchJobGroup" parameterType="kr.or.career.mentor.domain.SchJobGroup">
        MERGE INTO CNET_SCH_CLSF_CHRSTC_INFO
        USING dual ON (SCH_NO = #{schNo, jdbcType=VARCHAR} AND SCH_CHRSTC_CD = #{schChrstcCd, jdbcType=INTEGER})
        WHEN MATCHED THEN
        UPDATE
        SET
        REG_MBR_NO = #{schNo, jdbcType=VARCHAR},
        REG_DTM = SYSDATE
        WHEN NOT MATCHED THEN
        INSERT (
        SCH_NO,
        SCH_CHRSTC_CD,
        REG_MBR_NO,
        REG_DTM
        ) VALUES(
        #{schNo, jdbcType=VARCHAR},
        #{schChrstcCd, jdbcType=VARCHAR},
        #{regMbrNo, jdbcType=VARCHAR},
        SYSDATE
        )
    </insert>

    <select id="listSchJobGroupInfo" parameterType="kr.or.career.mentor.domain.SchJobGroup" resultType="kr.or.career.mentor.domain.SchJobGroup">
        SELECT
            SCH_NO,
            SCH_CHRSTC_CD,
            REG_MBR_NO,
            REG_DTM,
            (SELECT CD_NM FROM CNET_CODE WHERE CD = SCH_CHRSTC_CD) AS SCH_CHRSTC_NM
        FROM CNET_SCH_CLSF_CHRSTC_INFO
        WHERE SCH_NO = #{schNo}
    </select>
    <delete id="deleteSchJobGroup" parameterType="kr.or.career.mentor.domain.SchInfo">
        DELETE
        FROM CNET_SCH_CLSF_CHRSTC_INFO
        WHERE SCH_NO = #{schNo}
    </delete>
</mapper>