<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.career.mentor.dao.LectureInfomationMapper">

    <!-- 마감,폐지 대상 정보 -->
    <resultMap id="closeableLectureTime" type="kr.or.career.mentor.domain.LectTimsInfo" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <id column="LECT_TIMS" property="lectTims"/>
        <result property="lectDayTime" column="LECT_DAY_START"/>
        <association property="lectInfo" javaType="kr.or.career.mentor.domain.LectInfo">
            <id column="LECT_SER" property="lectSer"/>
            <result column="MAX_APPL_CNT" property="maxApplCnt"/>
            <result column="LECT_TITLE" property="lectTitle"/>
            <result column="LECT_NAME" property="lectrNm"/>
            <result column="LECT_DAY_START" property="lectStartDtm"/>
            <result column="LECT_DAY_END" property="lectEndDtm"/>
            <association property="reciever" javaType="kr.or.career.mentor.domain.MessageReciever">
                <result column="LECTR_MBR_NO" property="memberNo"/>
                <result column="LECT_EMAIL_ADDR" property="mailAddress"/>
                <result column="LECT_MOBILE" property="telNo"/>
                <result column="LECT_TKN_VAL" property="deviceToken"/>
                <result column="LECT_OS_INFO" property="osType"/>
            </association>
        </association>
        <collection property="lectApplInfos" ofType="kr.or.career.mentor.domain.LectApplInfo">
            <id column="LECT_SER" property="lectSer"/>
            <id column="LECT_TIMS" property="lectTims"/>
            <id column="CLAS_ROOM_SER" property="clasRoomSer"/>
            <result column="APPL_MBR_NO" property="applMbrNo"/>
            <result column="SET_SER" property="setSer"/>
            <result column="APPL_MBR_NO" property="applMbrNo"/>
            <result column="APPL_STAT_CD" property="applStatCd"/>
            <result column="SCH_NO" property="schNo"/>
            <result column="REG_DTM" property="regDtm"/>
            <result column="APPL_CNT" property="clasApplCnt"/>
            <result column="APPL_ID" property="applId"/>
            <result column="APPL_CLASS_CD" property="applClassCd"/>
            <association property="reciever" javaType="kr.or.career.mentor.domain.MessageReciever">
                <result column="APPL_MBR_NO" property="memberNo"/>
                <result column="APPL_EMAIL_ADDR" property="mailAddress"/>
                <result column="APPL_MOBILE" property="telNo"/>
                <result column="APPL_TKN_VAL" property="deviceToken"/>
                <result column="APPL_OS_INFO" property="osType"/>
            </association>
            <collection property="clasRoomList" ofType="kr.or.career.mentor.domain.ClasRoomRegReqHist">
                <id column="CLAS_ROOM_SER" property="clasRoomSer"/>
                <id column="CLAS_REG_ID" property="clasRegId"/>
            </collection>
        </collection>
    </resultMap>

    <!-- 검색조건정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectureSearch" id="resultLectureSearch" autoMapping="true"/>

    <!-- 수업요청시간정보 -->
    <!--<resultMap type="kr.or.career.mentor.domain.LectReqTimeInfo" id="lectReqTimeInfo" autoMapping="true"/>-->

    <!-- 수업요청정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectReqInfo" id="resultLectReqInfo" autoMapping="true">
        <id column="REQ_SER" property="reqSer"/>
        <collection property="lectReqTimeInfoDomain" column="{reqSer=REQ_SER}" javaType="java.util.ArrayList" ofType="resultLectReqTimeInfo" select="listLectReqTimeInfo"/>
    </resultMap>


    <!-- 수업일시정보 >>> 수업차수정보 >>> 수업정보 -->
    <!-- 수업일시정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectSchdInfo" id="resultLectSchdInfo" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <id column="LECT_TIMS" property="lectTims"/>
        <id column="SCHD_SEQ" property="schdSeq"/>
        <association property="lectTimsInfo" resultMap="resultLectTimsInfo" autoMapping="true"/>
    </resultMap>

    <!-- 수업차수정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectTimsInfo" id="resultLectTimsInfo" autoMapping="true">
        <id column="LECT_SER" property="lectSer" />
        <id column="LECT_TIMS" property="lectTims" />
        <association property="lectInfo" resultMap="resultLectInfo" autoMapping="true"/>
    </resultMap>

    <resultMap type="kr.or.career.mentor.domain.LectTimsInfo" id="resultLectTimsData" autoMapping="true">
        <id column="LECT_SER" property="lectSer" />
        <id column="LECT_TIMS" property="lectTims" />
        <collection property="lectSchdInfo" resultMap="resultLectSchdInfo2" autoMapping="true"/>
    </resultMap>

    <!-- 수업정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectInfo" id="resultLectInfo" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
    </resultMap>

    <resultMap type="kr.or.career.mentor.domain.LectInfo" id="resultLectData" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <collection property="lectTimsInfoList" resultMap="resultLectTimsData" autoMapping="true"/>
    </resultMap>


    <!-- 수업정보  >>> 수업차수정보 >>> 수업일시정보 -->
    <!-- 수업정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectInfo" id="resultLectInfo2" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <association property="lectTimsInfo" resultMap="resultLectTimsInfo2" autoMapping="true"/>
    </resultMap>

    <!-- 수업차수정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectTimsInfo" id="resultLectTimsInfo2" autoMapping="true">
        <id column="LECT_SER" property="lectSer" />
        <id column="LECT_TIMS" property="lectTims" />
        <collection property="lectSchdInfo" column="{lectSer=LECT_SER,lectTims=LECT_TIMS}" javaType="java.util.ArrayList" ofType="resultLectSchdInfo2" select="listLectSchdInfo"/>
    </resultMap>

    <!-- 수업일시정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectSchdInfo" id="resultLectSchdInfo2" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <id column="LECT_TIMS" property="lectTims"/>
        <id column="SCHD_SEQ" property="schdSeq"/>
    </resultMap>

    <!-- 회원정보 -->
    <resultMap id="user" type="kr.or.career.mentor.domain.User" autoMapping="true">
        <id column="MBR_NO" property="mbrNo"/>
    </resultMap>

    <!--&lt;!&ndash; 직업정보 &ndash;&gt;-->
    <resultMap type="kr.or.career.mentor.domain.MbrJobInfo" id="resultMbrJobInfo" autoMapping="true">
    </resultMap>

    <!-- 수업신청정보 -->
    <resultMap id="lectApplInfo" type="kr.or.career.mentor.domain.LectApplInfo" autoMapping="true" extends="user">

    </resultMap>

    <resultMap type="kr.or.career.mentor.domain.BizGrpInfo" id="resultBizGrpInfo" autoMapping="true">
        <id column="grp_no" property="grpNo"/>
    </resultMap>

    <resultMap type="kr.or.career.mentor.domain.LectApplCnt" id="resultLectApplCnt" autoMapping="true">
    </resultMap>

    <resultMap type="kr.or.career.mentor.domain.CoInfo" id="resultCoInfo" autoMapping="true">
    </resultMap>

    <resultMap type="kr.or.career.mentor.domain.BizSetInfo" id="resultBizSetInfo" autoMapping="true">
        <id column="set_ser" property="setSer"/>
        <association property="bizGrpInfo" resultMap="resultBizGrpInfo" autoMapping="true"/>
        <association property="lectApplCnt" resultMap="resultLectApplCnt" autoMapping="true"/>
        <association property="coInfo" resultMap="resultCoInfo" autoMapping="true"/>
    </resultMap>


    <!-- 수업일시정보 >>> 수업차수정보 >>> 수업정보 -->
    <!-- 수업일시정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectSchdInfo" id="resultLectSchdInfo3" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <id column="LECT_TIMS" property="lectTims"/>
        <id column="SCHD_SEQ" property="schdSeq"/>
        <association property="lectTimsInfo" resultMap="resultLectTimsInfo3" autoMapping="true"/>
    </resultMap>

    <!-- 수업차수정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectTimsInfo" id="resultLectTimsInfo3" autoMapping="true">
        <id column="LECT_SER" property="lectSer" />
        <id column="LECT_TIMS" property="lectTims" />
        <association property="lectInfo" resultMap="resultLectInfo3" autoMapping="true"/>
    </resultMap>

    <!-- 수업정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectInfo" id="resultLectInfo3" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <result property="lectrMbrNo" column="LECTR_MBR_NO"/>
        <collection property="mbrJobInfo" column="{mbrNo=LECTR_MBR_NO}" javaType="java.util.ArrayList" ofType="resultMbrJobInfo" select="listMbrJobInfo"/>
    </resultMap>

    <resultMap id="resultComFileInfo" type="kr.or.career.mentor.domain.ComFileInfo" autoMapping="true">
        <id column="FILE_SER" property="fileSer"/>
    </resultMap>

    <resultMap id="resultLectPicInfo" type="kr.or.career.mentor.domain.LectPicInfo" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <id column="FILE_SER" property="fileSer"/>
        <association property="comFileInfo" resultMap="resultComFileInfo" autoMapping="true"/>
    </resultMap>

    <!-- 수업정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectInfo" id="resultLectInfo4" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <collection property="listLectPicInfo" column="{lectSer=LECT_SER}" javaType="java.util.ArrayList" ofType="resultLectPicInfo" select="retireveLectPicInfo"/>
    </resultMap>

    <!-- 수업정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectInfo" id="resultLectInfo5" autoMapping="true">
        <id column="LECT_SER" property="lectSer"/>
        <collection property="listLectPicInfo" column="{lectSer=LECT_SER}" javaType="java.util.ArrayList" ofType="resultLectPicInfo" select="retireveLectPicInfo"/>
    </resultMap>

    <!-- 수업정보 상세 조회 (차수/회차)-->
    <resultMap id="resultLectureTimsInfo" type="kr.or.career.mentor.domain.LectTimsInfo"  autoMapping="true">
        <id column="LECT_SER" property="lectSer"></id>
        <id column="LECT_TIMS" property="lectTims"></id>
        <collection property="lectSchdInfo" column="{lectSer=LECT_SER,lectTims=LECT_TIMS}" javaType="java.util.ArrayList" ofType="kr.or.career.mentor.domain.LectSchdInfo"  select="lectureSchdList"/>
    </resultMap>

    <!-- 수업정보 -->
    <resultMap type="kr.or.career.mentor.domain.LectReqInfo" id="resultLectOpenReqInfo" autoMapping="true">
        <id column="REQ_SER" property="reqSer"/>
        <collection property="comFileInfo" resultMap="resultComFileInfo" autoMapping="true"/>
    </resultMap>


    <select id="monthlyLectureInfo" parameterType="map" resultType="hashmap">
        SELECT T1.days, T1.weekday, T2.class
          FROM
                ( SELECT TO_CHAR(days,'dd') as days, TO_CHAR(days,'DY','NLS_DATE_LANGUAGE=korean') as weekday
                    FROM
                        (     SELECT BASE_MON + LEVEL - 1 AS DAYS
                                FROM   ( SELECT TO_DATE (#{date}, 'YYYYMM') AS BASE_MON FROM DUAL )
                          CONNECT BY BASE_MON + LEVEL - 1 &lt;= LAST_DAY (BASE_MON) )
                 ) T1
LEFT OUTER JOIN
                ( SELECT DISTINCT SUBSTR(LECT_DAY,7,2) AS days, 'lesson' as class
                    FROM CNET_LECT_SCHD_INFO A
              INNER JOIN CNET_LECT_INFO B
                      ON A.LECT_SER = B.LECT_SER
                   WHERE A.LECT_DAY LIKE #{date}||'%'
            <choose>
                <when test="mbrCualfCd eq '101502' or mbrCualfCd eq '101503'">
                     AND B.LECTR_MBR_NO = #{mbrNo} /*개인멘토, 소속멘토*/
                </when>
                <when test="mbrCualfCd eq '101501'">
                     AND B.LECTR_MBR_NO IN ( SELECT MBR_NO FROM CNET_MBR_INFO S WHERE POS_CO_NO = #{posCoNo} )
                </when>
            </choose>
                 ) T2
             ON T1.days = T2.days
       ORDER BY T1.days
    </select>

    <select id="dailyLectureInfo" parameterType="map" resultMap="resultLectSchdInfo">
        <include refid="listCalculateLecture"></include>
        WHERE C.LECT_DAY  = #{date}
        <choose>
            <when test="mbrCualfCd eq '101502' or mbrCualfCd eq '101503'">
                 AND A.LECTR_MBR_NO = #{mbrNo} /*개인멘토, 소속멘토*/
            </when>
            <when test="mbrCualfCd eq '101501'">
                 AND A.LECTR_MBR_NO IN ( SELECT MBR_NO FROM CNET_MBR_INFO S WHERE POS_CO_NO = #{posCoNo} )
            </when>
        </choose>
    </select>

    <select id="selectParticipant" parameterType="map" resultType="int">
        select  count(1) as cnt
        from    CNET_LECT_APPL_INFO a
                    inner join CNET_LECT_TIMS_INFO b
                        on a.lect_ser = b.lect_ser
                        and a.lect_tims = b.lect_tims
        where   a.lect_ser = #{lectSer}
        and     a.lect_tims = #{lectTims}
        and     a.appl_stat_cd in ('101576','101577')
        and     a.appl_mbr_no in
        <foreach collection="users" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <sql id="selectListLect">
        /* paging */
        SELECT
                  C.LECT_INTDC_INFO
                , C.LECT_SUST_INFO
                , C.MAX_APPL_CNT
                , C.MAX_OBSV_CNT
                , C.LECT_REQ_SER
                , C.REG_DTM
                , C.REG_MBR_NO
                , C.CHG_DTM
                , C.CHG_MBR_NO
                , C.LECT_SER
                , C.LECT_TYPE_CD
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM
                , C.LECT_TARGT_CD
                , C.LECT_TITLE
                , C.LECT_START_DTM
                , C.LECT_END_DTM
                , ROUND((TO_DATE(A.LECT_DAY||A.LECT_END_TIME,'YYYYMMDDHH24MI') - TO_DATE(A.LECT_DAY||A.LECT_START_TIME,'YYYYMMDDHH24MI') ) * 24 * 60) AS LECT_RUN_TIME
                , C.LECTR_MBR_NO
                , C.LECTR_NM
                , C.LECTR_JOB_NO
                , (SELECT Z.JOB_NM FROM CNET_JOB_INFO Z WHERE Z.JOB_NO = C.LECTR_JOB_NO) AS LECTR_JOB_NM
                , C.LECT_PIC_PATH
                , C.LECT_OUTLN_INFO
                , B.LECT_TIMS
                , A.LECT_STAT_CD
                , CASE WHEN (SELECT     COUNT(1)
                                FROM    CNET_LECT_APPL_INFO Z
                                WHERE   Z.LECT_SER = A.LECT_SER
                                AND     Z.LECT_TIMS = A.LECT_TIMS
                                AND     Z.APPL_STAT_CD IN ('101576','101577')
                                AND     Z.APPL_CLASS_CD = '101715'
                                GROUP BY Z.LECT_SER,Z.LECT_TIMS)  >= B.MAX_APPL_CNT AND B.LECT_STAT_CD ='101543'
                    THEN '정원마감'
                    ELSE
                        (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = A.LECT_STAT_CD)
                    END AS LECT_STAT_CD_NM
                /*, (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM*/
                , A.SCHD_SEQ
                , A.LECT_DAY
                , A.LECT_START_TIME
                , A.LECT_END_TIME
                , A.MC_NO
                , A.STDO_NO
                , A.LECT_CNCL_RSN_SUST
                , A.LECT_SESS_ID
                , D.MBR_CUALF_CD
                , (SELECT
                    CD_NM
                FROM CNET_JOB_CLSF_CD
                WHERE 1 = 1
                AND CD_LV = 1
                START WITH CD = H.JOB_CLSF_CD
                CONNECT BY NOCYCLE PRIOR SUP_CD = CD) AS LECTR_JOB_CLSF_NM
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(orderBy)">
            <if test="@org.apache.commons.lang3.StringUtils@equals(orderBy, 'asc')">
                , ROW_NUMBER() OVER(ORDER BY A.LECT_DAY ASC, A.LECT_START_TIME ASC) AS rn
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(orderBy, 'desc')">
                , ROW_NUMBER() OVER(ORDER BY A.LECT_DAY DESC, A.LECT_START_TIME DESC) AS rn
            </if>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isEmpty(orderBy)">
            , ROW_NUMBER() OVER(ORDER BY A.LECT_DAY DESC, A.LECT_START_TIME DESC) AS rn
        </if>
        /* paging */
        FROM CNET_LECT_SCHD_INFO A
                INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
                INNER JOIN CNET_LECT_INFO C ON (C.LECT_SER = B.LECT_SER)
                INNER JOIN CNET_MBR_INFO D ON (D.MBR_NO = C.LECTR_MBR_NO)
                LEFT OUTER JOIN CNET_MBR_JOB_INFO F ON (F.MBR_NO = C.LECTR_MBR_NO)
                LEFT OUTER JOIN CNET_JOB_INFO H ON (H.JOB_NO = F.JOB_NO)
        WHERE 1=1
    </sql>

    <sql id="myClassroomCd">
        SELECT  CLAS_ROOM_SER
                , CLAS_ROOM_CUALF_CD
          FROM CNET_CLAS_ROOM_REG_REQ_HIST
         WHERE REG_STAT_CD= '101526' /*101524 : 수락(승인)*/
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applMbrNo)">
           AND REQ_MBR_NO = #{applMbrNo}
        </if>
    </sql>

    <!-- 수업목록 조회-->
    <select id="listLect" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectSchdInfo3">
        /* LectureInfomationMapper.xml 설명 : 수업목록 조회, ID : listLect, 작성자 : 송민섭, 작성일 : 2015.09.16 */
        <include refid="kr.or.career.mentor.dao.LectureInfomationMapper.selectListLect"></include>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(A.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(expsYn)">
            AND B.EXPS_YN = #{expsYn}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNo)">
            AND C.LECT_GRP_NO = #{grpNo}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101534')">
                    AND C.LECT_TARGT_CD IN ('101534', '101537' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101535')">
                    AND C.LECT_TARGT_CD IN ('101535', '101537' ,'101538', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101536')">
                    AND C.LECT_TARGT_CD IN ('101536', '101538' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101537')">
                    AND C.LECT_TARGT_CD IN ('101534', '101535', '101537', '101538' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101538')">
                    AND C.LECT_TARGT_CD IN ('101535', '101536', '101537', '101538' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101539')">
                    AND C.LECT_TARGT_CD IN ('101534', '101536', '101537', '101538' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101713')">
                    AND C.LECT_TARGT_CD = '101713'
                </when>
            </choose>
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(schoolGrdExList)" >
            AND C.LECT_TARGT_CD NOT IN
            <foreach collection="schoolGrdExList" item="schoolGrdExList"   open="(" close=")" separator=",">
                #{schoolGrdExList}
            </foreach>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolEtcGrd)">
            AND C.LECT_TARGT_CD = #{schoolEtcGrd}
        </if>
        <if test="schdSeq != null">
            AND A.SCHD_SEQ = #{schdSeq}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                AND TO_DATE(#{lectTime},'HH24MI') between TO_DATE(A.LECT_START_TIME,'HH24MI')  AND TO_DATE(A.LECT_END_TIME,'HH24MI')
             ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND C.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND  ( A.LECT_STAT_CD = #{lectStatCd}
            <if test="listType == 3">
                OR A.LECT_STAT_CD = '101550'
            </if>
            )
        </if>
        <if test="exceptLectStatCdList != null and exceptLectStatCdList.size() > 0">
            AND A.LECT_STAT_CD NOT IN
            <foreach collection="exceptLectStatCdList" item="item" index="index" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="lectStatusCds!=null and lectStatusCds.size() > 0">
            AND A.LECT_STAT_CD IN
            <foreach collection="lectStatusCds" item="lectStatusCd" index="index" separator="," open="(" close=")">
                #{lectStatusCd}
            </foreach>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrNo)">
            AND C.LECTR_MBR_NO = #{mbrNo}
        </if>
        <if test="jobChrstcList!=null and jobChrstcList.size() > 0">
            AND D.MBR_NO IN (
            <foreach item="jobChrstcList" index="index" collection="jobChrstcList"  separator="INTERSECT" >
                SELECT MBR_NO FROM CNET_MBR_JOB_CHRSTC_INFO WHERE JOB_CHRSTC_CD =  #{jobChrstcList}
            </foreach>
            )
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(jobNo)">
            AND D.MBR_NO IN (SELECT MBR_NO
                             FROM CNET_MBR_JOB_INFO
                            WHERE JOB_NO IN (
                                              SELECT JOB_NO
                                                FROM CNET_JOB_INFO
                                               WHERE 1 = 1
                                                 AND JOB_CLSF_CD IN (
                                                                      SELECT CD
                                                                        FROM CNET_JOB_CLSF_CD
                                                                       WHERE 1 = 1
                                                                         AND CD_LV = 3
                                                                       START WITH CD = #{jobNo}
                                                                     CONNECT BY NOCYCLE PRIOR CD = SUP_CD
                                                                    )
                                                )
                            )
        </if>
        <!--
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                    AND (C.LECTR_NM LIKE '%' || #{searchKey} || '%' OR F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%' OR F.JOB_NM LIKE '%' || #{searchKey} || '%' OR C.LECT_TITLE LIKE '%' || #{searchKey} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                    AND F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                    AND F.JOB_NM LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                    AND C.LECT_TITLE LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                    AND C.LECTR_NM LIKE '%' || #{searchKey} || '%'
                </when>
            </choose>
        </if>
        -->
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
            AND (
                C.LECTR_NM LIKE '%' || #{searchKey} || '%'
                OR F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                OR F.JOB_NM LIKE '%' || #{searchKey} || '%'
                OR C.LECT_TITLE LIKE '%' || #{searchKey} || '%'
            )
        </if>
        <!-- 직업 초성 검색 -->
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(consonantsVal)">
            AND REGEXP_LIKE(UPPER(C.LECT_TITLE), UPPER(#{consonantsVal}))
        </if>
    </select>

    <!-- 수업목록 조회 총갯수-->
    <select id="listLectCnt" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="integer">
        SELECT COUNT(*)
        FROM
        (
        <include refid="kr.or.career.mentor.dao.LectureInfomationMapper.selectListLect"></include>
        AND A.SCHD_SEQ = '1'
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(A.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(REPLACE(#{searchStDate}, '.', ''), 'YYYYMMDD') AND TO_DATE(REPLACE(#{searchEndDate}, '.', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            AND C.LECT_TARGT_CD = #{schoolGrd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                AND TO_DATE(A.LECT_START_TIME,'HH24MI') >= TO_DATE(#{lectTime},'HH24MI')
             ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND C.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrJob)">
            AND C.LECTR_JOB_NO = #{lectrJob}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND A.LECT_STAT_CD = #{lectStatCd}
        </if>
        )
    </select>
    <!-- 수업개설 및 수정-->
    <update id="saveOpenLect" parameterType="kr.or.career.mentor.domain.LectInfo" >
    <![CDATA[
        MERGE INTO CNET_LECT_INFO  A
            USING DUAL
                   ON (A.LECT_SER = #{lectSer, jdbcType=INTEGER})
             WHEN MATCHED THEN
             UPDATE SET
                 A.LECT_TYPE_CD      =    #{lectTypeCd, jdbcType=VARCHAR}
                ,A.LECT_TARGT_CD     =    #{lectTargtCd, jdbcType=VARCHAR}
                ,A.LECT_TITLE        =    #{lectTitle, jdbcType=VARCHAR}
                ,A.LECTR_NM          =    #{lectrNm, jdbcType=VARCHAR}
                ,A.LECTR_JOB_NO      =    #{lectrJobNo, jdbcType=VARCHAR}
                ,A.LECT_PIC_PATH     =    #{lectPicPath, jdbcType=VARCHAR}
                ,A.LECT_OUTLN_INFO   =    #{lectOutlnInfo, jdbcType=VARCHAR}
                ,A.LECT_INTDC_INFO   =    #{lectIntdcInfo, jdbcType=VARCHAR}
                ,A.LECT_SUST_INFO    =    #{lectSustInfo, jdbcType=VARCHAR}
                ,A.LECT_REQ_SER      =    #{lectReqSer, jdbcType=VARCHAR}
                ,A.CHG_DTM           =    SYSDATE
                ,A.CHG_MBR_NO        =    #{chgMbrNo, jdbcType=VARCHAR}
              WHEN NOT MATCHED THEN
                INSERT (
                              A.LECT_SER
                             ,A.LECT_TYPE_CD
                             ,A.LECT_TARGT_CD
                             ,A.LECT_TITLE
                             ,A.LECTR_NM
                             ,A.LECTR_JOB_NO
                             ,A.LECT_PIC_PATH
                             ,A.LECT_OUTLN_INFO
                             ,A.LECT_INTDC_INFO
                             ,A.LECT_SUST_INFO
                             ,A.REG_DTM
                             ,A.REG_MBR_NO
                             ,A.MAX_APPL_CNT
                             ,A.MAX_OBSV_CNT
                             ,A.LECT_REQ_SER
                        )
                VALUES (
                              SQ_LECT_INFO.NEXTVAL
                             ,#{lectTypeCd, jdbcType=VARCHAR}
                             ,#{lectTargtCd, jdbcType=VARCHAR}
                             ,#{lectTitle, jdbcType=VARCHAR}
                             ,#{lectrNm, jdbcType=VARCHAR}
                             ,#{lectrJobNo, jdbcType=VARCHAR}
                             ,#{lectPicPath, jdbcType=VARCHAR}
                             ,#{lectOutlnInfo, jdbcType=VARCHAR}
                             ,#{lectIntdcInfo, jdbcType=VARCHAR}
                             ,#{lectSustInfo, jdbcType=VARCHAR}
                             ,SYSDATE
                             ,#{regMbrNo, jdbcType=VARCHAR}
                             ,(SELECT MAX_APPL_CNT FROM CNET_CLAS_SET_HIST WHERE HIST_SER = (SELECT MAX(HIST_SER) FROM CNET_CLAS_SET_HIST))
                             ,(SELECT MAX_OBSV_CNT FROM CNET_CLAS_SET_HIST WHERE HIST_SER = (SELECT MAX(HIST_SER) FROM CNET_CLAS_SET_HIST))
    ]]>
                    <choose>
                        <when test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectReqSer)">
                             ,#{lectReqSer, jdbcType=VARCHAR}
                        </when>
                        <otherwise>
                             ,NULL
                        </otherwise>
                    </choose>
                        )
    </update>

    <sql id="selectLectSchdInfo">
    /* paging */
    SELECT
    A.LECT_SER           /* 수업일련번호 */
    , A.LECT_TIMS          /* 수업차수 */
    , A.SCHD_SEQ           /* 일정순서 */
    , A.LECT_TITLE         /* 수업명 */
    , A.LECT_DAY           /* 수업일자 */
    , A.LECT_START_TIME    /* 수업시작시간 */
    , A.LECT_END_TIME      /* 수업종료시간 */
    , A.LECT_STAT_CD       /* 수업상태코드 */
    , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM /* 수업상태코드명 */
    , CASE WHEN ((
                    SELECT     COUNT(1)
                    FROM    CNET_LECT_APPL_INFO Z
                    WHERE   Z.LECT_SER = A.LECT_SER
                    AND     Z.LECT_TIMS = A.LECT_TIMS
                    AND     Z.APPL_STAT_CD IN ('101576','101577')
                    GROUP BY Z.LECT_SER,Z.LECT_TIMS)  >= (C.MAX_APPL_CNT + C.MAX_OBSV_CNT))
                    AND C.LECT_STAT_CD = '101543'
        THEN '정원마감'
        ELSE             ''
        END AS LECT_STAT_CD_DESC
    , A.MC_NO              /* MC번호 */
    , (SELECT Z.MC_NM FROM CNET_MC_INFO Z WHERE Z.MC_NO = A.MC_NO) AS MC_NM /* MC명 */
    , A.STDO_NO            /* 스튜디오번호 */
    , (SELECT Z.STDO_NM FROM CNET_STDO_INFO Z WHERE Z.STDO_NO = A.STDO_NO) AS STDO_NM /* 스튜디오명 */
    , A.LECT_CNCL_RSN_SUST /* 수업취소사유내용 */
    , A.REG_DTM            /* 등록일시 */
    , A.REG_MBR_NO         /* 등록회원번호 */
    , A.CHG_DTM            /* 수정일시 */
    , A.CHG_MBR_NO         /* 수정회원번호 */
    , A.LECT_SESS_ID       /* 강의_세션_ID */
    , B.LECT_CO_NO         /* 교육수행기간 */
    , ROW_NUMBER() OVER(ORDER BY A.LECT_DAY DESC, A.LECT_TIMS DESC, A.LECT_START_TIME DESC) AS RN
    /* paging */
    FROM CNET_LECT_SCHD_INFO A /* 수업일정정보 테이블 */
        inner join CNET_LECT_INFO B
            on A.lect_ser = B.lect_ser
        inner join CNET_LECT_TIMS_INFO C
            on A.lect_ser = C.lect_ser
                and A.lect_tims = C.lect_tims
    </sql>

    <sql id="selectAdminLectSchdInfo">
        /* paging */
        SELECT
        A.LECT_SER           /* 수업일련번호 */
        , A.LECT_TIMS          /* 수업차수 */
        , A.SCHD_SEQ           /* 일정순서 */
        , A.LECT_TITLE         /* 수업명 */
        , A.LECT_DAY           /* 수업일자 */
        , A.LECT_START_TIME    /* 수업시작시간 */
        , A.LECT_END_TIME      /* 수업종료시간 */
        , A.LECT_STAT_CD       /* 수업상태코드 */
        , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM /* 수업상태코드명 */
        , A.MC_NO              /* MC번호 */
        , (SELECT Z.MC_NM FROM CNET_MC_INFO Z WHERE Z.MC_NO = A.MC_NO) AS MC_NM /* MC명 */
        , A.STDO_NO            /* 스튜디오번호 */
        , (SELECT Z.STDO_NM FROM CNET_STDO_INFO Z WHERE Z.STDO_NO = A.STDO_NO) AS STDO_NM /* 스튜디오명 */
        , A.LECT_CNCL_RSN_SUST /* 수업취소사유내용 */
        , A.REG_DTM            /* 등록일시 */
        , A.REG_MBR_NO         /* 등록회원번호 */
        , A.CHG_DTM            /* 수정일시 */
        , A.CHG_MBR_NO         /* 수정회원번호 */
        , A.LECT_SESS_ID       /* 강의_세션_ID */
        , B.LECTR_MBR_NO        /* 강사 NO */
        , CASE WHEN B.LECT_TYPE_CD = '101529' THEN 1 /*단강*/
               WHEN B.LECT_TYPE_CD = '101530' THEN 1 /*연강*/
               WHEN B.LECT_TYPE_CD = '101531' THEN 1 /*특강*/
               WHEN B.LECT_TYPE_CD = '101532' THEN 2
                                                    /*
                                                    CASE WHEN ( (TO_DATE(A.LECT_END_TIME, 'HH24MI') - TO_DATE(A.LECT_START_TIME, 'HH24MI')) * 24 * 60 ) >= 120 THEN 2
                                                         ELSE 1
                                                    END
                                                    */
               ELSE 0
          END AS LECTURE_CNT
        , ROW_NUMBER() OVER(ORDER BY A.SCHD_SEQ, A.LECT_DAY, A.LECT_TIMS DESC, A.LECT_START_TIME DESC) AS RN
        /* paging */
        FROM CNET_LECT_SCHD_INFO A /* 수업일정정보 테이블 */
        INNER JOIN CNET_LECT_INFO B ON A.LECT_SER = B.LECT_SER
    </sql>

    <!-- 수업의 한 차수정보에 해당하는 수업일시정보 조회 -->
    <select id="listLectTimsSchdInfo" parameterType="kr.or.career.mentor.domain.LectTimsInfo" resultType="kr.or.career.mentor.domain.LectSchdInfo">
        /* LectureInfomationMapper.xml 설명 : 수업일시정보 목록조회, ID : listLectureScheduleInfomation, 작성일 : 2015.09.16 */
        <include refid="selectAdminLectSchdInfo"/>
        WHERE 1 = 1
          AND A.LECT_SER = #{lectSer}   /* 수업일련번호 */
          AND A.LECT_TIMS = #{lectTims} /* 수업차수 */
    </select>

    <!-- 단건의 수업일시정보 조회 -->
    <select id="retrieveLectSchdInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="kr.or.career.mentor.domain.LectSchdInfo">
        /* LectureInfomationMapper.xml 설명 : 단건의 수업일시정보 조회, ID : retrieveLectSchdInfo, 작성일 : 2015.10.01 */
        <include refid="selectLectSchdInfo"/>
        WHERE 1 = 1
          AND A.LECT_SER = #{lectSer}   /* 수업일련번호 */
          AND A.LECT_TIMS = #{lectTims} /* 수업차수 */
          AND A.SCHD_SEQ = #{schdSeq} /* 일정순서 */
    </select>

    <!-- 수업일시정보 목록조회(하나의 수업에 대한 모든 차수의 일시정보를 조회할때 사용) -->
    <select id="listLectureScheduleInfomation" parameterType="kr.or.career.mentor.domain.LectInfo" resultMap="resultLectSchdInfo">
        /* LectureInfomationMapper.xml 설명 : 수업일시정보 목록조회, ID : listLectureScheduleInfomation, 작성일 : 2015.09.16 */
        <include refid="selectLectSchdInfo"/>
         WHERE 1 = 1
           AND A.LECT_SER = #{lectSer}   /* 수업일련번호 */
         ORDER BY A.LECT_DAY, A.LECT_TIMS, A.LECT_START_TIME
    </select>

    <!-- 모집마감,모집실패 시켜야될 일시수업정보 목록조회 -->
    <select id="listtRecruitmentCloseLectTimsInfo" parameterType="map" resultMap="closeableLectureTime">
        /* LectureInfomationMapper.xml 설명 : 모집마감 시켜야될 수업차수정보 목록조회, ID : listtRecruitmentCloseLectTimsInfo, 작성일 : 2015.09.24 */
        <![CDATA[
        SELECT  IIA.LECT_SER
                ,IIA.LECT_TIMS
                ,IIA.MAX_APPL_CNT
                ,IIA.LECTR_MBR_NO
                ,TO_CHAR(TO_DATE(IIA.LECT_DAY_START,'YYYY-MM-DD HH24:MI'),'YYYY-MM-DD HH24:MI') as LECT_DAY_START
                ,TO_CHAR(TO_DATE(IIA.LECT_DAY_END,'YYYY-MM-DD HH24:MI'),'YYYY-MM-DD HH24:MI') as LECT_DAY_END
                ,IIA.LECT_TITLE
                ,IIA.APPL_CNT
                ,IIA.CLAS_ROOM_SER
                ,NVL(IIA.APPL_MBR_NO,' ') as APPL_MBR_NO    /* Lombok @NonNull annotation 회피하기 위해 공백문자로 변환 */
                ,IIA.SET_SER
                ,IIA.APPL_STAT_CD
                ,IIA.SCH_NO
                ,IIA.REG_DTM
                ,IIB.NM             as LECT_NAME
                ,IIB.EMAIL_ADDR     as LECT_EMAIL_ADDR
                ,IIB.MOBILE         as LECT_MOBILE
                ,IIC.DVC_TKN_VAL    as LECT_TKN_VAL
                ,IIC.DVC_OS_INFO    as LECT_OS_INFO
                ,IID.id             as appl_id
                ,IID.NM             as APPL_NAME
                ,IID.EMAIL_ADDR     as APPL_EMAIL_ADDR
                ,IID.MOBILE         as APPL_MOBILE
                ,IIE.DVC_TKN_VAL    as APPL_TKN_VAL
                ,IIE.DVC_OS_INFO    as APPL_OS_INFO
                ,IIA.CLAS_REG_ID    as CLAS_REG_ID
                ,IIA.applied_cnt
                ,iia.appl_class_cd
        FROM
                (
                SELECT  IA.LECT_SER,
                        IA.LECT_TIMS,
                        IA.MAX_APPL_CNT,
                        IA.LECTR_MBR_NO,
                        IA.LECT_DAY_START,
                        IA.LECT_DAY_END,
                        IA.LECT_TITLE,
                        CASE WHEN IA.LECT_TYPE_CD = '101529' OR IA.LECT_TYPE_CD = '101531' THEN 1   /* 단강 혹은 특강 */
                             WHEN IA.LECT_TYPE_CD = '101530' THEN IA.SCHD_CNT
                             WHEN IA.LECT_TYPE_CD = '101532' THEN
                                CASE    WHEN IA.DIFFTIME >= IA.VALIDATE_TIME THEN 2
                                        ELSE 1
                                END
                        END AS APPL_CNT,
                        IB.CLAS_ROOM_SER,
                        IB.APPL_MBR_NO,
                        IB.SET_SER,
                        IB.APPL_STAT_CD,
                        IB.APPL_CLASS_CD,
                        SUM(CASE WHEN IB.APPL_STAT_CD = 101576 AND IB.APPL_CLASS_CD = 101715 THEN 1
                                WHEN IB.APPL_STAT_CD = 101577 AND IB.APPL_CLASS_CD = 101715 THEN 1
                            ELSE 0
                            END) OVER (PARTITION BY IA.LECT_SER,IA.LECT_TIMS) AS APPLIED_CNT,
                        IC.SCH_NO,
                        IB.REG_DTM,
                        ID.id as CLAS_REG_ID
                FROM
                        (
                            select  IIX.LECT_SER,
                                    IIX.LECT_TIMS,
                                    IIX.MAX_APPL_CNT,
                                    min(IIX.LECTR_MBR_NO) as LECTR_MBR_NO,
                                    min(IIX.LECT_TITLE) as LECT_TITLE,
                                    (to_date(MAX(IIX.LECT_DAY_END),'YYYYMMDDHH24MI')-to_date(MIN(IIX.LECT_DAY_START),'YYYYMMDDHH24MI'))*24*60 AS DIFFTIME,
                                    MIN(IIX.LECT_DAY_START) AS LECT_DAY_START,
                                    MAX(IIX.LECT_DAY_END) AS LECT_DAY_END,
                                    count(IIX.schd_seq) as schd_cnt,
                                    min(IIX.LECT_TYPE_CD) as LECT_TYPE_CD,
                                    CASE    WHEN min(IIX.lect_targt_cd) = '101535'
                                                    OR min(IIX.lect_targt_cd) = '101538'
                                                    OR min(IIX.lect_targt_cd) = '101536'
                                                THEN 70
                                            ELSE 60
                                    END VALIDATE_TIME
                            from    (
                                        SELECT  A.LECT_SER,
                                                A.LECT_TIMS,
                                                C.MAX_APPL_CNT,
                                                C.LECTR_MBR_NO as LECTR_MBR_NO,
                                                C.LECT_TITLE as LECT_TITLE,
                                                A.LECT_DAY ||A.LECT_START_TIME AS LECT_DAY_START,
                                                A.LECT_DAY ||A.LECT_END_TIME AS LECT_DAY_END,
                                                a.schd_seq ,
                                                c.LECT_TYPE_CD as LECT_TYPE_CD,
                                                c.lect_targt_cd
                                        FROM  CNET_LECT_SCHD_INFO A
                                                INNER JOIN CNET_LECT_TIMS_INFO B
                                                    ON a.LECT_SER = b.LECT_SER
                                                        and a.LECT_TIMS = b.LECT_TIMS
                                                INNER JOIN CNET_LECT_INFO C
                                                    ON A.LECT_SER = C.LECT_SER
                                        WHERE   A.LECT_STAT_CD IN ( '101543' /*수강모집*/  ,'101544' /*모집마감*/ )
                                        AND     TO_CHAR(SYSDATE+#{assign},'YYYYMMDD') >= A.LECT_DAY
                                    ) IIX
                            GROUP BY IIX.LECT_SER, IIX.LECT_TIMS,IIX.MAX_APPL_CNT
                        ) IA
                            left outer  join CNET_LECT_APPL_INFO IB
                                on IA.LECT_SER = IB.LECT_SER
                                    and IA.LECT_TIMS = IB.LECT_TIMS
                                    and IB.APPL_STAT_CD IN ( '101576','101577','101728','101729' )
                            left outer join CNET_CLAS_ROOM_INFO IC
                                on IB.clas_room_ser = IC.clas_room_ser
                            left outer join (
                                            select  iiy.id,iiy.mbr_no,iix.clas_room_ser,iix.reg_stat_cd
                                            from    CNET_CLAS_ROOM_REG_REQ_HIST iix
                                                        inner join cnet_mbr_info iiy
                                                            on iix.req_mbr_no = iiy.mbr_no
                                            where iix.reg_stat_cd = '101526'
                                            and iiy.mbr_class_cd = '100858'
                                            and iix.CLAS_ROOM_CUALF_CD in ('101764','101689','101691')
                                            ) ID
                                on IC.clas_room_ser = ID.clas_room_ser

                ORDER BY IA.LECT_SER, IA.LECT_TIMS,IB.REG_DTM
                ) IIA
                    inner join CNET_MBR_INFO IIB
                        on IIA.LECTR_MBR_NO = IIB.MBR_NO
                    left outer join CNET_MBR_DVC_INFO IIC
                        on IIB.MBR_NO = IIC.MBR_NO
                    left outer join CNET_MBR_INFO IID
                        on IIA.APPL_MBR_NO = IID.MBR_NO
                    left outer join CNET_MBR_DVC_INFO IIE
                        on IID.MBR_NO = IIE.MBR_NO
        ]]>
    </select>

    <!-- 수업차수정보 등록 -->
    <insert id="insertLectTimsInfo" parameterType="kr.or.career.mentor.domain.LectTimsInfo">
        <selectKey keyProperty="lectTims" resultType="Integer" order="BEFORE">
            SELECT NVL(MAX(Z.LECT_TIMS), 0) + 1 FROM CNET_LECT_TIMS_INFO Z WHERE Z.LECT_SER = #{lectSer}
        </selectKey>
        /* LectureInfomationMapper.xml 설명 : 수업차수정보 등록, ID : insertLectTimsInfo, 작성일 : 2015.09.17 */
        INSERT INTO CNET_LECT_TIMS_INFO (
                                           LECT_SER
                                         , LECT_TIMS
                                         , LECT_STAT_CD
                                         , REG_DTM
                                         , REG_MBR_NO
                                         , MAX_APPL_CNT
                                         , MAX_OBSV_CNT
                                         , EXPS_YN
                                         ) VALUES (
                                           #{lectSer}
                                         , #{lectTims}
                                         , #{lectStatCd}
                                         , SYSDATE
                                         , #{regMbrNo}
                                     <choose>
                                         <when test="maxApplCnt != null">
                                         , #{maxApplCnt}
                                         </when>
                                         <otherwise>
                                         , (SELECT MAX_APPL_CNT FROM CNET_LECT_INFO WHERE LECT_SER = #{lectSer})
                                         </otherwise>
                                     </choose>
                                     <choose>
                                        <when test="maxObsvCnt != null">
                                        , #{maxObsvCnt}
                                        </when>
                                        <otherwise>
                                        , (SELECT MAX_OBSV_CNT FROM CNET_LECT_INFO WHERE LECT_SER = #{lectSer})
                                        </otherwise>
                                     </choose>
                                        , #{expsYn}
                                         )
    </insert>

    <!-- 수업일정정보 등록 -->
    <update id="insertLectSchdInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo">
        <selectKey keyProperty="schdSeq" resultType="Integer" order="BEFORE">
            SELECT NVL(MAX(Z.SCHD_SEQ), 0) + 1 FROM CNET_LECT_SCHD_INFO Z WHERE Z.LECT_SER = #{lectSer} AND Z.LECT_TIMS = #{lectTims}
        </selectKey>
        /* LectureInfomationMapper.xml 설명 : 수업일정정보 등록, ID : insertLectSchdInfo, 작성일 : 2015.09.17 */
        INSERT INTO CNET_LECT_SCHD_INFO (
                                           LECT_SER
                                         , LECT_TIMS
                                         , SCHD_SEQ
                                         , LECT_TITLE
                                         , LECT_DAY
                                         , LECT_START_TIME
                                         , LECT_END_TIME
                                         , LECT_STAT_CD
                                         , MC_NO
                                         , STDO_NO
                                         , REG_DTM
                                         , REG_MBR_NO
                                         ,LECT_SESS_ID
                                         ) VALUES (
                                           #{lectSer}
                                         , #{lectTims}
                                         , #{schdSeq}
                                         , #{lectTitle, jdbcType=VARCHAR}
                                         , Regexp_Replace(#{lectDay}, '[[:punct:]]', '')
                                         , Regexp_Replace(#{lectStartTime}, '[[:punct:]]', '')
                                         , Regexp_Replace(#{lectEndTime}, '[[:punct:]]', '')
                                         , #{lectStatCd, jdbcType=VARCHAR}
                                         , #{mcNo, jdbcType=VARCHAR}
                                         , #{stdoNo, jdbcType=VARCHAR}
                                         , SYSDATE
                                         , #{regMbrNo}
                                         , #{lectSessId, jdbcType=VARCHAR}
                                         )
    </update>

    <sql id="selectLectApplInfo">
        /* paging */
        SELECT
                A.LECT_SER
              , A.LECT_TIMS
              , A.CLAS_ROOM_SER
              , (SELECT SCH_NO FROM CNET_CLAS_ROOM_INFO Z WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS SCH_NO
              , A.APPL_MBR_NO
              , A.SET_SER
              , A.APPL_STAT_CD
              , A.REG_DTM
              , A.REG_MBR_NO
              , A.CHG_DTM
              , A.CHG_MBR_NO
              , A.APPL_CLASS_CD
        /* paging */
          FROM CNET_LECT_APPL_INFO A
         WHERE 1 = 1
    </sql>

    <!-- 수업신청정보 조회 -->
    <select id="listLectApplInfo" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectApplInfo">
        /* LectureInfomationMapper.xml 설명 : 수업신청정보 조회, ID : listLectApplInfo, 작성일 : 2015.09.25 */
        <include refid="selectLectApplInfo"/>
            AND A.LECT_SER = #{lectSer}
            AND A.LECT_TIMS = #{lectTims}
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applStatCd)">
            AND A.APPL_STAT_CD = #{applStatCd}
        </if>
        ORDER BY A.REG_DTM
    </select>

    <select id="retrieveLectApplInfo" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectApplInfo">
        <include refid="selectLectApplInfo"/>
        AND A.LECT_SER = #{lectSer}
        AND A.LECT_TIMS = #{lectTims}
        AND A.CLAS_ROOM_SER = #{clasRoomSer}
    </select>

    <!-- 수업신청인원 확인-->
    <select id="cntLectApplInfo" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="integer">
        SELECT COUNT(*)
        FROM
        (
        <include refid="kr.or.career.mentor.dao.LectureInfomationMapper.selectLectApplInfo"></include>
        AND A.APPL_STAT_CD IN ('101575', '101576', '101577') /*취소상태 제외하고 카운트*/
        AND A.LECT_SER  = #{lectSer, jdbcType=INTEGER}
        AND A.LECT_TIMS = #{lectTims, jdbcType=INTEGER}
        )
    </select>

    <!-- 수업 설정정보 조회(최신버전)-->
    <select id="retrieveClasSetHist" resultType="kr.or.career.mentor.domain.ClasSetHist">
        SELECT
            MAX_APPL_CNT
           ,MAX_OBSV_CNT
           ,SET_DESC_SUST
        FROM CNET_CLAS_SET_HIST
        WHERE HIST_SER = (SELECT MAX(HIST_SER) FROM CNET_CLAS_SET_HIST)
    </select>

    <!-- 수업일시정보 수정 -->
    <update id="updateLectureScheduleInfomation" parameterType="kr.or.career.mentor.domain.LectSchdInfo">
        /* LectureInfomationMapper.xml 설명 : 수업일시정보 수정, ID : updateLectureScheduleInfomation, 작성일 : 2015.09.18 */
        UPDATE CNET_LECT_SCHD_INFO
           SET
                MC_NO      = #{mcNo, jdbcType=VARCHAR}
              , STDO_NO    = #{stdoNo, jdbcType=VARCHAR}
              , CHG_DTM    = SYSDATE
              , CHG_MBR_NO = #{chgMbrNo}
         WHERE 1 = 1
           AND LECT_SER  = #{lectSer}
           AND LECT_TIMS = #{lectTims}
           AND SCHD_SEQ  = #{schdSeq}
    </update>

    <!-- 수업요청 등록 -->
    <update id="insertLectureRequest" parameterType="kr.or.career.mentor.domain.LectReqInfo">
        <selectKey keyProperty="reqSer" resultType="Integer" order="BEFORE">
            SELECT SQ_LECT_REQ_INFO.NEXTVAL FROM DUAL
        </selectKey>
        /* LectureInfomationMapper.xml 설명 : 수업요청 등록, ID : insertLectureRequest, 작성일 : 2015.09.21 */
        INSERT INTO CNET_LECT_REQ_INFO (
                                          REQ_SER
                                        , REQ_MBR_NO
                                        , TARGT_JOB_NO
                                        , TARGT_MBR_NO
                                        , CLAS_ROOM_SER
                                        , LECT_TITLE
                                        , LECT_SUST
                                        , SCH_CLASS_CD
                                        , SOL_KIND_CD
                                        , SOL_CO_TEL
                                        , REQ_STAT_CD
                                        , REQ_DTM
                                        , REQ_TYPE_CD
                                        ) VALUES (
                                          #{reqSer}
                                        , #{reqMbrNo}
                                        , #{targtJobNo}
                                        , #{targtMbrNo}
                                        , #{clasRoomSer, jdbcType=NUMERIC}
                                        , #{lectTitle}
                                        , #{lectSust}
                                        , #{schClassCd}
                                        , #{solKindCd}
                                        , #{solCoTel}
                                        , #{reqStatCd}
                                        , SYSDATE
                                        , #{reqTypeCd}
                                        )
    </update>

    <!-- 수업요청시간정보 등록 -->
    <insert id="insertLectureRequestTimeInfo" parameterType="kr.or.career.mentor.domain.LectReqInfo">
        /* LectureInfomationMapper.xml 설명 : 수업요청시간정보 등록, ID : insertLectureRequestTimeInfo, 작성일 : 2015.09.21 */
        INSERT INTO CNET_LECT_REQ_TIME_INFO (
                                               REQ_SER
                                             , LECT_PREF_DAY
                                             , LECT_PREF_TIME
                                             ) VALUES (
                                               #{reqSer}
                                             , Regexp_Replace(#{lectPrefDay}, '[[:punct:]]', '')
                                             , Regexp_Replace(#{lectPrefTime}, '[[:punct:]]', '')
                                             )
    </insert>

    <!-- 수업요청시간정보 조회 -->
    <select id="listLectReqTimeInfo" resultType="lectReqTimeInfo">
        SELECT
                A.REQ_SER
              , A.LECT_PREF_DAY
              , A.LECT_PREF_TIME
          FROM CNET_LECT_REQ_TIME_INFO A
         WHERE 1 = 1
           AND REQ_SER = #{reqSer}
    </select>

    <!-- 수업요청 select문 -->
    <sql id="selectLectureRequest">
        SELECT
                A.REQ_SER
              , A.REQ_MBR_NO
              , (SELECT Z.NM FROM CNET_MBR_INFO Z WHERE Z.MBR_NO = A.REQ_MBR_NO) AS REQ_MBR_NM
              , A.TARGT_JOB_NO
              , (SELECT Z.JOB_NM FROM CNET_JOB_INFO Z WHERE Z.JOB_NO = A.TARGT_JOB_NO) AS TARGT_JOB_NM
              , A.TARGT_MBR_NO
              , (SELECT Z.NM FROM CNET_MBR_INFO Z WHERE Z.MBR_NO = A.TARGT_MBR_NO) AS TARGT_MBR_NM
              , A.CLAS_ROOM_SER
              , A.LECT_TITLE
              , A.LECT_SUST
              , A.SCH_CLASS_CD
              , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '100730' AND Z.CD = A.SCH_CLASS_CD) AS SCH_CLASS_CD_NM
              , A.REQ_DTM
              , A.SOL_KIND_CD
              , A.SOL_CO_TEL
              , CASE
                  WHEN A.TARGT_JOB_NO IS NULL AND A.TARGT_MBR_NO IS NOT NULL AND A.SOL_KIND_CD IS NULL THEN '멘토지정'
                  WHEN A.TARGT_JOB_NO IS NOT NULL AND A.TARGT_MBR_NO IS NULL AND A.SOL_KIND_CD IS NULL THEN '직업지정'
                  WHEN A.TARGT_JOB_NO IS NULL AND A.TARGT_MBR_NO IS NULL AND A.SOL_KIND_CD IS NOT NULL THEN (SELECT Z.CD_NM FROM CNET_CODE Z WHERE SUP_CD = '101663' AND CD = A.SOL_KIND_CD)
                  WHEN A.TARGT_JOB_NO IS NOT NULL AND A.TARGT_MBR_NO IS NOT NULL AND A.SOL_KIND_CD IS NULL THEN '멘토지정,직업지정'
                  WHEN A.TARGT_JOB_NO IS NULL AND A.TARGT_MBR_NO IS NOT NULL AND A.SOL_KIND_CD IS NOT NULL THEN '멘토지정,' || (SELECT Z.CD_NM FROM CNET_CODE Z WHERE SUP_CD = '101663' AND CD = A.SOL_KIND_CD)
                  WHEN A.TARGT_JOB_NO IS NOT NULL AND A.TARGT_MBR_NO IS NULL AND A.SOL_KIND_CD IS NOT NULL THEN '직업지정,' || (SELECT Z.CD_NM FROM CNET_CODE Z WHERE SUP_CD = '101663' AND CD = A.SOL_KIND_CD)
                  WHEN A.TARGT_JOB_NO IS NOT NULL AND A.TARGT_MBR_NO IS NOT NULL AND A.SOL_KIND_CD IS NOT NULL THEN '멘토지정,직업지정,' || (SELECT Z.CD_NM FROM CNET_CODE Z WHERE SUP_CD = '101663' AND CD = A.SOL_KIND_CD)
                  ELSE '오픈'
                END AS LECTURE_REQUEST_TYPE /*요청수업 유형*/
    </sql>

    <!-- 수업요청 목록조회 -->
    <select id="listLectureRequest" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectReqInfo">
        /* LectureInfomationMapper.xml 설명 : 수업요청시간정보 등록, ID : listLectureRequest, 작성일 : 2015.09.21 */
        <include refid="selectLectureRequest"/>
        <![CDATA[
           FROM CNET_LECT_REQ_INFO A
		  		INNER JOIN CNET_LECT_REQ_TIME_INFO B
					ON A.REQ_SER = B.REQ_SER
				LEFT OUTER JOIN CNET_MBR_INFO C
					ON (A.TARGT_MBR_NO = C.MBR_NO
						AND C.MBR_CLASS_CD = '101505')
		]]>
        <!--
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNo)">
						and c.pos_co_no = #{coNo}
        </if>

        <if test="@org.apache.commons.lang3.StringUtils@isEmpty(coNo)">
                        and a.req_mbr_no = #{mbrNo}
        </if>
        -->
        <![CDATA[
            WHERE   1 = 1
        ]]>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(jobNo)">
            and a.TARGT_JOB_NO = #{jobNo}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(category1)">
            <if test="@org.apache.commons.lang3.StringUtils@equals(category1, '101646')">
                /*오픈 : 직업, 멘토, 솔루션 전부 지정안함*/
                AND A.TARGT_JOB_NO IS NULL
                AND A.TARGT_MBR_NO IS NULL
                AND A.SOL_KIND_CD IS NULL
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(category1, '101647')">
                /*멘토지정*/
                AND A.TARGT_MBR_NO IS NOT NULL
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(category1, '101648')">
                /*직업지정*/
                AND A.TARGT_JOB_NO IS NOT NULL
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(category1, '101669')">
                /*솔루션지정*/
                AND A.SOL_KIND_CD IS NOT NULL
            </if>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(category2)">
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
                <if test="@org.apache.commons.lang3.StringUtils@equals(category2, '101650')">
                    /*입력된 키워드를 수업명 항목으로 조회*/
                    AND A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@equals(category2, '101651')">
                    /*입력된 키워드를 직업명 항목으로 조회*/
                    AND A.TARGT_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE Z.JOB_NM LIKE '%' || #{keyword} || '%')
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@equals(category2, '101652')">
                    /*입력된 키워드를 멘토명 항목으로 조회*/
                    AND A.TARGT_MBR_NO IN (SELECT Z.MBR_NO FROM CNET_MBR_INFO Z WHERE Z.NM LIKE '%' || #{keyword} || '%')
                </if>
            </if>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isEmpty(category2)">
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
                AND (
                        A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                     OR A.TARGT_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE Z.JOB_NM LIKE '%' || #{keyword} || '%')
                     OR A.TARGT_MBR_NO IN (SELECT Z.MBR_NO FROM CNET_MBR_INFO Z WHERE Z.NM LIKE '%' || #{keyword} || '%')
                     )
            </if>
        </if>
        <![CDATA[
            AND     A.REQ_STAT_CD = '101656'
            AND     TO_DATE(B.LECT_PREF_DAY||B.LECT_PREF_TIME,'YYYYMMDDHH24MI') >= SYSDATE
        ]]>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNo)">
            <![CDATA[
            and (c.pos_co_no = #{coNo} or c.pos_co_no is null)
            and (c.MBR_CUALF_CD <> '101503'
                /* or a.targt_mbr_no is null */
                )
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isEmpty(coNo)">
            and (a.targt_mbr_no = #{mbrNo}
                /* or a.targt_mbr_no is null */
                )
        </if>
        <if test="schClassCds != null and schClassCds.length gt 0">
        AND     A.SCH_CLASS_CD IN
        <foreach collection="schClassCds" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
        </if>
         ORDER BY A.REQ_DTM DESC
    </select>

    <!-- 수업취소 -->
    <update id="cnclLectSchdInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo">
        /** id:cnclLectSchdInfo  수업취소 */
        UPDATE CNET_LECT_SCHD_INFO SET
          LECT_STAT_CD       = #{lectStatCd}
        , LECT_CNCL_RSN_SUST =  #{lectCnclRsnSust, jdbcType=VARCHAR}
        , CHG_MBR_NO         =  #{chgMbrNo, jdbcType=VARCHAR}
        , CHG_DTM            =  SYSDATE
        WHERE LECT_SER = #{lectSer, jdbcType=INTEGER}
          AND LECT_TIMS = #{lectTims, jdbcType=INTEGER}
    </update>

    <!-- 수업신청상태코드 수정 -->
    <update id="updateLectureApplyStatus" parameterType="kr.or.career.mentor.domain.LectApplInfo">
        /** id:cnclLectApplInfo  수업 신청취소 */
        UPDATE CNET_LECT_APPL_INFO SET
          APPL_STAT_CD       = #{applStatCd ,jdbcType=VARCHAR}
        , CNCL_RSN_SUST      = #{cnclRsnSust ,jdbcType=VARCHAR}
        , CHG_MBR_NO         =  #{chgMbrNo ,jdbcType=VARCHAR}
        , CHG_DTM            =  SYSDATE
        WHERE LECT_SER = #{lectSer, jdbcType=INTEGER}
          AND LECT_TIMS = #{lectTims, jdbcType=INTEGER}
          AND CLAS_ROOM_SER = #{clasRoomSer, jdbcType=INTEGER}
    </update>

    <update id="updateLectureTimeStatus" parameterType="kr.or.career.mentor.domain.LectTimsInfo">
        UPDATE
        CNET_LECT_TIMS_INFO
        SET
        LECT_STAT_CD = #{lectStatCd, jdbcType=VARCHAR}
        WHERE   LECT_SER = #{lectSer, jdbcType=INTEGER}
        AND     LECT_TIMS = #{lectTims, jdbcType=INTEGER}
    </update>


    <update id="updateLectureSchdStatusBulk" parameterType="kr.or.career.mentor.domain.LectTimsInfo">
        UPDATE
        CNET_LECT_SCHD_INFO
        SET
        LECT_STAT_CD = #{lectStatCd, jdbcType=VARCHAR}
        WHERE   LECT_SER = #{lectSer, jdbcType=INTEGER}
        AND     LECT_TIMS = #{lectTims, jdbcType=INTEGER}
    </update>

    <update id="updateLecutApplyCnt" parameterType="kr.or.career.mentor.domain.LectApplInfo">
        <![CDATA[
            MERGE INTO CNET_LECT_APPL_CNT T
                USING
                (   SELECT  B.SCH_NO,B.SET_SER
                    FROM    CNET_BIZ_SET_INFO A
                                INNER JOIN CNET_LECT_APPL_CNT B
                                    ON A.SET_SER = B.SET_SER
                    WHERE B.SCH_NO = #{schNo, jdbcType=VARCHAR}
                    AND B.SET_SER = #{setSer, jdbcType=INTEGER}
                    AND B.CLAS_PERM_CNT < a.CLAS_CNT
                ) DT ON (T.SCH_NO = DT.SCH_NO AND T.SET_SER = DT.SET_SER)
                WHEN MATCHED THEN UPDATE
                    SET T.CLAS_PERM_CNT = T.CLAS_PERM_CNT + #{clasApplCnt, jdbcType=INTEGER}
                        ,T.CLAS_APPL_CNT = T.CLAS_APPL_CNT - #{clasApplCnt, jdbcType=INTEGER}
        ]]>
        <!--
        UPDATE
        CNET_LECT_APPL_CNT
        SET
        CLAS_PERM_CNT = CLAS_PERM_CNT + #{clasApplCnt, jdbcType=INTEGER}
        ,CLAS_APPL_CNT = CLAS_APPL_CNT - #{clasApplCnt, jdbcType=INTEGER}
        WHERE
        SCH_NO = #{schNo, jdbcType=VARCHAR}
        AND SET_SER = #{setSer, jdbcType=INTEGER}
        -->
    </update>

    <!-- 수업목록 조회 총갯수-->
    <select id="cntLectListenMem" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="kr.or.career.mentor.domain.LectApplInfo">
        <include refid="kr.or.career.mentor.dao.LectureInfomationMapper.selectLectApplInfo"></include>
        AND LECT_SER = #{lectSer, jdbcType=INTEGER}
        AND LECT_TIMS = #{lectTims, jdbcType=INTEGER}
        AND APPL_STAT_CD IN ('101575', '101576', '101577')
    </select>

    <!-- D-2,D-1 수업차수정보(CNET_LECT_TIMS_INFO) 조회 -->
    <select id="listLectureStatus" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectTimsInfo2">
        /* LectureInfomationMapper.xml 설명 : D-2,D-1 수업차수정보(CNET_LECT_TIMS_INFO) 조회, ID : listLectureStatus, 작성일 : 2015.09.23 */
        SELECT  T.LECT_SER
              , T.LECT_TIMS
              , MAX(T.LECTR_NM) AS LECTR_NM /*수업강사명(멘토명)*/
              , MAX(T.LECT_TITLE) AS LECT_TITLE /*수업명*/
          FROM (
        <include refid="selectListLect"/>
           AND A.LECT_STAT_CD = #{lectStatCd}
           AND A.LECT_DAY IN ( TO_CHAR( ( SYSDATE + 2 ), 'YYYYMMDD' ), TO_CHAR( ( SYSDATE + 1 ), 'YYYYMMDD' ) )
                ) T
         GROUP BY T.LECT_SER, T.LECT_TIMS
    </select>

    <!-- 수업신청정보 등록 -->
    <insert id="insertClasSetHist" parameterType="kr.or.career.mentor.domain.ClasSetHist">
        INSERT INTO CNET_CLAS_SET_HIST ( /* LectureInfomationMapper.xml 설명 : 수업신청정보 등록, ID : insertClasSetHist, 작성자 : 송민섭, 작성일 : 2015.09.23 */
          HIST_SER
        , MAX_APPL_CNT
        , MAX_OBSV_CNT
        , SET_DESC_SUST
        , REG_DTM
        , REG_MBR_NO
        ) VALUES (
          SQ_CLAS_SET_HIST.NEXTVAL
        , #{maxApplCnt, jdbcType=INTEGER}
        , #{maxObsvCnt, jdbcType=INTEGER}
        , #{setDescSust, jdbcType=VARCHAR}
        , SYSDATE
        , #{regMbrNo, jdbcType=VARCHAR}
        )
    </insert>

    <!-- 수업을 신청한 교사목록 조회 -->
    <select id="listLectureApplicationTeacher" parameterType="kr.or.career.mentor.domain.LectTimsInfo" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* LectureInfomationMapper.xml 설명 : 수업을 신청한 교사목록 조회, ID : listLectureApplicationTeacher, 작성일 : 2015.09.23 */
        SELECT
               B.TCHR_MBR_NO
             , D.NM AS TCHR_NM
             , D.EMAIL_ADDR AS TCHR_EMAIL_ADDR
             , C.SCH_NO
             , C.SCH_NM
             , A.CLAS_ROOM_SER
             , B.CLAS_ROOM_NM
             , (SELECT COUNT(*) FROM CNET_CLAS_ROOM_REG_REQ_HIST S   WHERE S.REG_STAT_CD = '101526' AND CLAS_ROOM_SER = '10000019') AS clasPersonCnt
          FROM CNET_LECT_APPL_INFO A
         INNER JOIN CNET_CLAS_ROOM_INFO B ON (B.CLAS_ROOM_SER = A.CLAS_ROOM_SER)
         INNER JOIN CNET_SCH_INFO C ON (C.SCH_NO = B.SCH_NO)
         INNER JOIN CNET_MBR_INFO D ON (D.MBR_NO = B.TCHR_MBR_NO)
         WHERE 1 = 1
           AND A.LECT_SER = #{lectSer}
           AND A.LECT_TIMS = #{lectTims}
           AND A.APPL_STAT_CD = '101576' /* 신청상태코드 : 신청승인상태 */
    </select>

    <!-- 수업신청 기기조회(수업대상정보)-->
    <select id="listLectApplDvc" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultMap="resultLectSchdInfo">
        <include refid="kr.or.career.mentor.dao.LectureInfomationMapper.selectListLect"></include>
        AND A.LECT_SER = #{lectSer, jdbcType=INTEGER}
        AND A.LECT_TIMS = #{lectTims, jdbcType=INTEGER}
        AND A.SCHD_SEQ = #{schdSeq, jdbcType=INTEGER}
    </select>

    <!-- 수업신청 기기조회(수업대상정보)-->
    <select id="listLectApplClas" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT TB.*,
        Z.NM AS TCHR_NM,
        Z.MOBILE AS TCHR_MOBILE,
        (SELECT COUNT(*) FROM CNET_CLAS_ROOM_REG_REQ_HIST S
        INNER JOIN CNET_MBR_INFO S2 ON S.REQ_MBR_NO = S2.MBR_NO
        WHERE 1=1
        AND S.CLAS_ROOM_SER = TB.CLAS_ROOM_SER
        AND S2.MBR_CLASS_CD = '100858'  /*회원구분코드:일반(학생만 조회)*/
        ) AS STDNT_CNT
        FROM
        (SELECT
        D.SCH_NM,
        D.SIDO_NM,
        B.CLAS_ROOM_NM,
        B.CLAS_ROOM_SER,
        B.TCHR_MBR_NO,
        A.APPL_MBR_NO,
        B.SCH_NO,
        A.SET_SER,
        A.APPL_STAT_CD,
        A.APPL_CLASS_CD,
        ROW_NUMBER() OVER(ORDER BY A.REG_DTM) AS rn
        FROM CNET_LECT_APPL_INFO A
        INNER JOIN CNET_CLAS_ROOM_INFO B ON A.CLAS_ROOM_SER = B.CLAS_ROOM_SER
        INNER JOIN CNET_SCH_INFO D ON D.SCH_NO = B.SCH_NO
        WHERE 1=1
        AND A.APPL_STAT_CD IN ('101576', '101577')  /*상태가 신청, 승인인경우*/
        AND A.LECT_SER =  #{lectSer, jdbcType=INTEGER}
        AND A.LECT_TIMS =  #{lectTims, jdbcType=INTEGER}
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applClassCd)">
        AND A.APPL_CLASS_CD = #{applClassCd}
        </if>
        ) TB
        INNER JOIN CNET_MBR_INFO Z ON Z.MBR_NO = TB.APPL_MBR_NO
    </select>

    <!-- 수업신청 대기기기조회(수업대상정보)-->
    <select id="listLectApplWaitClas" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT TB.*,
        Z.NM AS TCHR_NM,
        Z.MOBILE AS TCHR_MOBILE,
        (SELECT COUNT(*) FROM CNET_CLAS_ROOM_REG_REQ_HIST S
        INNER JOIN CNET_MBR_INFO S2 ON S.REQ_MBR_NO = S2.MBR_NO
        WHERE 1=1
        AND S.CLAS_ROOM_SER = TB.CLAS_ROOM_SER
        AND S2.MBR_CLASS_CD = '100858'  /*회원구분코드:일반(학생만 조회)*/
        ) AS STDNT_CNT
        FROM
        (SELECT
        D.SCH_NM,
        D.SIDO_NM,
        B.CLAS_ROOM_NM,
        B.CLAS_ROOM_SER,
        B.TCHR_MBR_NO,
        A.APPL_MBR_NO,
        B.SCH_NO,
        A.SET_SER,
        A.APPL_STAT_CD,
        ROW_NUMBER() OVER(ORDER BY A.REG_DTM) AS rn
        FROM CNET_LECT_APPL_INFO A
        INNER JOIN CNET_CLAS_ROOM_INFO B ON A.CLAS_ROOM_SER = B.CLAS_ROOM_SER
        INNER JOIN CNET_SCH_INFO D ON D.SCH_NO = B.SCH_NO
        WHERE 1=1
        AND A.APPL_STAT_CD IN ('101575')  /*상태가 대기*/
        AND A.LECT_SER =  #{lectSer, jdbcType=INTEGER}
        AND A.LECT_TIMS =  #{lectTims, jdbcType=INTEGER}
        ) TB
        INNER JOIN CNET_MBR_INFO Z ON Z.MBR_NO = TB.APPL_MBR_NO
    </select>

    <!-- 수업신청 기기숫자 조회-->
        <select id="applDvcCnt" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT
                NVL(SUM (APPLY), 0) AS APPLY_CNT
              , NVL(SUM (AUTHORITY), 0) AS AUTHORITY_CNT
              , NVL(SUM (CONFIRMATION), 0) AS CONFIRMATION_CNT
              , NVL(SUM (CANCEL), 0) AS CANCEL_CNT
          FROM (
                SELECT
                        CASE WHEN A.APPL_STAT_CD = '101575' THEN 1 ELSE 0 END AS APPLY
                      , CASE WHEN A.APPL_STAT_CD = '101576' THEN 1 ELSE 0 END AS AUTHORITY
                      , CASE WHEN A.APPL_STAT_CD = '101577' THEN 1 ELSE 0 END AS CONFIRMATION
                      , CASE WHEN A.APPL_STAT_CD = '101578' THEN 1 ELSE 0 END AS CANCEL
                  FROM CNET_LECT_APPL_INFO A
                 WHERE 1 = 1
                   AND LECT_SER = #{lectSer}
                   AND LECT_TIMS = #{lectTims}
                )
    </select>

    <!-- 수업상세 조회(단건)-->
    <select id="retireveLectSchdInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultMap="resultLectData">
        /* LectureInfomationMapper.xml 설명 : 수업상세 조회(단건), ID : retireveLectSchdInfo, 작성자 : 송민섭, 작성일 : 2015.09.23 */
        /* paging */
        SELECT
              C.LECT_INTDC_INFO
            , C.LECT_SUST_INFO
            , C.MAX_APPL_CNT
            , C.MAX_OBSV_CNT
            , C.LECT_REQ_SER
            , C.REG_DTM
            , C.REG_MBR_NO
            , C.CHG_DTM
            , C.CHG_MBR_NO
            , C.LECT_SER
            , C.LECT_TYPE_CD
            , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM /*수업유형코드명*/
            , C.LECT_TARGT_CD
            , C.LECT_TITLE
            , C.LECT_START_DTM
            , C.LECT_END_DTM
            , C.LECTR_MBR_NO
            , C.LECTR_NM
            , C.LECTR_JOB_NO
            , C.LECT_PIC_PATH
            , C.LECT_OUTLN_INFO
            , C.LECT_STAT_CD
            , (SELECT Z.JOB_TAG_INFO FROM CNET_MBR_JOB_INFO Z WHERE Z.MBR_NO = C.LECTR_MBR_NO) AS JOB_TAG_INFO
            , (SELECT Z.ICON_KIND_CD FROM CNET_MBR_ICON_INFO Z WHERE Z.MBR_NO = C.LECTR_MBR_NO AND Z.ICON_KIND_CD = '101598') AS ICON_KIND_CD
            ,ROW_NUMBER() OVER(ORDER BY C.REG_DTM) AS rn
            /* paging */
        FROM CNET_LECT_INFO C
        WHERE C.LECT_SER  = #{lectSer}
    </select>

    <!-- 수업상태코드 수정-->
    <update id="updateLectureStatus" parameterType="kr.or.career.mentor.domain.LectSchdInfo">
        /* LectureInfomationMapper.xml 설명 : 수업상태코드 수정, ID : updateLectureStatus, 작성일 : 2015.09.24 */
        UPDATE CNET_LECT_SCHD_INFO
           SET
               LECT_STAT_CD = #{lectStatCd}
         WHERE 1 = 1
           AND LECT_SER = #{lectSer}
           AND LECT_TIMS = #{lectTims}
           AND SCHD_SEQ = #{schdSeq}
    </update>

    <select id="listLectSchdInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultMap="resultLectSchdInfo">
        <include refid="kr.or.career.mentor.dao.LectureInfomationMapper.selectLectSchdInfo"></include>
        WHERE 1=1
        AND A.LECT_SER = #{lectSer}
        AND A.LECT_TIMS = #{lectTims}
        ORDER BY A.LECT_DAY, A.LECT_START_TIME
    </select>

    <insert id="insertLectApplCnt" parameterType="kr.or.career.mentor.domain.LectApplCnt">
        INSERT INTO CNET_LECT_APPL_CNT (
                                          SCH_NO
                                        , SET_SER
                                        , CLAS_PERM_CNT
                                        , CLAS_APPL_CNT
                                        ) values (
                                          #{schNo}
                                        , #{setSer}
                                        , #{clasPermCnt}
                                        , #{clasApplCnt}
                                        )
    </insert>

    <!-- 수업횟수차감 및 환급-->
    <update id="updateLectApplCnt" parameterType="kr.or.career.mentor.domain.LectApplCnt">
        UPDATE CNET_LECT_APPL_CNT
        SET
            CLAS_PERM_CNT = #{clasPermCnt}
           ,CLAS_APPL_CNT = #{clasApplCnt}
        WHERE 1 = 1
          AND SET_SER = #{setSer}
          AND SCH_NO = #{schNo}
    </update>

    <!-- 수업신청 횟수 정보 조회-->
    <select id="retireveLectApplCntReuslt" parameterType="kr.or.career.mentor.domain.LectApplCnt" resultType="kr.or.career.mentor.domain.LectApplCnt">
        SELECT
            CLAS_PERM_CNT
           ,CLAS_APPL_CNT
        FROM CNET_LECT_APPL_CNT
       WHERE 1=1
         AND SET_SER = #{setSer}
         AND SCH_NO = #{schNo}
    </select>


    <!-- 수업중복 대기상태체크-->
    <select id="dupLectApplInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="Integer">
        SELECT COUNT(*)
         FROM(
            SELECT LECT_SER,
                   LECT_TIMS,
                   CLAS_ROOM_SER
             FROM CNET_LECT_APPL_INFO
             WHERE 1=1
               AND APPL_STAT_CD = '101575'  /* 대기상태 */
               AND CLAS_ROOM_SER = #{clasRoomSer} ) T
        INNER JOIN CNET_LECT_TIMS_INFO Z ON Z.LECT_SER = T.LECT_SER AND Z.LECT_TIMS = T.LECT_TIMS
        WHERE Z.LECT_STAT_CD = '101543' /* 수강모집 */
    </select>

    <!-- 나의수업 정보조회-->
    <select id="myLectureInfoList" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        /* paging */
        SELECT
                 D.LECT_INTDC_INFO
                ,D.LECT_SUST_INFO
                ,D.MAX_APPL_CNT
                ,D.MAX_OBSV_CNT
                ,D.LECT_REQ_SER
                ,D.LECT_SER
                ,D.LECT_TYPE_CD
                ,D.LECT_TARGT_CD
                ,D.LECT_TITLE
                ,D.LECT_START_DTM
                ,D.LECT_END_DTM
                ,D.LECTR_MBR_NO
                ,D.LECTR_NM
                ,D.LECTR_JOB_NO
                ,(SELECT JOB_NM FROM CNET_JOB_INFO WHERE JOB_NO = D.LECTR_JOB_NO) AS LECTR_JOB_NM
                ,D.LECT_PIC_PATH
                ,D.LECT_OUTLN_INFO
                ,B.LECT_TIMS
                ,C.LECT_STAT_CD
                ,(SELECT CD_NM FROM CNET_CODE WHERE CD = C.LECT_STAT_CD) AS LECT_STAT_CD_NM
                ,C.SCHD_SEQ
                ,C.LECT_DAY
                ,C.LECT_START_TIME
                ,C.LECT_END_TIME
                ,C.MC_NO
                ,C.STDO_NO
                ,C.LECT_CNCL_RSN_SUST
                ,A.CLAS_ROOM_SER
                ,A.APPL_MBR_NO
                ,A.SET_SER
                ,A.APPL_STAT_CD
                ,A.APPL_CLASS_CD
                ,TO_CHAR(A.REG_DTM, 'YYYYMMDD') AS REG_DTM
                ,(SELECT Z.CLAS_ROOM_NM FROM CNET_CLAS_ROOM_INFO Z WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS CLAS_ROOM_NM
                ,(SELECT Y.SCH_NM FROM CNET_CLAS_ROOM_INFO Z INNER JOIN CNET_SCH_INFO Y ON Y.SCH_NO = Z.SCH_NO WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS SCH_NM
                ,(SELECT Y.SCH_NO FROM CNET_CLAS_ROOM_INFO Z INNER JOIN CNET_SCH_INFO Y ON Y.SCH_NO = Z.SCH_NO WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS SCH_NO
                ,C.LECT_SESS_ID
                ,DECODE(D.LECT_TYPE_CD,'101532',2,1) * 0.5 as withdrawCnt
                ,E.CLAS_ROOM_CUALF_CD
                <choose>
                    <when test='@org.apache.commons.lang3.StringUtils@equals(lectTypeCd, "m")'>
                ,ROW_NUMBER() OVER(ORDER BY C.LECT_DAY , C.LECT_START_TIME, C.LECT_SER) AS rn
                    </when>
                    <otherwise>
                ,ROW_NUMBER() OVER(ORDER BY CASE WHEN B.LECT_STAT_CD IN ('101549','101550') THEN 0 ELSE 1 END, C.LECT_DAY DESC, A.REG_DTM DESC) AS rn
                    </otherwise>
                </choose>
                /* paging */
        FROM CNET_LECT_APPL_INFO A
       INNER JOIN CNET_LECT_TIMS_INFO B ON B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS AND B.EXPS_YN='Y'
       INNER JOIN CNET_LECT_SCHD_INFO C ON C.LECT_SER = B.LECT_SER AND C.LECT_TIMS = B.LECT_TIMS
       INNER JOIN CNET_LECT_INFO D ON D.LECT_SER = B.LECT_SER
       INNER JOIN CNET_CLAS_ROOM_REG_REQ_HIST E ON E.CLAS_ROOM_SER = A.CLAS_ROOM_SER AND E.REG_STAT_CD= '101526' AND E.REQ_MBR_NO = #{applMbrNo}
       WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTypeCd)">
            <choose>
                <when test='@org.apache.commons.lang3.StringUtils@equals(lectTypeCd, "1")'>
                    AND C.LECT_STAT_CD IN ('101543', '101548')
                </when>
                <when test='@org.apache.commons.lang3.StringUtils@equals(lectTypeCd, "2")'>
                    AND C.LECT_STAT_CD IN ('101549', '101550')
                </when>
                <when test='@org.apache.commons.lang3.StringUtils@equals(lectTypeCd, "3")'>
                    AND C.LECT_STAT_CD = '101551'
                </when>
                <when test='@org.apache.commons.lang3.StringUtils@equals(lectTypeCd, "4")'>
                    AND ( C.LECT_STAT_CD IN ('101545', '101547') OR A.APPL_STAT_CD = '101578' )
                </when>
                <when test='@org.apache.commons.lang3.StringUtils@equals(lectTypeCd, "m")'>
                    AND C.LECT_STAT_CD IN ('101548', '101549', 101550)
                </when>
            </choose>
            <if test='lectTypeCd != "4" '>
                AND NOT A.APPL_STAT_CD = '101578'
            </if>
        </if>
    </select>

    <!-- 나의요청수업 정보 조회(교사)-->
    <select id="myLectureReqInfoList" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        /* paging */
        SELECT  C.LECT_INTDC_INFO,
                NVL(C.LECT_SUST_INFO,A.LECT_SUST) AS LECT_SUST_INFO,
                C.MAX_APPL_CNT,
                C.MAX_OBSV_CNT,
                C.LECT_REQ_SER,
                C.LECT_SER,
                C.LECT_TYPE_CD,
                C.LECT_TARGT_CD,
                C.LECT_TITLE,
                A.LECT_TITLE AS REQ_LECT_TITLE,
                C.LECT_START_DTM,
                C.LECT_END_DTM,
                C.LECTR_MBR_NO,
                C.LECTR_NM,
                C.LECTR_JOB_NO,
                (SELECT JOB_NM FROM CNET_JOB_INFO WHERE JOB_NO = C.LECTR_JOB_NO) AS LECTR_JOB_NM,
                C.LECT_PIC_PATH,
                C.LECT_OUTLN_INFO,
                D.LECT_TIMS,
                E.LECT_STAT_CD,
                (SELECT CD_NM FROM CNET_CODE WHERE CD = E.LECT_STAT_CD) AS LECT_STAT_CD_NM,
                E.SCHD_SEQ,
                E.LECT_DAY,
                E.LECT_START_TIME,
                E.LECT_END_TIME,
                E.MC_NO,
                E.STDO_NO,
                E.LECT_CNCL_RSN_SUST,
                A.REQ_SER,
                TO_CHAR(A.REQ_DTM, 'YYYYMMDD') AS REG_DTM,
                A.CLAS_ROOM_SER,
                (SELECT Z.CLAS_ROOM_NM FROM CNET_CLAS_ROOM_INFO Z WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS CLAS_ROOM_NM,
                (SELECT Y.SCH_NM FROM CNET_CLAS_ROOM_INFO Z INNER JOIN CNET_SCH_INFO Y ON Y.SCH_NO = Z.SCH_NO WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS SCH_NM,
                (SELECT Y.SCH_NO FROM CNET_CLAS_ROOM_INFO Z INNER JOIN CNET_SCH_INFO Y ON Y.SCH_NO = Z.SCH_NO WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS SCH_NO,
                A.REQ_STAT_CD,
                (SELECT CD_NM FROM CNET_CODE WHERE CD = A.REQ_STAT_CD) AS REQ_STAT_CD_NM,
                E.LECT_SESS_ID,
                (SELECT JOB_NM FROM CNET_JOB_INFO WHERE JOB_NO = A.TARGT_JOB_NO) AS TARGT_JOB_NM,
                (SELECT NM FROM CNET_MBR_INFO WHERE MBR_NO = A.TARGT_MBR_NO) AS TARGT_MENTOR_NM,
                ROW_NUMBER () OVER ( ORDER BY E.LECT_DAY DESC, A.REQ_DTM DESC) AS rn
                /* paging */
        FROM CNET_LECT_REQ_INFO A
        LEFT OUTER JOIN CNET_LECT_INFO C ON C.LECT_REQ_SER = A.REQ_SER
        LEFT OUTER JOIN CNET_LECT_TIMS_INFO D ON C.LECT_SER = D.LECT_SER AND D.EXPS_YN='Y'
        LEFT OUTER JOIN CNET_LECT_SCHD_INFO E ON E.LECT_SER = D.LECT_SER AND E.LECT_TIMS = D.LECT_TIMS AND E.SCHD_SEQ = 1
        WHERE 1=1
        AND A.REQ_MBR_NO = #{applMbrNo}
        AND NOT EXISTS(SELECT 1 FROM CNET_LECT_APPL_INFO WHERE APPL_MBR_NO = A.REQ_MBR_NO AND LECT_SER = D.LECT_SER AND LECT_TIMS = D.LECT_TIMS)
        AND ( ( C.LECT_SER IS NOT NULL AND D.LECT_SER IS NOT NULL ) OR  ( C.LECT_SER IS NULL AND D.LECT_SER IS NULL ) )
    </select>

    <!-- 나의요청수업/수업신청 정보 조회-->
    <select id="myLectureInfoAllList" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        /* paging */
        SELECT T.*
              ,ROW_NUMBER() OVER(ORDER BY CASE WHEN T.LECT_STAT_CD IN ('101549','101550') THEN 0 ELSE 1 END, T.LECT_DAY DESC, T.REG_DTM DESC, T.LECT_SER DESC) AS rn
        /* paging */
        FROM
                 (
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrClassCd, '100859') or @org.apache.commons.lang3.StringUtils@equals(mbrClassCd, '101707')">
            SELECT  C.LECT_INTDC_INFO,
                    NVL(C.LECT_SUST_INFO,A.LECT_SUST) AS LECT_SUST_INFO,
                    C.MAX_APPL_CNT,
                    C.MAX_OBSV_CNT,
                    C.LECT_REQ_SER,
                    C.LECT_SER,
                    C.LECT_TYPE_CD,
                    C.LECT_TARGT_CD,
                    C.LECT_TITLE,
                    A.LECT_TITLE AS REQ_LECT_TITLE,
                    C.LECT_START_DTM,
                    C.LECT_END_DTM,
                    C.LECTR_MBR_NO,
                    C.LECTR_NM,
                    C.LECTR_JOB_NO,
                    (SELECT JOB_NM FROM CNET_JOB_INFO WHERE JOB_NO = C.LECTR_JOB_NO) AS LECTR_JOB_NM,
                    C.LECT_PIC_PATH,
                    C.LECT_OUTLN_INFO,
                    D.LECT_TIMS,
                    E.LECT_STAT_CD,
                    (SELECT CD_NM FROM CNET_CODE WHERE CD = E.LECT_STAT_CD) AS LECT_STAT_CD_NM,
                    E.SCHD_SEQ,
                    NVL(E.LECT_DAY,( SELECT Z.LECT_PREF_DAY FROM CNET_LECT_REQ_TIME_INFO Z WHERE A.REQ_SER = Z.REQ_SER AND ROWNUM = 1)) AS LECT_DAY,
                    E.LECT_START_TIME,
                    E.LECT_END_TIME,
                    E.MC_NO,
                    E.STDO_NO,
                    E.LECT_CNCL_RSN_SUST,
                    NULL AS CLAS_ROOM_SER,
                    NULL AS CLAS_ROOM_CUALF_CD,
                    '' AS APPL_MBR_NO,
                    NULL AS SET_SER,
                    '' AS APPL_STAT_CD,
                    '' AS APPL_CLASS_CD,
                    TO_CHAR(A.REQ_DTM, 'YYYYMMDD') AS REG_DTM,
                    A.REQ_SER,
                    (SELECT Z.CLAS_ROOM_NM FROM CNET_CLAS_ROOM_INFO Z WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS CLAS_ROOM_NM,
                    (SELECT Y.SCH_NM FROM CNET_CLAS_ROOM_INFO Z INNER JOIN CNET_SCH_INFO Y ON Y.SCH_NO = Z.SCH_NO WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS SCH_NM,
                    (SELECT Y.SCH_NO FROM CNET_CLAS_ROOM_INFO Z INNER JOIN CNET_SCH_INFO Y ON Y.SCH_NO = Z.SCH_NO WHERE Z.CLAS_ROOM_SER = A.CLAS_ROOM_SER) AS SCH_NO,
                    A.REQ_STAT_CD,
                    (SELECT CD_NM FROM CNET_CODE WHERE CD = A.REQ_STAT_CD) AS REQ_STAT_CD_NM,
                    E.LECT_SESS_ID,
                    (SELECT JOB_NM FROM CNET_JOB_INFO WHERE JOB_NO = A.TARGT_JOB_NO) AS TARGT_JOB_NM,
                    (SELECT NM FROM CNET_MBR_INFO WHERE MBR_NO = A.TARGT_MBR_NO) AS TARGT_MENTOR_NM
                    ,DECODE(C.LECT_TYPE_CD,'101532',2,1) * 0.5 as withdrawCnt
            FROM CNET_LECT_REQ_INFO A
            LEFT OUTER JOIN CNET_LECT_INFO C ON C.LECT_REQ_SER = A.REQ_SER
            LEFT OUTER JOIN CNET_LECT_TIMS_INFO D ON C.LECT_SER = D.LECT_SER AND D.EXPS_YN='Y'
            LEFT OUTER JOIN CNET_LECT_SCHD_INFO E ON E.LECT_SER = D.LECT_SER AND E.LECT_TIMS = D.LECT_TIMS AND E.SCHD_SEQ=1
            WHERE 1=1
            AND A.REQ_MBR_NO = #{applMbrNo}
            AND ( ( C.LECT_SER IS NOT NULL AND D.LECT_SER IS NOT NULL ) OR  ( C.LECT_SER IS NULL AND D.LECT_SER IS NULL ) )
            AND NOT EXISTS(SELECT 1 FROM CNET_LECT_APPL_INFO WHERE APPL_MBR_NO = A.REQ_MBR_NO AND LECT_SER = D.LECT_SER AND LECT_TIMS = D.LECT_TIMS)
            UNION ALL
        </if>
                  SELECT
                         I.LECT_INTDC_INFO
                        ,I.LECT_SUST_INFO
                        ,I.MAX_APPL_CNT
                        ,I.MAX_OBSV_CNT
                        ,I.LECT_REQ_SER
                        ,I.LECT_SER
                        ,I.LECT_TYPE_CD
                        ,I.LECT_TARGT_CD
                        ,I.LECT_TITLE
                        ,NULL AS REQ_LECT_TITLE
                        ,I.LECT_START_DTM
                        ,I.LECT_END_DTM
                        ,I.LECTR_MBR_NO
                        ,I.LECTR_NM
                        ,I.LECTR_JOB_NO
                        ,(SELECT JOB_NM FROM CNET_JOB_INFO WHERE JOB_NO = I.LECTR_JOB_NO) AS LECTR_JOB_NM
                        ,I.LECT_PIC_PATH
                        ,I.LECT_OUTLN_INFO
                        ,G.LECT_TIMS
                        ,H.LECT_STAT_CD
                        ,(SELECT CD_NM FROM CNET_CODE WHERE CD = H.LECT_STAT_CD) AS LECT_STAT_CD_NM
                        ,H.SCHD_SEQ
                        ,H.LECT_DAY
                        ,H.LECT_START_TIME
                        ,H.LECT_END_TIME
                        ,H.MC_NO
                        ,H.STDO_NO
                        ,H.LECT_CNCL_RSN_SUST
                        ,F.CLAS_ROOM_SER
                        ,J.CLAS_ROOM_CUALF_CD
                        ,F.APPL_MBR_NO
                        ,F.SET_SER
                        ,F.APPL_STAT_CD
                        ,F.APPL_CLASS_CD
                        ,TO_CHAR(F.REG_DTM, 'YYYYMMDD') AS REG_DTM
                        ,NULL AS REQ_SER
                        ,(SELECT Z.CLAS_ROOM_NM FROM CNET_CLAS_ROOM_INFO Z WHERE Z.CLAS_ROOM_SER = F.CLAS_ROOM_SER) AS CLAS_ROOM_NM
                        ,(SELECT Y.SCH_NM FROM CNET_CLAS_ROOM_INFO Z INNER JOIN CNET_SCH_INFO Y ON Y.SCH_NO = Z.SCH_NO WHERE Z.CLAS_ROOM_SER = F.CLAS_ROOM_SER) AS SCH_NM
                        ,(SELECT Y.SCH_NO FROM CNET_CLAS_ROOM_INFO Z INNER JOIN CNET_SCH_INFO Y ON Y.SCH_NO = Z.SCH_NO WHERE Z.CLAS_ROOM_SER = F.CLAS_ROOM_SER) AS SCH_NO
                        ,'' AS REQ_STAT_CD
                        ,'' AS REQ_STAT_CD_NM
                        ,H.LECT_SESS_ID
                        ,NULL AS TARGT_JOB_NM
                        ,NULL AS TARGT_MENTOR_NM
                        ,DECODE(I.LECT_TYPE_CD,'101532',2,1) * 0.5 as withdrawCnt
         FROM CNET_LECT_APPL_INFO F
        INNER JOIN CNET_LECT_TIMS_INFO G ON G.LECT_SER = F.LECT_SER AND G.LECT_TIMS = F.LECT_TIMS AND G.EXPS_YN='Y'
        INNER JOIN CNET_LECT_SCHD_INFO H ON H.LECT_SER = G.LECT_SER AND H.LECT_TIMS = G.LECT_TIMS
        INNER JOIN CNET_LECT_INFO I ON I.LECT_SER = G.LECT_SER
        INNER JOIN CNET_CLAS_ROOM_REG_REQ_HIST J ON J.CLAS_ROOM_SER = F.CLAS_ROOM_SER AND J.REG_STAT_CD= '101526' AND J.REQ_MBR_NO = #{applMbrNo}
        WHERE 1=1
     ) T
    </select>

    <!-- 나의요청수업 희망시간조회-->
    <select id="myLectureReqTimeList" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        SELECT A.REQ_SER
              ,B.LECT_PREF_DAY
              ,B.LECT_PREF_TIME
        FROM CNET_LECT_REQ_INFO A
        INNER JOIN CNET_LECT_REQ_TIME_INFO B ON B.REQ_SER = A.REQ_SER
        WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrClassCd, '100859') or @org.apache.commons.lang3.StringUtils@equals(mbrClassCd, '101707')">
            AND A.REQ_MBR_NO = #{applMbrNo}
        </if>
            AND A.REQ_SER = #{reqSer}
    </select>

    <!-- 나의수업 갯수 조회(교사)-->
    <select id="myLectureStatCnt" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        SELECT SUM(T.ST_101542) AS ST_101542,
               SUM(T.ST_101543) AS ST_101543,
               SUM(T.ST_101544) AS ST_101544,
               SUM(T.ST_101545) AS ST_101545,
               SUM(T.ST_101546) AS ST_101546,
               SUM(T.ST_101547) AS ST_101547,
               SUM(T.ST_101548) AS ST_101548,
               SUM(T.ST_101549) AS ST_101549,
               SUM(T.ST_101550) AS ST_101550,
               SUM(T.ST_101551) AS ST_101551,
               SUM(T.ST_101552) AS ST_101552,
               SUM(T.ST_101553) AS ST_101553,
               SUM(T.ST_101662) AS ST_101662,
               SUM(T.ST_101575) AS ST_101575,
               SUM(T.ST_101576) AS ST_101576,
               SUM(T.ST_101577) AS ST_101577,
               SUM(T.ST_101578) AS ST_101578,
               SUM(T.LECT_CNT) AS LECT_CNT
        FROM (
                SELECT NVL(SUM(DECODE(C.LECT_STAT_CD,'101542',1,0)),0) AS ST_101542
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101543',1,0)),0) AS ST_101543
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101544',1,0)),0) AS ST_101544
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101545',1,0)),0) AS ST_101545
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101546',1,0)),0) AS ST_101546
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101547',1,0)),0) AS ST_101547
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101548',1,0)),0) AS ST_101548
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101549',1,0)),0) AS ST_101549
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101550',1,0)),0) AS ST_101550
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101551',1,0)),0) AS ST_101551
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101552',1,0)),0) AS ST_101552
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101553',1,0)),0) AS ST_101553
                      ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101662',1,0)),0) AS ST_101662
                      ,0 AS ST_101575
                      ,0 AS ST_101576
                      ,0 AS ST_101577
                      ,0 AS ST_101578
                      ,0 AS LECT_CNT
                FROM CNET_LECT_APPL_INFO A
               INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
               INNER JOIN CNET_LECT_SCHD_INFO C ON (C.LECT_SER = B.LECT_SER AND C.LECT_TIMS = B.LECT_TIMS)
               INNER JOIN CNET_LECT_INFO D ON (D.LECT_SER = B.LECT_SER)
               WHERE 1 = 1
                 AND A.APPL_STAT_CD IN ('101576', '101577')  /* 상태:확정,승인 */
                 AND A.CLAS_ROOM_SER IN
            <foreach item="clasList" index="index" collection="clasRoomList" open="(" close=")" separator="," >
                #{clasList.clasRoomSer}
            </foreach>
                 AND A.APPL_MBR_NO = #{applMbrNo}
        UNION ALL
        SELECT   0 AS ST_101542
                ,0 AS ST_101543
                ,0 AS ST_101544
                ,0 AS ST_101545
                ,0 AS ST_101546
                ,0 AS ST_101547
                ,0 AS ST_101548
                ,0 AS ST_101549
                ,0 AS ST_101550
                ,0 AS ST_101551
                ,0 AS ST_101552
                ,0 AS ST_101553
                ,0 AS ST_101662
                ,NVL(SUM(DECODE(A.APPL_STAT_CD,'101575',1,0)),0) AS ST_101575
                ,NVL(SUM(DECODE(A.APPL_STAT_CD,'101576',1,0)),0) AS ST_101576
                ,NVL(SUM(DECODE(A.APPL_STAT_CD,'101577',1,0)),0) AS ST_101577
                ,NVL(SUM(DECODE(A.APPL_STAT_CD,'101578',1,0)),0) AS ST_101578
                , 0 AS LECT_CNT
        FROM CNET_LECT_APPL_INFO A
        INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
        INNER JOIN CNET_LECT_SCHD_INFO C ON (C.LECT_SER = B.LECT_SER AND C.LECT_TIMS = B.LECT_TIMS)
        INNER JOIN CNET_LECT_INFO D ON (D.LECT_SER = B.LECT_SER)
        AND A.APPL_STAT_CD IN ('101575', '101578')  /* 상태:대기,취소 */
        WHERE 1 = 1
        AND A.CLAS_ROOM_SER IN
        <foreach item="clasList" index="index" collection="clasRoomList" open="(" close=")" separator="," >
            #{clasList.clasRoomSer}
        </foreach>
        AND A.APPL_MBR_NO = #{applMbrNo}

        UNION ALL
                SELECT 0 AS ST_101542
                      ,0 AS ST_101543
                      ,0 AS ST_101544
                      ,0 AS ST_101545
                      ,0 AS ST_101546
                      ,0 AS ST_101547
                      ,0 AS ST_101548
                      ,0 AS ST_101549
                      ,0 AS ST_101550
                      ,0 AS ST_101551
                      ,0 AS ST_101552
                      ,0 AS ST_101553
                      ,0 AS ST_101662
                      ,0 AS ST_101575
                      ,0 AS ST_101576
                      ,0 AS ST_101577
                      ,0 AS ST_101578
                      ,COUNT (*) AS LECT_CNT
                FROM CNET_LECT_REQ_INFO A
                LEFT OUTER JOIN CNET_LECT_INFO C ON (C.LECT_REQ_SER = A.REQ_SER)
                LEFT OUTER JOIN CNET_LECT_TIMS_INFO D ON (C.LECT_SER = D.LECT_SER)
               WHERE 1 = 1
                 AND ((C.LECT_SER IS NOT NULL AND D.LECT_SER IS NOT NULL) OR (C.LECT_SER IS NULL AND D.LECT_SER IS NULL))
                 AND REQ_MBR_NO = #{applMbrNo}) T
    </select>

    <!-- 나의수업 갯수 조회(학생)-->
    <select id="stuMyLectureStatCnt" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        SELECT NVL(SUM(DECODE(C.LECT_STAT_CD,'101542',1,0)),0) AS ST_101542
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101543',1,0)),0) AS ST_101543
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101544',1,0)),0) AS ST_101544
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101545',1,0)),0) AS ST_101545
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101546',1,0)),0) AS ST_101546
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101547',1,0)),0) AS ST_101547
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101548',1,0)),0) AS ST_101548
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101549',1,0)),0) AS ST_101549
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101550',1,0)),0) AS ST_101550
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101551',1,0)),0) AS ST_101551
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101552',1,0)),0) AS ST_101552
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101553',1,0)),0) AS ST_101553
              ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101662',1,0)),0) AS ST_101662
              ,0 AS ST_101575
              ,0 AS ST_101576
              ,0 AS ST_101577
              ,0 AS ST_101578
              ,0 AS LECT_CNT
        FROM CNET_LECT_APPL_INFO A
        INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
        INNER JOIN CNET_LECT_SCHD_INFO C ON (C.LECT_SER = B.LECT_SER AND C.LECT_TIMS = B.LECT_TIMS)
        INNER JOIN CNET_LECT_INFO D ON (D.LECT_SER = B.LECT_SER)
        WHERE 1 = 1
        AND A.APPL_STAT_CD IN ('101576', '101577')  /* 상태:확정,승인 */
        AND C.LECT_STAT_CD IN ('101543', '101548', '101550', '101551') /* 수업상태: 수강모집, 수업예정, 수업중, 수업완료*/
        AND A.CLAS_ROOM_SER IN
        <foreach item="clasList" index="index" collection="clasRoomList" open="(" close=")" separator="," >
            #{clasList.clasRoomSer}
        </foreach>
    </select>

    <!-- 속한 교실목록 조회-->
    <select id="myLectureClasRoomList" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.ClasRoomRegReqHist">
        <include refid="myClassroomCd"></include>
    </select>

    <!-- 수업정보 수정 -->
    <update id="updateLectInfo" parameterType="kr.or.career.mentor.domain.LectInfo">
        /* LectureInfomationMapper.xml 설명 : 수업정보 수정, ID : updateLectInfo, 작성일 : 2015.10.02 */
        UPDATE CNET_LECT_INFO
           SET
                LECT_TYPE_CD    = #{lectTypeCd, jdbcType=VARCHAR}
              , LECT_TARGT_CD   = #{lectTargtCd, jdbcType=VARCHAR}
              , LECT_TITLE      = #{lectTitle, jdbcType=VARCHAR}
              , LECT_START_DTM  = #{lectStartDtm, jdbcType=VARCHAR}
              , LECT_END_DTM    = #{lectEndDtm, jdbcType=VARCHAR}
              , LECTR_MBR_NO    = #{lectrMbrNo, jdbcType=VARCHAR}
              , LECTR_NM        = (SELECT Z.NM AS LECTR_NM FROM CNET_MBR_INFO Z WHERE Z.MBR_NO = #{lectrMbrNo, jdbcType=VARCHAR})
              , LECTR_JOB_NO    = (SELECT Z.JOB_NO AS LECTR_JOB_NO FROM CNET_MBR_JOB_INFO Z WHERE Z.MBR_NO = #{lectrMbrNo, jdbcType=VARCHAR})
              , LECT_PIC_PATH   = #{lectPicPath, jdbcType=VARCHAR}
              , LECT_OUTLN_INFO = #{lectOutlnInfo, jdbcType=VARCHAR}
              , LECT_INTDC_INFO = #{lectIntdcInfo, jdbcType=VARCHAR}
              , LECT_SUST_INFO  = #{lectSustInfo, jdbcType=VARCHAR}
              , LECT_REQ_SER    = #{lectReqSer, jdbcType=NUMERIC}
              , LECT_STAT_CD    = #{lectStatCd, jdbcType=VARCHAR}
              , CHG_DTM         = SYSDATE
              , CHG_MBR_NO      = #{chgMbrNo}
         WHERE 1 = 1
           AND LECT_SER = #{lectSer}
    </update>

    <!-- 수업정보 등록 -->
    <insert id="insertLectInfo" parameterType="kr.or.career.mentor.domain.LectInfo">
        <selectKey keyProperty="lectSer" resultType="Integer" order="BEFORE">
            SELECT SQ_LECT_INFO.NEXTVAL FROM DUAL
        </selectKey>
        /* LectureInfomationMapper.xml 설명 : 수업정보 등록, ID : insertLectInfo, 작성일 : 2015.10.02 */
        INSERT INTO CNET_LECT_INFO (
                                      LECT_SER
                                    , LECT_TYPE_CD
                                    , LECT_TARGT_CD
                                    , LECT_TITLE
                                    , LECT_START_DTM
                                    , LECT_END_DTM
                                    , LECTR_MBR_NO
                                    , LECTR_NM
                                    , LECTR_JOB_NO
                                    , LECT_PIC_PATH
                                    , LECT_OUTLN_INFO
                                    , LECT_INTDC_INFO
                                    , LECT_SUST_INFO
                                    , LECT_STAT_CD
                                    , MAX_APPL_CNT
                                    , MAX_OBSV_CNT
                                    , LECT_REQ_SER
                                    , REG_DTM
                                    , REG_MBR_NO
                                    , LECT_GRP_NO
                                    , LECT_CO_NO
                                    ) VALUES (
                                      #{lectSer}
                                    , #{lectTypeCd, jdbcType=VARCHAR}
                                    , #{lectTargtCd, jdbcType=VARCHAR}
                                    , #{lectTitle, jdbcType=VARCHAR}
                                    , #{lectStartDtm, jdbcType=VARCHAR}
                                    , #{lectEndDtm, jdbcType=VARCHAR}
                                    , #{lectrMbrNo, jdbcType=VARCHAR}
                                    , (SELECT Z.NM AS LECTR_NM FROM CNET_MBR_INFO Z WHERE Z.MBR_NO = #{lectrMbrNo, jdbcType=VARCHAR})
                                    , (SELECT Z.JOB_NO AS LECTR_JOB_NO FROM CNET_MBR_JOB_INFO Z WHERE Z.MBR_NO = #{lectrMbrNo, jdbcType=VARCHAR})
                                    , #{lectPicPath, jdbcType=VARCHAR}
                                    , #{lectOutlnInfo, jdbcType=VARCHAR}
                                    , #{lectIntdcInfo, jdbcType=VARCHAR}
                                    , #{lectSustInfo, jdbcType=VARCHAR}
                                    , #{lectStatCd, jdbcType=VARCHAR}
                                    , (SELECT MAX_APPL_CNT FROM CNET_BIZ_GRP_INFO WHERE GRP_NO = #{lectGrpNo})
                                    , (SELECT MAX_OBSV_CNT FROM CNET_BIZ_GRP_INFO WHERE GRP_NO = #{lectGrpNo})
                                    , #{lectReqSer, jdbcType=INTEGER}
                                    , SYSDATE
                                    , #{regMbrNo, jdbcType=VARCHAR}
                                    , #{lectGrpNo, jdbcType=VARCHAR}
                                    , #{lectCoNo, jdbcType=VARCHAR}
                                    )
    </insert>

    <!-- 수업평점 조회 -->
    <select id="retireveLectureRating" parameterType="kr.or.career.mentor.domain.ArclInfo" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* LectureInfomationMapper.xml 설명 : 수업정보 등록, ID : retireveLectureRating, 작성일 : 2015.10.02 */
        SELECT
                ROUND(NVL(AVG(T.TEACHER_RATING), 0), 1) AS TEACHER_RATING
              , ROUND(NVL(AVG(T.STUDENT_RATING), 0), 1) AS STUDENT_RATING
              , COUNT(*) AS TOTAL_RECORD_COUNT
          FROM (
                SELECT
                        B.REG_MBR_NO
                      , CASE
                          WHEN C.MBR_CLASS_CD = '100859' THEN B.ASM_PNT
                          ELSE NULL
                        END AS TEACHER_RATING
                      , CASE
                          WHEN C.MBR_CLASS_CD = '100858' AND C.MBR_CUALF_CD IN ('100205', '100206', '100207', '100208') THEN B.ASM_PNT
                          ELSE NULL
                        END AS STUDENT_RATING
                  FROM CNET_ARCL_INFO A
                 INNER JOIN CNET_ARCL_CMT_INFO B ON (B.BOARD_ID = A.BOARD_ID AND B.ARCL_SER = A.ARCL_SER)
                 INNER JOIN CNET_MBR_INFO C ON (B.REG_MBR_NO = C.MBR_NO)
                 WHERE 1 = 1
                   AND A.BOARD_ID = #{boardId} /* 게시판ID : lecAppr */
                   AND A.CNTNTS_TARGT_CD = #{cntntsTargtCd} /* 게시판 대상 코드 : 강의평가(101511) */
                   AND A.CNTNTS_TARGT_NO = #{cntntsTargtNo} /* 게시판 대상 번호 : 수업일련번호 */
                   AND B.SUP_CMT_SER IS NULL
                   AND B.USE_YN = 'Y'
                ) T
    </select>

    <!-- 관련수업 목록조회 -->
    <select id="listRelationLecture" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* LectureInfomationMapper.xml 설명 : 관련수업 목록조회, ID : listRelationLecture, 작성일 : 2015.10.05 */
        /* paging */
        SELECT
                 A.LECT_SER
               , A.LECT_TIMS
               , A.SCHD_SEQ
               , B.LECT_TITLE
               , B.LECT_INTDC_INFO
               , B.LECTR_MBR_NO
               , (SELECT Z.NM FROM CNET_MBR_INFO Z WHERE Z.MBR_NO = B.LECTR_MBR_NO) AS LECTR_NM
               , B.LECTR_JOB_NO
               , B.LECT_TARGT_CD
               , A.LECT_DAY
               , A.LECT_START_TIME
               , A.LECT_END_TIME
               , A.LECT_STAT_CD
               , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM
               , A.REG_DTM
               , C.CNTNTS_ID
               , C.ARCL_SER
               , ROW_NUMBER() OVER(ORDER BY A.LECT_DAY DESC, A.LECT_START_TIME DESC) AS RN
        /* paging */
          FROM CNET_LECT_SCHD_INFO A
         INNER JOIN CNET_LECT_INFO B ON (B.LECT_SER = A.LECT_SER)
          LEFT OUTER JOIN (
                           SELECT
                                    F.ARCL_SER
                                  , F.BOARD_ID
                                  , F.CNTNTS_ID
                                  , F.CNTNTS_TARGT_NO
                                  , F.CNTNTS_TARGT_TIMS
                                  , F.CNTNTS_TARGT_SEQ
                                  , ROW_NUMBER() OVER(ORDER BY F.REG_DTM) AS RN
                             FROM CNET_ARCL_INFO F
                            WHERE 1 = 1
                              AND F.CNTNTS_TARGT_CD = #{cntntsTargtCd}
                           ) C ON (    C.CNTNTS_TARGT_NO = A.LECT_SER
                                   AND C.CNTNTS_TARGT_TIMS = A.LECT_TIMS
                                   AND C.CNTNTS_TARGT_SEQ = A.SCHD_SEQ
                                  )
                                   /*AND C.RN = 1)*/
         WHERE 1 = 1
           AND (   B.LECTR_MBR_NO = #{mbrNo}
                OR B.LECTR_JOB_NO = #{jobNo})
           AND A.LECT_STAT_CD IN ('101543','101547','101548','101549','101550','101551','101552','101553') /* 수업모집, 모집취소, 수업예정, 수업대기, 수업중, 수업완료, 수업취소요청, 수업취소 */
           AND NOT EXISTS (SELECT 1 FROM CNET_LECT_SCHD_INFO Z WHERE A.LECT_SER = #{lectSer} AND A.LECT_TIMS = #{lectTims} )
           AND A.SCHD_SEQ = 1
    </select>

    <!-- 수업일정정보 단건조회-->
    <select id="retireveLectureSchdInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultMap="resultLectSchdInfo">
        <include refid="kr.or.career.mentor.dao.LectureInfomationMapper.selectListLect"></include>
        AND A.LECT_SER = #{lectSer, jdbcType=INTEGER}
        AND A.LECT_TIMS = #{lectTims, jdbcType=INTEGER}
        AND A.SCHD_SEQ = #{schdSeq, jdbcType=INTEGER}
    </select>

    <!-- 교사가 담당하는 학교정보 목록 조회(selectbox) -->
    <select id="listSchInfo" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.SchInfo">
        /* LectureInfomationMapper.xml 설명 : 교사가 담당하는 학교정보 목록 조회(selectbox), ID : listSchInfo, 작성일 : 2015.10.08 */
        SELECT DISTINCT
                B.SCH_NO
              , B.SCH_NM
          FROM CNET_CLAS_ROOM_INFO A
         INNER JOIN CNET_SCH_INFO B ON (B.SCH_NO = A.SCH_NO)
         WHERE 1 = 1
           AND A.TCHR_MBR_NO = #{mbrNo}
    </select>

    <!-- 학교에 속한 교실목록 조회 -->
    <select id="listClasRoomInfo" parameterType="kr.or.career.mentor.domain.SchInfo" resultType="kr.or.career.mentor.domain.ClasRoomInfo">
        /* LectureInfomationMapper.xml 설명 : 학교에 속한 교실목록 조회, ID : listClasRoomInfo, 작성일 : 2015.10.08 */
        SELECT
                A.CLAS_ROOM_SER
              , A.CLAS_ROOM_NM
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrNo)">
              , B.CLAS_ROOM_CUALF_CD
        </if>
          FROM CNET_CLAS_ROOM_INFO A
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrNo)">
        INNER JOIN CNET_CLAS_ROOM_REG_REQ_HIST B ON (B.CLAS_ROOM_SER = A.CLAS_ROOM_SER)
        </if>
         WHERE 1= 1
           AND A.SCH_NO = #{schNo}
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrNo)">
           AND B.REG_STAT_CD = '101526' /* 승인된 교실만 */
           AND B.REQ_MBR_NO = #{mbrNo}
           AND SYSDATE BETWEEN A.VALID_START_DAY AND A.VALID_END_DAY AND A.USE_YN='Y' AND A.DEL_YN='N'
           ORDER BY A.CLAS_ROOM_NM
        </if>
    </select>


    <select id="selectLectTarget" parameterType="string" resultType="string">
        SELECT  USER_DEF1_INFO
        FROM    CNET_LECT_INFO A
                    INNER JOIN CNET_CODE B
                        ON A.LECT_TARGT_CD = B.CD
        WHERE   A.LECT_SER = #{lectSer}
    </select>

    <select id="selectSchoolClass" parameterType="string" resultType="string">
        SELECT  USER_DEF1_INFO
        FROM    CNET_SCH_INFO A
                    INNER JOIN CNET_CODE B
                        ON A.SCH_CLASS_CD = B.CD
        WHERE   A.SCH_NO = #{schNo}
    </select>

    <!-- 학교에서 신청한 수업 내역 -->
    <select id="listSchoolLect" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO" parameterType="kr.or.career.mentor.domain.BizSetInfo">
    /* paging */
        SELECT E.LECT_SER, E.LECT_TIMS, E.SCHD_SEQ, E.LECT_DAY, E.LECT_START_TIME, E.LECT_END_TIME, E.LECT_STAT_CD
               , (SELECT CD_NM FROM CNET_CODE WHERE SUP_CD = '101541' AND CD = E.LECT_STAT_CD) AS LECT_STAT_NM
               , A.APPL_STAT_CD
               , (SELECT CD_NM FROM CNET_CODE WHERE SUP_CD = '101574' AND CD = A.APPL_STAT_CD) AS APPL_STAT_NM
               , C.LECT_TYPE_CD, (SELECT CD_NM FROM CNET_CODE WHERE SUP_CD = '101528' AND CD = C.LECT_TYPE_CD) AS LECT_TYPE_NM
               , C.LECT_TITLE, C.LECTR_MBR_NO, C.LECTR_NM
               , F.CLAS_ROOM_NM
               , C.LECT_TARGT_CD
               , A.APPL_MBR_NO, (SELECT NM FROM CNET_MBR_INFO WHERE MBR_NO = A.APPL_MBR_NO) AS APPL_MBR_NM
               , A.APPL_CLASS_CD
               , (SELECT CD_NM FROM CNET_CODE WHERE SUP_CD = '101714' AND CD = A.APPL_CLASS_CD) AS APPL_CLASS_NM
                , CASE WHEN c.LECT_TYPE_CD = '101529' AND A.APPL_STAT_CD NOT IN ('101578','101730') THEN 1 /*단강*/
                WHEN c.LECT_TYPE_CD = '101530' AND A.APPL_STAT_CD NOT IN ('101578','101730')  THEN 1 /*연강*/
                WHEN c.LECT_TYPE_CD = '101531' AND A.APPL_STAT_CD NOT IN ('101578','101730')  THEN 1 /*특강*/
                WHEN c.LECT_TYPE_CD = '101532' AND A.APPL_STAT_CD NOT IN ('101578','101730')  THEN 2 /*블록*/
                /*
                CASE WHEN ( (TO_DATE(C.LECT_END_TIME, 'HH24MI') - TO_DATE(C.LECT_START_TIME, 'HH24MI')) * 24 * 60 ) >= 120 THEN 2
                ELSE 1
                END
                */
                ELSE 0
                END AS LECTURE_CNT /*차감회수*/
                , H.GRP_NM as grp_nm
               , ROW_NUMBER() OVER(ORDER BY E.LECT_DAY DESC, E.LECT_START_TIME DESC, C.LECT_TITLE) AS RN
    /* paging */
           FROM CNET_LECT_APPL_INFO A
        INNER JOIN CNET_LECT_INFO C
             ON A.LECT_SER = C.LECT_SER
        INNER JOIN CNET_LECT_SCHD_INFO E
             ON A.LECT_SER = E.LECT_SER
            AND A.LECT_TIMS = E.LECT_TIMS
        INNER JOIN CNET_CLAS_ROOM_INFO F
             ON A.CLAS_ROOM_SER = F.CLAS_ROOM_SER
        INNER JOIN CNET_BIZ_SET_INFO G
             ON A.SET_SER = G.SET_SER
        INNER JOIN Cnet_Biz_Grp_Info H
            ON H.GRP_NO = G.SET_TARGT_NO
          <where>
          <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(setTargtCd)">
            AND G.SET_TARGT_CD = #{setTargtCd}
          </if>
          <choose>
          <when test="setTargtCd eq '101600'">
          <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(setTargtNo)">
            AND G.SET_TARGT_NO = #{setTargtNo}
          </if>
          </when>
          <when test="setTargtCd eq '101601'">
          <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(bizGrpInfo.grpNo)">
            AND G.SET_TARGT_NO = #{bizGrpInfo.grpNo}
          </if>
          </when>
          </choose>
          <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(clasRoomSer)">
            AND A.CLAS_ROOM_SER = #{clasRoomSer}
          </if>
          <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applStatCd)">
              <choose>
                  <when test="applStatCd eq 1">
                      AND A.APPL_STAT_CD IN  ('101576','101577','101728','101729')
                  </when>
                  <otherwise>
                      AND A.APPL_STAT_CD IN  ('101578','101730')
                  </otherwise>
              </choose>
          </if>

            AND A.CLAS_ROOM_SER IN (
                SELECT DISTINCT AA.CLAS_ROOM_SER
                  FROM CNET_CLAS_ROOM_REG_REQ_HIST AA
            INNER JOIN CNET_CLAS_ROOM_INFO BB
                    ON AA.CLAS_ROOM_SER = BB.CLAS_ROOM_SER
                   AND AA.REG_STAT_CD = '101526'
            INNER JOIN CNET_SCH_INFO CC
                    ON BB.SCH_NO = CC.SCH_NO
                 WHERE CC.SCH_NO = #{lectApplCnt.schNo} /*학교의 교실정보*/
               )
          </where>
    </select>

    <!-- 회원 번호 기준으로 신청한 수업 기간조건으로 조회 -->
    <select id="listAppliedLecture" parameterType="kr.or.career.mentor.domain.LectureApplInfoDTO" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
       SELECT C. lect_ser, C.lect_tims, C.schd_seq, C.lect_day, C.lect_start_time, C.lect_end_time, C.lect_stat_cd
            , C.lect_sess_id
            , A.CLAS_ROOM_SER, A.SET_SER, A.APPL_CLASS_CD
            , B.lect_type_cd, B.lect_title, B.lectr_mbr_no, B.lectr_nm, B.lectr_job_no, B.lect_pic_path, B.lect_outln_info, B.lect_intdc_info, B.lect_sust_info
            , ROUND(TO_CHAR(TO_DATE(C.LECT_END_TIME, 'HH24MI') - TO_DATE(C.LECT_START_TIME, 'HH24MI'))* (24*60)) AS  LECT_RUN_TIME
         FROM CNET_LECT_APPL_INFO A
   INNER JOIN CNET_LECT_INFO B
           ON A.lect_ser = B.lect_ser
   INNER JOIN CNET_LECT_SCHD_INFO C
           ON A.lect_ser = C.lect_ser
          AND A.lect_tims = C.lect_tims
        WHERE A.appl_stat_cd IN ('101575','101576','101577') /*101574 : 신청, 승인, 확정된 신청수업*/
          /*AND C.lect_stat_cd IN ('101543','101548','101549','101550','101551') 101541 : 수강모집, 수업예정,수업대기,수업중,수업완료*/
          AND C.lect_stat_cd IN ('101548','101549','101550') /* 101541 : 수업예정,수업대기,수업중*/
          AND A.appl_mbr_no = #{applMbrNo}
          AND C.lect_day BETWEEN TO_CHAR(SYSDATE,'yyyyMMdd') AND TO_CHAR(SYSDATE+#{setSer},'yyyyMMdd')
        order by c.lect_day,c.lect_start_time asc
    </select>

    <!-- 내가 속한 반에서 신청한 수업 내역 -->
    <select id="listAppliedLectureByMyClassroom" parameterType="kr.or.career.mentor.domain.LectureApplInfoDTO" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
    SELECT C. lect_ser, C.lect_tims, C.schd_seq, C.lect_day, C.lect_start_time, C.lect_end_time, C.lect_stat_cd
            , C.lect_sess_id
            , A.CLAS_ROOM_SER, A.SET_SER, A.APPL_CLASS_CD
            , B.lect_type_cd, B.lect_title, B.lectr_mbr_no, B.lectr_nm, B.lectr_job_no, B.lect_pic_path, B.lect_outln_info, B.lect_intdc_info, B.lect_sust_info
            , ROUND(TO_CHAR(TO_DATE(C.LECT_END_TIME, 'HH24MI') - TO_DATE(C.LECT_START_TIME, 'HH24MI'))* (24*60)) AS  LECT_RUN_TIME
         FROM CNET_LECT_APPL_INFO A
   INNER JOIN CNET_LECT_INFO B
           ON A.lect_ser = B.lect_ser
   INNER JOIN CNET_LECT_SCHD_INFO C
           ON A.lect_ser = C.lect_ser
          AND A.lect_tims = C.lect_tims
        WHERE A.appl_stat_cd IN ('101575','101576','101577') /*101574 : 신청, 승인, 확정된 신청수업*/
          AND C.lect_stat_cd IN ('101543', '101548','101549','101550','101551') /*101541 : 수업예정,수업대기,수업중,수업완료*/
          AND A.clas_room_ser IN (SELECT CLAS_ROOM_SER FROM (<include refid="myClassroomCd"></include>))
          AND C.lect_day BETWEEN TO_CHAR(SYSDATE,'yyyyMMdd') AND TO_CHAR(SYSDATE+#{setSer},'yyyyMMdd')
    </select>

    <!-- 멘토및 직업검색 -->
    <select id="mentorjobSearch" parameterType="kr.or.career.mentor.domain.JobSearch" resultType="kr.or.career.mentor.domain.JobMentorInfoDTO">
        SELECT DISTINCT A.NM AS MENTOR_NM
                       ,B.JOB_NM
                       ,A.MBR_NO
         FROM CNET_MBR_INFO A
        INNER JOIN CNET_MBR_JOB_INFO B ON A.MBR_NO = B.MBR_NO
        LEFT OUTER JOIN CNET_LECT_INFO C ON C.LECTR_MBR_NO = A.MBR_NO
        WHERE 1=1
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                AND (A.NM LIKE '%' || #{searchKey} || '%' OR B.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%' OR B.JOB_NM LIKE '%' || #{searchKey} || '%' OR C.LECT_TITLE LIKE '%' || #{searchKey} || '%')
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                AND B.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                AND B.JOB_NM LIKE '%' || #{searchKey} || '%'
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                AND C.LECT_TITLE LIKE '%' || #{searchKey} || '%'
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                AND A.NM LIKE '%' || #{searchKey} || '%'
            </when>
        </choose>
    </select>

    <!-- 직업검색팝업 -->
    <select id="jobDetailSearch" parameterType="kr.or.career.mentor.domain.JobSearch" resultType="kr.or.career.mentor.domain.JobMentorInfoDTO">
        /* paging */
        SELECT  DISTINCT  A.JOB_NO
                        , A.JOB_NM
                        , A.JOB_CLSF_CD
                        , C.ROOT_CD AS CD
                        , C.ROOT2_CD_NM AS JOB_CLSF_NM
                        , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = E.JOB_CHRSTC_CD) AS JOB_CHRSTC_NM
                        ,ROW_NUMBER() OVER(ORDER BY A.REG_DTM DESC) AS rn
        /* paging */
        FROM CNET_JOB_INFO A
        INNER JOIN
                    (   SELECT B.CD
                             , CONNECT_BY_ROOT (B.CD) AS ROOT_CD
                             , CONNECT_BY_ROOT (B.CD_NM) AS ROOT2_CD_NM
                         FROM CNET_JOB_CLSF_CD B
                        WHERE 1 = 1
                          AND CD_LV = 3
                      CONNECT BY PRIOR B.CD = B.SUP_CD
                        START WITH CD_LV = 1) C ON (C.CD = A.JOB_CLSF_CD)
        LEFT OUTER JOIN CNET_MBR_JOB_INFO D ON A.JOB_NO = D.JOB_NO
        LEFT OUTER JOIN CNET_MBR_JOB_CHRSTC_INFO E ON D.MBR_NO = E.MBR_NO
        WHERE 1=1
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                AND (A.JOB_NM LIKE '%' || #{searchKey} || '%'
                     OR (A.JOB_NO IN (SELECT B.JOB_NO
                                        FROM CNET_MBR_INFO A
                                       INNER JOIN CNET_MBR_JOB_INFO B ON A.MBR_NO = B.MBR_NO
                                       WHERE 1=1
                                         AND (A.NM LIKE '%' || #{searchKey} || '%' OR B.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'))
                     OR (A.JOB_NO IN (SELECT C.JOB_NO
                                      FROM CNET_LECT_INFO A
                                     INNER JOIN CNET_MBR_INFO B ON A.LECTR_MBR_NO = B.MBR_NO
                                     INNER JOIN CNET_MBR_JOB_INFO C ON B.MBR_NO = C.MBR_NO
                                     WHERE 1=1
                                       AND A.LECT_TITLE LIKE '%' || #{searchKey} || '%'))
                        )
                   )
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                AND A.JOB_NM LIKE '%' || #{searchKey} || '%'
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                AND A.JOB_NO IN (SELECT B.JOB_NO
                                   FROM CNET_MBR_INFO A
                                  INNER JOIN CNET_MBR_JOB_INFO B ON A.MBR_NO = B.MBR_NO
                                  WHERE 1=1
                                    AND B.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%')
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                AND A.JOB_NO IN (SELECT B.JOB_NO
                                   FROM CNET_MBR_INFO A
                                  INNER JOIN CNET_MBR_JOB_INFO B ON A.MBR_NO = B.MBR_NO
                                  WHERE 1=1
                                    AND A.NM LIKE '%' || #{searchKey} || '%' )
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                AND A.JOB_NO IN (SELECT C.JOB_NO
                                   FROM CNET_LECT_INFO A
                                  INNER JOIN CNET_MBR_INFO B ON A.LECTR_MBR_NO = B.MBR_NO
                                  INNER JOIN CNET_MBR_JOB_INFO C ON B.MBR_NO = C.MBR_NO
                                  WHERE 1=1
                                    AND A.LECT_TITLE LIKE '%' || #{searchKey} || '%')
            </when>
        </choose>
    </select>

    <select id="listRecentRecommandLecture" resultType="kr.or.career.mentor.domain.LectureInfomationDTO" >
        SELECT
            A.LECT_SER,
            A.LECT_TIMS,
            A.SCHD_SEQ ,
            C.LECT_TYPE_CD,
            C.LECT_TARGT_CD,
            C.LECT_TITLE ,
            C.LECTR_MBR_NO,
            C.LECTR_NM,
            C.LECTR_JOB_NO,
            C.LECT_PIC_PATH ,
            C.LECT_OUTLN_INFO,
            C.LECT_INTDC_INFO ,
            A.LECT_DAY,
            A.LECT_START_TIME,
            A.LECT_END_TIME,
            A.LECT_STAT_CD,
            ROUND(TO_CHAR(TO_DATE(A.LECT_END_TIME, 'HH24MI') - TO_DATE(A.LECT_START_TIME, 'HH24MI'))* (24*60)) AS  LECT_RUN_TIME,
            (SELECT JOB_NM FROM CNET_MBR_JOB_INFO S WHERE S.MBR_NO = C.LECTR_MBR_NO) AS JOB_NM,
            (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM,
            (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM,
            ROW_NUMBER() OVER(ORDER BY M.SORT_SEQ ASC) AS RN
        FROM   (
            SELECT
                A.LECT_SER,
                RI.SORT_SEQ,
                RI.LECT_TIMS,
                /*
                MAX(A.LECT_TIMS) KEEP(DENSE_RANK FIRST ORDER BY
                    CASE
                    WHEN TO_DATE(LECT_DAY||LECT_START_TIME, 'YYYYMMDDHH24MI') - SYSDATE > 0 THEN TO_DATE(LECT_DAY||LECT_START_TIME, 'YYYYMMDDHH24MI') - SYSDATE
                    ELSE ((TO_DATE(LECT_DAY||LECT_START_TIME, 'YYYYMMDDHH24MI') - SYSDATE)-1000)*-1
                    END) AS LECT_TIMS , */
                MAX(A.SCHD_SEQ) KEEP(DENSE_RANK FIRST ORDER BY
                    CASE
                    WHEN TO_DATE(LECT_DAY||LECT_START_TIME, 'YYYYMMDDHH24MI') - SYSDATE > 0 THEN TO_DATE(LECT_DAY||LECT_START_TIME, 'YYYYMMDDHH24MI') - SYSDATE
                    ELSE ((TO_DATE(LECT_DAY||LECT_START_TIME, 'YYYYMMDDHH24MI') - SYSDATE)-1000)*-1
                    END) AS SCHD_SEQ
            FROM   CNET_LECT_SCHD_INFO A
            INNER JOIN CNET_MNGR_RECOM_INFO RI
            ON (RI.RECOM_TARGT_CD = '101643' AND RI.RECOM_TARGT_NO = A.LECT_SER)
            WHERE A.LECT_STAT_CD IN ('101543','101548','101549','101550','101551') /* 101541 - 101543:수강모집,101548:수업확정,101549:수업예정,101550:수업중,101551:수업완료*/
            AND RI.USE_YN = 'Y'
            GROUP BY A.LECT_SER, RI.LECT_TIMS, RI.SORT_SEQ
        ) M
        INNER JOIN CNET_LECT_INFO C ON M.LECT_SER = C.LECT_SER
        INNER JOIN CNET_LECT_TIMS_INFO B ON M.LECT_SER = B.LECT_SER
        AND M.LECT_TIMS = B.LECT_TIMS
        AND B.EXPS_YN = 'Y'
        INNER JOIN CNET_LECT_SCHD_INFO A ON C.LECT_SER = A.LECT_SER
        AND M.LECT_TIMS = A.LECT_TIMS
        AND M.SCHD_SEQ = A.SCHD_SEQ
    </select>

    <select id="listSoonCloseLecture" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        <![CDATA[
        SELECT A.* FROM (
            SELECT
                A.LECT_SER,
                A.LECT_TIMS,
                A.SCHD_SEQ ,
                C.LECT_TYPE_CD,
                C.LECT_TARGT_CD,
                C.LECT_TITLE ,
                C.LECTR_MBR_NO,
                C.LECTR_NM,
                C.LECTR_JOB_NO,
                C.LECT_PIC_PATH ,
                C.LECT_OUTLN_INFO,
                C.LECT_INTDC_INFO ,
                A.LECT_DAY,
                A.LECT_START_TIME,
                A.LECT_END_TIME,
                A.LECT_STAT_CD,
                ROUND(TO_CHAR(TO_DATE(A.LECT_END_TIME, 'HH24MI') - TO_DATE(A.LECT_START_TIME, 'HH24MI'))* (24*60)) AS  LECT_RUN_TIME,
                (SELECT JOB_NM FROM CNET_MBR_JOB_INFO S WHERE S.MBR_NO = C.LECTR_MBR_NO) AS JOB_NM,
                (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM,
                (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM,
                ROW_NUMBER() OVER(ORDER BY A.LECT_DAY, A.LECT_START_TIME) AS RN
            FROM  CNET_LECT_INFO C
            INNER JOIN CNET_LECT_TIMS_INFO B ON C.LECT_SER = B.LECT_SER
            AND B.EXPS_YN = 'Y'
            INNER JOIN CNET_LECT_SCHD_INFO A ON C.LECT_SER = A.LECT_SER
            AND B.LECT_TIMS = A.LECT_TIMS
            AND A.SCHD_SEQ = 1
            AND A.LECT_STAT_CD = '101543' /* 101541 - 101543:수강모집*/
            AND B.MAX_APPL_CNT > (
                SELECT     COUNT(1)
                FROM    CNET_LECT_APPL_INFO Z
                WHERE   Z.LECT_SER = B.LECT_SER
                AND     Z.LECT_TIMS = B.LECT_TIMS
                AND     Z.APPL_STAT_CD IN ('101576','101577')
            )
        ) A WHERE RN <= 12
        ]]>
    </select>

    <select id="listBestLecture" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT A.lect_ser, A.lect_tims, A.schd_seq
             , C.lect_ser,C.lect_type_cd, C.lect_targt_cd, C.lect_title
             , C.lectr_mbr_no, C.lectr_nm, C.lectr_job_no, C.lect_pic_path
             , C.lect_outln_info, C.lect_intdc_info
             , A.lect_day, A.lect_start_time, A.lect_end_time
             , (SELECT JOB_NM FROM CNET_MBR_JOB_INFO S WHERE S.MBR_NO = C.lectr_mbr_no) AS job_nm
             , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.lect_type_cd) AS LECT_TYPE_CD_NM
             , ROW_NUMBER() OVER(ORDER BY M.rn) AS rn
          FROM ( SELECT A.lect_ser,Ri.rn
                    , MAX(A.lect_tims) KEEP(DENSE_RANK FIRST ORDER BY
                                    CASE WHEN TO_DATE(LECT_DAY||LECT_START_TIME,'yyyymmddhh24mi') - SYSDATE > 0 THEN  TO_DATE(LECT_DAY||LECT_START_TIME,'yyyymmddhh24mi') - SYSDATE
                                    ELSE ((TO_DATE(LECT_DAY||LECT_START_TIME,'yyyymmddhh24mi') - SYSDATE)-1000)*-1 END) AS lect_tims
                    , MAX(A.schd_seq) KEEP(DENSE_RANK FIRST ORDER BY
                                    CASE WHEN TO_DATE(LECT_DAY||LECT_START_TIME,'yyyymmddhh24mi') - SYSDATE > 0 THEN  TO_DATE(LECT_DAY||LECT_START_TIME,'yyyymmddhh24mi') - SYSDATE
                                    ELSE ((TO_DATE(LECT_DAY||LECT_START_TIME,'yyyymmddhh24mi') - SYSDATE)-1000)*-1 END) AS schd_seq
                   FROM CNET_LECT_SCHD_INFO A
             INNER JOIN (
                        SELECT A.cntnts_targt_no AS lect_ser ,ROW_NUMBER() OVER(ORDER BY AVG(asm_pnt) DESC )AS rn
                          FROM CNET_ARCL_INFO A
                    INNER JOIN CNET_ARCL_CMT_INFO B
                            ON A.arcl_ser = B.arcl_ser AND B.sup_cmt_ser IS NULL
                         WHERE A.CNTNTS_TARGT_CD = '101511' /*강의후기*/
                      GROUP BY A.CNTNTS_TARGT_NO ) Ri ON ( Ri.lect_ser = A.lect_ser AND Ri.rn &lt;=12)
                  WHERE A.lect_stat_cd IN ('101548','101549','101550','101551') /* 101541 - 101548: 수업예정,101549 : 수업대기,101550 : 수업중,101551 : 수업완료*/
               GROUP BY A.lect_ser,Ri.rn) M
     INNER JOIN CNET_LECT_INFO C
             ON M.lect_ser = C.lect_ser
     INNER JOIN CNET_LECT_TIMS_INFO B
             ON M.lect_ser = B.lect_ser
            AND M.lect_tims = B.lect_tims
            AND B.EXPS_YN = 'Y'
     INNER JOIN CNET_LECT_SCHD_INFO A
             ON C.lect_ser = A.lect_ser
            AND M.lect_tims = A.lect_tims
            AND M.schd_seq = A.schd_seq
    </select>

    <select id="listNewLecture" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        <![CDATA[
        SELECT A.* FROM (
            SELECT
                A.LECT_SER,
                A.LECT_TIMS,
                A.SCHD_SEQ ,
                C.LECT_TYPE_CD,
                C.LECT_TARGT_CD,
                C.LECT_TITLE ,
                C.LECTR_MBR_NO,
                C.LECTR_NM,
                C.LECTR_JOB_NO,
                C.LECT_PIC_PATH ,
                C.LECT_OUTLN_INFO,
                C.LECT_INTDC_INFO ,
                A.LECT_DAY,
                A.LECT_START_TIME,
                A.LECT_END_TIME,
                A.LECT_STAT_CD,
                ROUND(TO_CHAR(TO_DATE(A.LECT_END_TIME, 'HH24MI') - TO_DATE(A.LECT_START_TIME, 'HH24MI'))* (24*60)) AS  LECT_RUN_TIME,
                (SELECT JOB_NM FROM CNET_MBR_JOB_INFO S WHERE S.MBR_NO = C.LECTR_MBR_NO) AS JOB_NM,
                (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM,
                (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM,
                ROW_NUMBER() OVER(ORDER BY A.LECT_SER DESC) AS RN
            FROM  CNET_LECT_INFO C
            INNER JOIN CNET_LECT_TIMS_INFO B ON C.LECT_SER = B.LECT_SER
            AND B.EXPS_YN = 'Y'
            INNER JOIN CNET_LECT_SCHD_INFO A ON C.LECT_SER = A.LECT_SER
            AND B.LECT_TIMS = A.LECT_TIMS
            AND A.LECT_TIMS = 1
            AND A.SCHD_SEQ = 1
            AND A.LECT_STAT_CD IN ('101543','101548','101549','101550','101551') /* 101541 - 101543:수강모집,101548:수업확정,101549:수업예정,101550:수업중,101551:수업완료*/
        ) A WHERE RN <= 12
        ]]>
        <!--
        SELECT A.lect_ser, A.lect_tims, A.schd_seq
             ,C.lect_type_cd, C.lect_targt_cd, C.lect_title
             , C.lectr_mbr_no, C.lectr_nm, C.lectr_job_no, C.lect_pic_path
             , C.lect_outln_info, C.lect_intdc_info
             , A.lect_day, A.lect_start_time, A.lect_end_time
             , (SELECT JOB_NM FROM CNET_MBR_JOB_INFO S WHERE S.MBR_NO = C.lectr_mbr_no) AS job_nm
             , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.lect_type_cd) AS LECT_TYPE_CD_NM
             , ROW_NUMBER() OVER(ORDER BY M.rn) AS rn
             , CASE WHEN ((
                            SELECT     COUNT(1)
                            FROM    CNET_LECT_APPL_INFO Z
                            WHERE   Z.LECT_SER = A.LECT_SER
                            AND     Z.LECT_TIMS = A.LECT_TIMS
                            AND     Z.APPL_STAT_CD IN ('101576','101577')
                            GROUP BY Z.LECT_SER,Z.LECT_TIMS)  = C.MAX_APPL_CNT)
                        AND B.LECT_STAT_CD IN ('101543','101548')
                THEN    '정원마감'
                ELSE   (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = B.LECT_STAT_CD)
                END AS LECT_STAT_CD_NM
          FROM  (SELECT A.LECT_SER, A.LECT_TIMS, A.SCHD_SEQ
                      , ROW_NUMBER() OVER(ORDER BY A.lect_day DESC, A.lect_start_time DESC) AS rn
                   FROM CNET_LECT_SCHD_INFO A
                  WHERE A.lect_stat_cd IN ('101543', '101548','101549','101550','101551') /* 101541 - 101543: 수강모집, 101548: 수업예정,101549 : 수업대기,101550 : 수업중,101551 : 수업완료*/
                  ) M
     INNER JOIN CNET_LECT_INFO C
             ON M.lect_ser = C.lect_ser
     INNER JOIN CNET_LECT_TIMS_INFO B
             ON M.lect_ser = B.lect_ser
            AND M.lect_tims = B.lect_tims
            AND B.EXPS_YN = 'Y'
     INNER JOIN CNET_LECT_SCHD_INFO A
             ON C.lect_ser = A.lect_ser
            AND M.lect_tims = A.lect_tims
            AND M.schd_seq = A.schd_seq
          WHERE 12 >= M.rn
        and a.schd_seq = 1
        -->
    </select>

    <select id="listLectInfo" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectInfo">
      SELECT
              C.lect_intdc_info
            , C.lect_sust_info
            , C.max_appl_cnt
            , C.max_obsv_cnt
            , C.lect_req_ser
            , C.reg_dtm
            , C.reg_mbr_no
            , C.chg_dtm
            , C.chg_mbr_no
            , C.lect_ser
            , C.lect_type_cd
            , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM /*수업유형코드명*/
            , C.lect_targt_cd
            , C.lect_title
            , C.lect_start_dtm
            , C.lect_end_dtm
            , C.lectr_mbr_no
            , C.lectr_nm
            , C.lectr_job_no
            , (SELECT Z.JOB_NM FROM CNET_JOB_INFO Z WHERE Z.JOB_NO = C.LECTR_JOB_NO) AS LECTR_JOB_NM
            , C.lect_pic_path
            , C.lect_outln_info
            , C.LECT_STAT_CD
            , (SELECT Z.job_tag_info FROM CNET_MBR_JOB_INFO Z WHERE Z.mbr_no = C.lectr_mbr_no) AS JOB_TAG_INFO
            , (SELECT Z.icon_kind_cd FROM CNET_MBR_ICON_INFO Z WHERE Z.mbr_no = C.lectr_mbr_no AND Z.ICON_KIND_CD = '101598') AS ICON_KIND_CD
            , C.LECT_STAT_CD
            , CASE WHEN C.LECT_STAT_CD = '101543' THEN '일시추가'
                   ELSE (SELECT Z.CD_NM FROM CNET_CODE Z WHERE SUP_CD = '101541' AND Z.CD = C.LECT_STAT_CD)
              END AS LECT_STAT_CD_NM
            , (SELECT GRP_NM FROM CNET_BIZ_GRP_INFO WHERE GRP_NO=C.LECT_GRP_NO) AS GRP_NM
            ,ROW_NUMBER() OVER(ORDER BY C.reg_dtm) AS rn
        ,c.lect_ser
            /* paging */
        FROM CNET_LECT_INFO C
       <where>
       <if test="lectSer !=null">
           AND C.lect_ser = #{lectSer}
       </if>
       <choose>
           <when test="mbrCualfCd eq '101502' or mbrCualfCd eq '101503'">
               AND C.LECTR_MBR_NO = #{mbrNo} /*개인멘토, 소속멘토*/
           </when>
           <when test="mbrCualfCd eq '101501'">
               and 1=1
               AND C.LECTR_MBR_NO IN ( SELECT S.MBR_NO
                                         FROM CNET_MBR_INFO S
                                        INNER JOIN CNET_MBR_REL_MAPP Z ON S.MBR_NO = Z.TARGT_MBR_NO
                                        WHERE S.MBR_CLASS_CD = '101505' /* 회원 구분 - 멘토 */
                                          AND Z.REG_MBR_NO = #{mbrNo} )
           </when>
       </choose>
       <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
           AND C.lect_type_cd = #{lectType}
       </if>
       <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
           AND C.lect_targt_cd = #{schoolGrd}
       </if>
       <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
           <choose>
               <when test="searchType eq 'lectTitle'">
           AND REGEXP_LIKE(C.lect_title,#{searchKey})
               </when>
               <when test="searchType eq 'mentorNm'">
           AND REGEXP_LIKE(C.lectr_nm,#{searchKey})
               </when>
               <otherwise>
           AND (REGEXP_LIKE(C.lect_title,#{searchKey}) OR REGEXP_LIKE(C.lectr_nm,#{searchKey}))
               </otherwise>
           </choose>
       </if>
       <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
           <choose>
               <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101650')">
                   AND REGEXP_LIKE(C.LECT_TITLE, #{keyword})
               </when>
               <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101651')">
                   AND C.LECTR_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE REGEXP_LIKE(Z.JOB_NM, #{keyword}) )
               </when>
               <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101652')">
                   AND REGEXP_LIKE(C.LECTR_NM, #{keyword})
               </when>
               <otherwise>
                    AND (
                            REGEXP_LIKE(C.LECT_TITLE, #{keyword})
                         OR C.LECTR_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE REGEXP_LIKE(Z.JOB_NM, #{keyword}) )
                         OR REGEXP_LIKE(C.LECTR_NM, #{keyword})
                         )
               </otherwise>
           </choose>
       </if>
       </where>
    </select>

    <select id="retrieveLectInfo" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectInfo4">
        SELECT
        C.lect_intdc_info
        , C.lect_sust_info
        , C.max_appl_cnt
        , C.max_obsv_cnt
        , C.lect_req_ser
        , C.reg_dtm
        , C.reg_mbr_no
        , C.chg_dtm
        , C.chg_mbr_no
        , C.lect_ser
        , C.lect_type_cd
        , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM /*수업유형코드명*/
        , C.lect_targt_cd
        , C.lect_title
        , C.lect_start_dtm
        , C.lect_end_dtm
        , C.lectr_mbr_no
        , C.lectr_nm
        , C.lectr_job_no
        , C.lect_pic_path
        , C.lect_outln_info
        , (SELECT Z.job_tag_info FROM CNET_MBR_JOB_INFO Z WHERE Z.mbr_no = C.lectr_mbr_no) AS JOB_TAG_INFO
        , (SELECT Z.icon_kind_cd FROM CNET_MBR_ICON_INFO Z WHERE Z.mbr_no = C.lectr_mbr_no AND Z.ICON_KIND_CD = '101598') AS ICON_KIND_CD
        , C.LECT_STAT_CD
        ,ROW_NUMBER() OVER(ORDER BY C.reg_dtm) AS rn
        FROM CNET_LECT_INFO C
        <where>
            <if test="lectSer !=null">
                AND C.lect_ser = #{lectSer}
            </if>
        </where>
    </select>

    <!-- 수업일시정보 조회할시 쿼리-->
    <select id="retrieveLectSchdInfoResult" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectInfo5">
        SELECT
        C.lect_intdc_info
        , C.lect_sust_info
        , C.max_appl_cnt
        , C.max_obsv_cnt
        , C.lect_req_ser
        , C.reg_dtm
        , C.reg_mbr_no
        , C.chg_dtm
        , C.chg_mbr_no
        , C.lect_ser
        , C.lect_type_cd
        , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM /*수업유형코드명*/
        , C.lect_targt_cd
        , C.lect_title
        , C.lect_start_dtm
        , C.lect_end_dtm
        , C.lectr_mbr_no
        , C.lectr_nm
        , C.lectr_job_no
        , C.lect_pic_path
        , C.lect_outln_info
        , (SELECT Z.job_tag_info FROM CNET_MBR_JOB_INFO Z WHERE Z.mbr_no = C.lectr_mbr_no) AS JOB_TAG_INFO
        , (SELECT Z.icon_kind_cd FROM CNET_MBR_ICON_INFO Z WHERE Z.mbr_no = C.lectr_mbr_no AND Z.ICON_KIND_CD = '101598') AS ICON_KIND_CD
        , ROW_NUMBER() OVER(ORDER BY C.reg_dtm) AS rn
        FROM CNET_LECT_INFO C
        <where>
            <if test="lectSer !=null">
                AND C.lect_ser = #{lectSer}
            </if>
        </where>
    </select>

    <sql id="listCalculateLecture">
        SELECT
                A.LECT_SER
              , B.LECT_TIMS
              , C.SCHD_SEQ
              , C.LECT_DAY
              , C.LECT_START_TIME
              , C.LECT_END_TIME
              , NUMTODSINTERVAL(TO_DATE(C.LECT_END_TIME, 'HH24MI') - TO_DATE(C.LECT_START_TIME, 'HH24MI'), 'DAY') AS LECTURE_TIME
              , A.LECTR_NM
              , A.LECTR_MBR_NO
              , A.LECT_TYPE_CD
              , (SELECT Z.CD_NM
                   FROM CNET_CODE Z
                  WHERE Z.SUP_CD = '101528'
                    AND Z.CD = A.LECT_TYPE_CD) AS LECT_TYPE_CD_NM
              , A.LECT_TITLE
              , A.lect_targt_cd
              , C.LECT_STAT_CD
              , C.lect_sess_id
              , (SELECT Z.CD_NM
                   FROM CNET_CODE Z
                  WHERE Z.SUP_CD = '101541'
                    AND Z.CD = C.LECT_STAT_CD) AS LECT_STAT_CD_NM
              , (SELECT COUNT(1)
                   FROM CNET_LECT_APPL_INFO Z
                  WHERE Z.LECT_SER = A.LECT_SER
                    AND Z.LECT_TIMS = B.LECT_TIMS
                    AND Z.APPL_STAT_CD IN ('101576', '101577') AND APPL_CLASS_CD = '101715') AS APPL_CNT

                , (SELECT COUNT(1)
                FROM CNET_LECT_APPL_INFO Z
                WHERE Z.LECT_SER = A.LECT_SER
                AND Z.LECT_TIMS = B.LECT_TIMS
                AND Z.APPL_STAT_CD IN ('101576', '101577') AND APPL_CLASS_CD = '101716') AS obsv_cnt
              , CASE WHEN A.LECT_TYPE_CD = '101529' THEN 1 /*단강*/
                     WHEN A.LECT_TYPE_CD = '101530' THEN 1 /*연강*/
                     WHEN A.LECT_TYPE_CD = '101531' THEN 1 /*특강*/
                     WHEN A.LECT_TYPE_CD = '101532' THEN 2 /*블록*/
                                                        /*
                                                         CASE WHEN ( (TO_DATE(C.LECT_END_TIME, 'HH24MI') - TO_DATE(C.LECT_START_TIME, 'HH24MI')) * 24 * 60 ) >= 120 THEN 2
                                                              ELSE 1
                                                         END
                                                        */
                     ELSE 0
                END AS LECTURE_CNT
              , (SELECT Z.JOB_NM FROM CNET_JOB_INFO Z WHERE Z.JOB_NO = A.LECTR_JOB_NO) JOB_NM
                ,A.max_appl_cnt as max_appl_cnt
                ,a.max_obsv_cnt as max_obsv_cnt
          FROM CNET_LECT_INFO A
         INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER)
         INNER JOIN CNET_LECT_SCHD_INFO C ON (C.LECT_SER = B.LECT_SER AND C.LECT_TIMS = B.LECT_TIMS)
    </sql>

    <!-- 멘토포탈 정산관리 수업목록 조회 -->
    <select id="listCalculateLectureByMentor" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* LectureInfomationMapper.xml 설명 : 멘토포탈 정산관리 수업목록 조회, ID : listCalculateLectureByMentor, 작성일 : 2015.10.14 */
        /* paging */
        SELECT
                T.LECT_SER
              , T.LECT_TIMS
              , T.SCHD_SEQ
              , T.LECT_DAY
              , T.LECT_START_TIME
              , T.LECT_END_TIME
              , (SUBSTR (T.LECTURE_TIME, 12, 8)) AS LECTURE_TIME
              , T.LECTR_NM
              , T.LECTR_MBR_NO
              , T.LECT_TYPE_CD
              , T.LECT_TYPE_CD_NM
              , T.LECT_TITLE
              , T.LECT_STAT_CD
              , T.LECT_STAT_CD_NM
              , T.APPL_CNT
              , T.obsv_cnt
              , T.LECTURE_CNT
              , ROW_NUMBER() OVER(ORDER BY T.LECT_DAY DESC, T.LECT_START_TIME DESC, T.LECT_TITLE) AS RN
        /* paging */
          FROM (
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, '101501')">
                <include refid="listCalculateLecture"/>
                INNER JOIN CNET_MBR_INFO D
                    ON (D.MBR_NO = A.LECTR_MBR_NO
                    and d.pos_co_no = #{coNo}
                    and d.mbr_class_cd = '101505'
                    )
                WHERE 1 = 1
                  AND B.LECT_STAT_CD = #{lectStatCd}
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
                    <choose>
                        <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101650')">
                            AND A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                        </when>
                        <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101652')">
                            AND A.LECTR_NM LIKE '%' || #{keyword} || '%'
                        </when>
                        <otherwise>
                            AND (   A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                                 OR A.LECTR_NM LIKE '%' || #{keyword} || '%')
                        </otherwise>
                    </choose>
                </if>
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, '101503')">
                <include refid="listCalculateLecture"/>
                WHERE 1 = 1
                  AND A.LECTR_MBR_NO = #{mbrNo}
                  AND B.LECT_STAT_CD = #{lectStatCd}
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
                    AND A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                </if>
            </when>
        </choose>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            <![CDATA[
                   AND C.LECT_DAY >= #{searchStDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchEndDate)">
            <![CDATA[
                   AND C.LECT_DAY <= #{searchEndDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
                   AND A.LECT_TYPE_CD = #{lectType}
        </if>
                ) T
    </select>

    <!-- 멘토포탈 정산관리 총참여일수 조회 -->
    <select id="retireveTotalLectDayCalculateLectureByMentor" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="java.lang.Integer">
        /* LectureInfomationMapper.xml 설명 : 멘토포탈 정산관리(개인멘토 대상) 총참여일수 조회, ID : retireveTotalLectDayCalculateLectureByMentor, 작성일 : 2015.10.14 */
        SELECT COUNT(*)
          FROM (
                SELECT DISTINCT T.LECT_DAY AS TOTAL_LECT_DAY
                  FROM (
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, '101501')">
                <include refid="listCalculateLecture"/>
                    INNER JOIN CNET_MBR_INFO D
                        ON (D.MBR_NO = A.LECTR_MBR_NO
                            and d.pos_co_no = #{coNo}
                            and d.mbr_class_cd = '101505'
                        )
                WHERE 1 = 1
                AND B.LECT_STAT_CD = #{lectStatCd}
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
                <choose>
                    <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101650')">
                        AND A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                    </when>
                    <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101652')">
                        AND A.LECTR_NM LIKE '%' || #{keyword} || '%'
                    </when>
                    <otherwise>
                        AND (   A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                        OR A.LECTR_NM LIKE '%' || #{keyword} || '%')
                    </otherwise>
                </choose>
                </if>
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, '101503')">
                <include refid="listCalculateLecture"/>
                WHERE 1 = 1
                AND A.LECTR_MBR_NO = #{mbrNo}
                AND B.LECT_STAT_CD = #{lectStatCd}
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
                    AND A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                </if>
            </when>
        </choose>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            <![CDATA[
                   AND C.LECT_DAY >= #{searchStDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchEndDate)">
            <![CDATA[
                   AND C.LECT_DAY <= #{searchEndDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND A.LECT_TYPE_CD = #{lectType}
        </if>
                ) T
        )
    </select>

    <!-- 멘토포탈 정산관리 총수업횟수 조회 -->
    <select id="retireveTotallectCntCalculateLectureByMentor" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="java.lang.Integer">
        /* LectureInfomationMapper.xml 설명 : 멘토포탈 정산관리(개인멘토 대상) 총수업횟수 조회, ID : retireveTotallectCntCalculateLectureByMentor, 작성일 : 2015.10.14 */
        SELECT SUM(T.LECTURE_CNT) AS TOTAL_LECT_CNT
        FROM (
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, '101501')">
                <include refid="listCalculateLecture"/>
                INNER JOIN CNET_MBR_INFO D
                        ON (D.MBR_NO = A.LECTR_MBR_NO
                            and d.pos_co_no = #{coNo}
                            and d.mbr_class_cd = '101505'
                            )
                WHERE 1 = 1
                AND B.LECT_STAT_CD = #{lectStatCd}
                <choose>
                    <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101650')">
                        AND A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                    </when>
                    <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101652')">
                        AND A.LECTR_NM LIKE '%' || #{keyword} || '%'
                    </when>
                    <otherwise>
                        AND (   A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                        OR A.LECTR_NM LIKE '%' || #{keyword} || '%')
                    </otherwise>
                </choose>
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, '101503')">
                <include refid="listCalculateLecture"/>
                WHERE 1 = 1
                AND A.LECTR_MBR_NO = #{mbrNo}
                AND B.LECT_STAT_CD = #{lectStatCd}
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
                    AND A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                </if>
            </when>
        </choose>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            <![CDATA[
                   AND C.LECT_DAY >= #{searchStDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchEndDate)">
            <![CDATA[
                   AND C.LECT_DAY <= #{searchEndDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND A.LECT_TYPE_CD = #{lectType}
        </if>
        ) T
    </select>

    <!-- 수업요청취소 -->
    <update id="cancelReqLectInfo" parameterType="kr.or.career.mentor.domain.LectReqInfo">
        UPDATE CNET_LECT_REQ_INFO
           SET
                LECT_SUST    = #{lectSust, jdbcType=VARCHAR}
              , REQ_STAT_CD  = #{reqStatCd, jdbcType=VARCHAR}
        WHERE 1 = 1
            AND REQ_SER  = #{reqSer}
    </update>

    <!-- 기관(교육청) 조회(selectbox) -->
    <select id="listCoInfoByLectAppl" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.CoInfo">
        <![CDATA[
        /* LectureInfomationMapper.xml 설명 : 기관(교육청) 조회(selectbox), ID : listCoInfoByLectAppl, 작성일 : 2015.10.16 */
        SELECT DISTINCT E.CO_NO, E.CO_NM
          FROM CNET_SCH_GRP_MAPP A
         INNER JOIN CNET_BIZ_GRP_INFO B ON (B.GRP_NO = A.GRP_NO)
         INNER JOIN CNET_BIZ_SET_INFO C ON (C.SET_TARGT_NO = B.GRP_NO)
         INNER JOIN CNET_MBR_INFO D ON (D.MBR_NO = B.INST_MBR_NO)
         INNER JOIN CNET_CO_INFO E ON (E.CO_NO = D.POS_CO_NO)
         WHERE 1 = 1
           AND A.SCH_NO = #{schNo}
           AND C.SET_TARGT_CD = '101601'
           AND C.CLAS_START_DAY <= #{lectDay}
           AND C.CLAS_END_DAY >= #{lectDay}
         ORDER BY E.CO_NO
        ]]>
    </select>

    <!-- 교육청이 가지고 있는 사업조회(selectbox)-->
    <select id="listBizSetGrpByCoInfo" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultBizSetInfo">
        SELECT  C.SET_SER
              , B.GRP_NO, B.GRP_NM
              , C.CLAS_CNT, C.SET_TARGT_CD, C.SET_TARGT_NO, C.CLAS_START_DAY , C.CLAS_END_DAY
              , E.CO_NO, E.CO_NM
              , NVL(F.CLAS_PERM_CNT, C.CLAS_CNT) AS CLAS_PERM_CNT
              , NVL(F.CLAS_APPL_CNT, 0) AS CLAS_APPL_CNT
          FROM CNET_SCH_GRP_MAPP A
         INNER JOIN CNET_BIZ_GRP_INFO B ON (B.GRP_NO = A.GRP_NO)
         INNER JOIN CNET_BIZ_SET_INFO C ON (C.SET_TARGT_NO = B.GRP_NO)
         INNER JOIN CNET_MBR_INFO D ON (D.MBR_NO = B.INST_MBR_NO)
         INNER JOIN CNET_CO_INFO E ON (E.CO_NO = D.POS_CO_NO)
    LEFT OUTER JOIN CNET_LECT_APPL_CNT F ON (F.SET_SER = C.SET_SER AND F.SCH_NO = A.SCH_NO)
         WHERE 1 = 1
           AND A.SCH_NO = #{schNo}
           AND C.SET_TARGT_CD = '101601'
           <!--<choose>
           <when test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectDay)">
           AND #{lectDay} BETWEEN C.CLAS_START_DAY AND C.CLAS_END_DAY
           </when>
           <otherwise>
           AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.CLAS_START_DAY AND C.CLAS_END_DAY
           </otherwise>
           </choose>
           -->
           <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNo)">
           AND E.CO_NO = #{coNo}
           </if>
         ORDER BY C.SET_SER
    </select>

    <select id="listBizSetInfoBySchool" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultBizSetInfo">
        SELECT  A.SET_SER
              , A.CLAS_CNT
              , NVL(D.CLAS_PERM_CNT, A.CLAS_CNT) AS CLAS_PERM_CNT
              , NVL(D.CLAS_APPL_CNT, 0) AS CLAS_APPL_CNT
              , A.CLAS_START_DAY, A.CLAS_END_DAY
          FROM CNET_BIZ_SET_INFO A
         INNER JOIN CNET_BIZ_GRP_INFO B ON (B.GRP_NO = A.SET_TARGT_NO)
         INNER JOIN CNET_SCH_GRP_MAPP C ON (C.GRP_NO = B.GRP_NO)
          LEFT OUTER JOIN CNET_LECT_APPL_CNT D ON (D.SET_SER = A.SET_SER)
         WHERE 1 = 1
           AND A.SET_TARGT_CD = '101600' /*학교 자체 배정*/
           AND C.SCH_NO = #{schNo}
           <choose>
           <when test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectDay)">
           AND #{lectDay} BETWEEN A.CLAS_START_DAY AND A.CLAS_END_DAY
           </when>
           <otherwise>
           AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.CLAS_START_DAY AND A.CLAS_END_DAY
           </otherwise>
           </choose>
    </select>

    <!-- 멘토수업목록 조회-->
    <select id="mentorLectureList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        /* LectureInfomationMapper.xml 설명 : 수업목록 조회, ID : mentorLectureList, 작성자 : 송민섭, 작성일 : 2015.10.16 */
        /* paging */
        SELECT    A.LECT_INTDC_INFO
                , A.LECT_SUST_INFO
                , A.MAX_APPL_CNT
                , A.MAX_OBSV_CNT
                , A.LECT_REQ_SER
                , A.REG_DTM
                , A.REG_MBR_NO
                , A.CHG_DTM
                , A.CHG_MBR_NO
                , A.LECT_SER
                , A.LECT_TYPE_CD
                , A.LECT_TARGT_CD
                , A.LECT_TITLE
                , A.LECT_START_DTM
                , A.LECT_END_DTM
                , A.LECTR_MBR_NO
                , A.LECTR_NM
                , A.LECTR_JOB_NO
                , A.LECT_PIC_PATH
                , A.LECT_OUTLN_INFO
                , B.LECT_TIMS
                , NVL(C.LECT_STAT_CD, A.LECT_STAT_CD) AS LECT_STAT_CD
                , CASE
                    WHEN C.LECT_STAT_CD IS NULL AND A.LECT_STAT_CD = '101543' THEN '일시추가'
                    ELSE (SELECT Z.CD_NM FROM CNET_CODE Z WHERE SUP_CD = '101541' AND Z.CD = NVL(C.LECT_STAT_CD, A.LECT_STAT_CD))
                  END AS LECT_STAT_CD_NM
                , C.SCHD_SEQ
                , C.LECT_DAY
                , C.LECT_START_TIME
                , C.LECT_END_TIME
                , C.MC_NO
                , C.STDO_NO
                , C.LECT_CNCL_RSN_SUST
                , ROW_NUMBER() OVER(ORDER BY CASE WHEN C.LECT_STAT_CD IS NULL THEN 0 WHEN C.LECT_STAT_CD IN ('101549') THEN 1 ELSE 2 END, C.LECT_DAY DESC, C.LECT_START_TIME DESC, A.REG_DTM DESC) AS RN
                , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO Z WHERE Z.LECT_SER = A.LECT_SER AND Z.LECT_TIMS = B.LECT_TIMS AND APPL_STAT_CD IN ('101575','101576','101577')) AS APPL_CNT
                , (SELECT COUNT(*) FROM cnet_arcl_info Z WHERE Z.BOARD_ID = 'lecReplay' AND Z.CNTNTS_TARGT_NO = C.LECT_SER AND Z.CNTNTS_TARGT_TIMS = C.LECT_TIMS AND Z.CNTNTS_TARGT_SEQ =C.SCHD_SEQ) AS REPLAY_CNT
                , C.LECT_SESS_ID
        /* paging */
          FROM CNET_LECT_INFO A
          LEFT OUTER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER)
          LEFT OUTER JOIN CNET_LECT_SCHD_INFO C ON (B.LECT_SER = C.LECT_SER AND B.LECT_TIMS = C.LECT_TIMS)
          LEFT OUTER JOIN CNET_MBR_INFO D ON (D.MBR_NO = A.LECTR_MBR_NO)
          LEFT OUTER JOIN CNET_MBR_JOB_INFO F ON (F.MBR_NO = A.LECTR_MBR_NO)
         WHERE 1 = 1
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrNo)">
                AND A.LECTR_MBR_NO = #{mbrNo}
            </when>
            <when test="belongMentorMbrNoList != null">
                AND A.LECTR_MBR_NO IN
                <foreach item="item" index="index" collection="belongMentorMbrNoList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
        </choose>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            <![CDATA[
                AND C.LECT_DAY >= Regexp_Replace(#{searchStDate}, '[[:punct:]]', '')
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchEndDate)">
            <![CDATA[
                AND C.LECT_DAY <= Regexp_Replace(#{searchEndDate}, '[[:punct:]]', '')
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101534')">
                    AND A.LECT_TARGT_CD IN ('101534', '101537' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101535')">
                    AND A.LECT_TARGT_CD IN ('101535', '101537' ,'101538', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101536')">
                    AND A.LECT_TARGT_CD IN ('101536', '101538' ,'101539', '101540')
                </when>
                <otherwise>
                    AND A.LECT_TARGT_CD = #{schoolGrd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                AND TO_DATE(C.LECT_START_TIME,'HH24MI') >= TO_DATE(#{lectTime},'HH24MI')
             ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND A.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(lectStatCd, '101542')">
                    AND A.LECT_STAT_CD = #{lectStatCd}
                </when>
                <otherwise>
                    AND C.LECT_STAT_CD = #{lectStatCd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                    AND (   A.LECTR_NM LIKE '%' || #{searchKey} || '%'
                         OR F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                         OR F.JOB_NM LIKE '%' || #{searchKey} || '%'
                         OR C.LECT_TITLE LIKE '%' || #{searchKey} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                    AND F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                    AND F.JOB_NM LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                    AND A.LECT_TITLE LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                    AND A.LECTR_NM LIKE '%' || #{searchKey} || '%'
                </when>
            </choose>
        </if>
    </select>

    <select id="listMbrJobInfo" resultMap="resultMbrJobInfo">
        SELECT A.JOB_NM
          FROM CNET_MBR_JOB_INFO A
         WHERE 1=1
           AND A.MBR_NO = #{mbrNo}
         ORDER BY A.JOB_NM
    </select>

    <!-- 연강의 경우에는 한꺼번에 강의 상태를 수업예정이나 모집실패로 변경해 주어야 함. -->
    <update id="updateLinkedLectureSchdStatus" parameterType="map">
    <![CDATA[
    MERGE INTO CNET_LECT_SCHD_INFO T
        USING
        (
            SELECT LECT_SER, LECT_TIMS
                  ,CASE WHEN (SELECT COUNT(*)
                                FROM CNET_LECT_APPL_INFO S1
                               WHERE S1.LECT_SER = ST.LECT_SER AND S1.LECT_TIMS = ST.LECT_TIMS AND S1.APPL_STAT_CD IN ( '101575','101576','101577' )) >= #{cutLine}
                        THEN '101548' /*수업예정*/
                        ELSE '101545' /*모집실패*/ END AS LECT_STAT_CD
              FROM  (
                SELECT A.LECT_SER, A.LECT_TIMS, MIN(A.LECT_DAY) AS LECT_DAY, MIN(A.LECT_START_TIME) AS LECT_START_TIME
                  FROM CNET_LECT_SCHD_INFO A
            INNER JOIN CNET_LECT_INFO C
                    ON A.LECT_SER = C.LECT_SER
                   AND C.LECT_TYPE_CD  = '101530'
                 <choose>
                 <when test="@org.apache.commons.lang3.StringUtils@isEmpty(lectSer) or @org.apache.commons.lang3.StringUtils@isEmpty(lectTims) ">
                 WHERE A.LECT_STAT_CD IN ( '101543' /*수강모집*/ ,'101544' /*모집마감*/ )
                 </when>
                 <otherwise>
                 WHERE A.LECT_SER = #{lectSer} AND A.LECT_TIMS = #{lectTims}
                 </otherwise>
                 </choose>
              GROUP BY A.LECT_SER, A.LECT_TIMS
                    ) ST
          WHERE TO_CHAR(SYSDATE+#{assign},'YYYYMMDD') >= LECT_DAY
        ) DT ON (T.LECT_SER = DT.LECT_SER AND T.LECT_TIMS = DT.LECT_TIMS
        ]]>
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@isEmpty(lectSer) or @org.apache.commons.lang3.StringUtils@isEmpty(lectTims) ">
         AND T.LECT_STAT_CD IN ( '101543' /*수강모집*/ ,'101544' /*모집마감*/ )
            </when>
            <otherwise>
        AND T.LECT_SER = #{lectSer} AND T.LECT_TIMS = #{lectTims}
            </otherwise>
        </choose>
         )
    WHEN MATCHED THEN UPDATE
             SET T.LECT_STAT_CD = DT.LECT_STAT_CD
    </update>
<!-- 수업의 상태를 변경 -->
    <update id="updateLectureSchdStatus" parameterType="map">
        <![CDATA[
    UPDATE CNET_LECT_SCHD_INFO A SET
        LECT_STAT_CD =
         CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDDhh24mi') >=  LECT_DAY||LECT_END_TIME THEN '101551' /*수업완료*/
              WHEN LECT_DAY||LECT_START_TIME > TO_CHAR(SYSDATE+ #{ready}/24/60,'YYYYMMDDhh24mi')  THEN
                        CASE WHEN (SELECT COUNT(*)
                                     FROM CNET_LECT_APPL_INFO S1
                                    WHERE S1.LECT_SER = A.LECT_SER AND S1.LECT_TIMS = A.LECT_TIMS AND S1.APPL_STAT_CD IN ( '101575','101576','101577' )) >= #{cutLine}
                             THEN '101548' /*수업예정*/
                             ELSE '101545' /*모집실패*/ END
                  WHEN TO_CHAR(SYSDATE,'YYYYMMDD') = LECT_DAY
                            AND TO_CHAR(SYSDATE,'hh24mi') BETWEEN  LECT_START_TIME AND LECT_END_TIME THEN '101550' /*수업중*/
                  WHEN TO_CHAR(SYSDATE,'YYYYMMDD') = LECT_DAY
                            AND LECT_START_TIME BETWEEN  TO_CHAR(SYSDATE,'hh24mi') AND TO_CHAR(SYSDATE + #{ready}/24/60,'hh24mi') THEN '101549' /*수업대기*/ END
     WHERE TO_CHAR(SYSDATE+#{assign},'yyyymmdd') >= LECT_DAY /*7일 이상 수업시작일이 남은 수업은 상태갱신 대상이 아님*/
     ]]>
     <choose>
            <when test="@org.apache.commons.lang3.StringUtils@isEmpty(lectSer) or @org.apache.commons.lang3.StringUtils@isEmpty(lectTims) ">
       AND LECT_STAT_CD IN (
     '101543' /*수강모집*/
    ,'101544' /*모집마감*/
    ,'101548' /*수업예정*/
    ,'101549' /*수업대기*/
    ,'101550' /*수업중*/
        )
            </when>
            <otherwise>
       AND A.LECT_SER = #{lectSer} AND A.LECT_TIMS = #{lectTims}
            </otherwise>
        </choose>

    </update>

    <update id="updateLectureSchdStatusSchedule" parameterType="map">
        UPDATE CNET_LECT_SCHD_INFO A SET
            LECT_STAT_CD =
                CASE
                    WHEN    TO_CHAR(SYSDATE,'YYYYMMDDhh24mi') >=  LECT_DAY||LECT_END_TIME
                            THEN '101551' /*수업완료*/
                    WHEN    TO_CHAR(SYSDATE,'YYYYMMDD') = LECT_DAY
                                    AND TO_CHAR(SYSDATE,'hh24mi') BETWEEN  LECT_START_TIME
                                    AND LECT_END_TIME
                            THEN '101550' /*수업중*/
                    WHEN    TO_CHAR(SYSDATE,'YYYYMMDD') = LECT_DAY
                                AND LECT_START_TIME BETWEEN  TO_CHAR(SYSDATE,'hh24mi')
                                AND TO_CHAR(SYSDATE + #{ready}/24/60,'hh24mi')
                            THEN '101549' /*수업대기*/
                    ELSE    LECT_STAT_CD
                    END
        WHERE TO_CHAR(SYSDATE+#{assign},'yyyymmdd') >= LECT_DAY /*7일 이상 수업시작일이 남은 수업은 상태갱신 대상이 아님*/
        AND LECT_STAT_CD IN (
                '101548' /*수업예정*/
                ,'101549' /*수업대기*/
                ,'101550' /*수업중*/
        )
    </update>

    <!-- 연강이 아닌 수업의 차수 상태 정보 갱신 -->
    <update id="updateLectureTimsStatus_temp">
    MERGE INTO CNET_LECT_TIMS_INFO T
        USING
        (
        SELECT A.LECT_SER, A.LECT_TIMS, A.LECT_STAT_CD
          FROM CNET_LECT_SCHD_INFO A
          INNER JOIN CNET_LECT_INFO C
          ON A.LECT_SER = C.LECT_SER
         WHERE A.LECT_STAT_CD IN (
                                     '101548' /*수업예정*/
                                    ,'101549' /*수업대기*/
                                    ,'101550' /*수업중*/
                                    ,'101551' /*수업완료*/
                                    ,'101545' /*모집실패*/  )
           AND C.LECT_TYPE_CD IN (    '101529' /*단강*/,'101531' /*특강*/,'101532' /*블록*/)
        ) DT ON (T.LECT_SER = DT.LECT_SER AND T.LECT_TIMS = DT.LECT_TIMS)
        WHEN MATCHED THEN UPDATE
        SET T.LECT_STAT_CD = DT.LECT_STAT_CD
    </update>

    <!--연강 포함 수업의 차수 상태정보 갱신 쿼리-->
    <update id="updateLectureTimsStatus" parameterType="map">
        <![CDATA[
        MERGE INTO CNET_LECT_TIMS_INFO T
        USING
        (
         SELECT LECT_SER, LECT_TIMS
          ,CASE WHEN ST1 > 0 THEN '101545'  /*모집실패*/
                    WHEN ST2 > 0 THEN '101548' /*수업예정*/
                    WHEN ST3 > 0 THEN '101549' /*수업대기*/
                    WHEN ST4 > 0 THEN '101550' /*수업중*/
                    WHEN ST5 > 0 THEN '101551' /*수업완료*/
           END AS LECT_STAT_CD
         FROM
         (
        SELECT A.LECT_SER, A.LECT_TIMS
            , SUM(CASE A.LECT_STAT_CD WHEN '101545' /*모집실패*/ THEN  1 ELSE 0 END) ST1
            , SUM(CASE A.LECT_STAT_CD WHEN '101548' /*수업예정*/ THEN  1 ELSE 0 END) ST2
            , SUM(CASE A.LECT_STAT_CD WHEN '101549' /*수업대기*/ THEN  1 ELSE 0 END) ST3
            , SUM(CASE A.LECT_STAT_CD WHEN '101550' /*수업중*/ THEN  1 ELSE 0 END) ST4
            , SUM(CASE A.LECT_STAT_CD WHEN '101551' /*수업완료*/ THEN  1 ELSE 0 END) ST5
          FROM CNET_LECT_SCHD_INFO A
          INNER JOIN CNET_LECT_INFO C
          ON A.LECT_SER = C.LECT_SER
        ]]>
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@isEmpty(lectSer) or @org.apache.commons.lang3.StringUtils@isEmpty(lectTims) ">
        WHERE A.LECT_STAT_CD IN (
         '101548' /*수업예정*/
        ,'101549' /*수업대기*/
        ,'101550' /*수업중*/
        ,'101551' /*수업완료*/
        ,'101545' /*모집실패*/  )
            </when>
            <otherwise>
         WHERE A.LECT_SER = #{lectSer} AND A.LECT_TIMS = #{lectTims}
            </otherwise>
        </choose>
        /*AND C.LECT_TYPE_CD IN (    '101529' ,'101531' ,'101532' , '101530' )*/
        GROUP BY A.LECT_SER, A.LECT_TIMS
        )
        ) DT ON (T.LECT_SER = DT.LECT_SER AND T.LECT_TIMS = DT.LECT_TIMS)
        WHEN MATCHED THEN UPDATE
        SET T.LECT_STAT_CD = DT.LECT_STAT_CD
    </update>

    <!--연강 포함 수업의 차수 상태정보 갱신 쿼리-->
    <update id="updateLectureTimsStatusSchedule" parameterType="map">
        <![CDATA[
        MERGE INTO CNET_LECT_TIMS_INFO T
        USING
                (
                    SELECT LECT_SER, LECT_TIMS
                            ,CASE
                                    WHEN ST3 > 0 THEN '101549' /*수업대기*/
                                    WHEN ST4 > 0 THEN '101550' /*수업중*/
                                    WHEN ST5 = cnt THEN '101551' /*수업완료*/
                                    ELSE '101548' /* 수업예정 */
                            END AS LECT_STAT_CD
                    FROM
                            (
                                SELECT  A.LECT_SER, A.LECT_TIMS
                                        , SUM(CASE A.LECT_STAT_CD WHEN '101548' /*수업예정*/ THEN  1 ELSE 0 END) ST2
                                        , SUM(CASE A.LECT_STAT_CD WHEN '101549' /*수업대기*/ THEN  1 ELSE 0 END) ST3
                                        , SUM(CASE A.LECT_STAT_CD WHEN '101550' /*수업중*/ THEN  1 ELSE 0 END) ST4
                                        , SUM(CASE A.LECT_STAT_CD WHEN '101551' /*수업완료*/ THEN  1 ELSE 0 END) ST5
                                        , count(1) as cnt
                                FROM    CNET_LECT_SCHD_INFO A
                                            INNER JOIN CNET_LECT_TIMS_INFO B
                                                ON A.LECT_SER = B.LECT_SER
                                                    AND A.LECT_TIMS = B.LECT_TIMS
                                            INNER JOIN CNET_LECT_INFO C
                                                ON A.LECT_SER = C.LECT_SER
                                WHERE   A.LECT_STAT_CD IN (
                                                        '101548' /* 수업예정 */
                                                        ,'101549' /*수업대기*/
                                                        ,'101550' /*수업중*/
                                                        ,'101551' /*수업완료*/
                                                        )
                                AND     B.LECT_STAT_CD <> '101551'
                                GROUP BY A.LECT_SER, A.LECT_TIMS
                            )
                ) DT    ON (T.LECT_SER = DT.LECT_SER
                            AND T.LECT_TIMS = DT.LECT_TIMS)
        WHEN MATCHED THEN
            UPDATE
                SET T.LECT_STAT_CD = DT.LECT_STAT_CD
        ]]>
    </update>

    <select id="retrieveNextStatusChangeTime" parameterType="map" resultType="Date">
        select min(NEXT_TIME) as NEXT_TIME
        from (
            SELECT
                    CASE
                        WHEN TO_DATE(A.LECT_DAY || A.LECT_START_TIME, 'yyyymmddhh24mi') - #{assign} > SYSDATE
                            THEN TO_DATE(A.LECT_DAY || A.LECT_START_TIME,'yyyymmddhh24mi') - #{assign}
                        WHEN TO_DATE(A.LECT_DAY || A.LECT_START_TIME, 'yyyymmddhh24mi') -#{ready}/24/60 > SYSDATE
                            THEN TO_DATE(A.LECT_DAY || A.LECT_START_TIME, 'yyyymmddhh24mi') -#{ready}/24/60
                        WHEN TO_DATE(A.LECT_DAY || A.LECT_START_TIME, 'yyyymmddhh24mi') > SYSDATE
                            THEN TO_DATE(A.LECT_DAY || A.LECT_START_TIME,'yyyymmddhh24mi')
                        WHEN TO_DATE(A.LECT_DAY || A.LECT_END_TIME, 'yyyymmddhh24mi') > SYSDATE
                            THEN TO_DATE(A.LECT_DAY || A.LECT_END_TIME,'yyyymmddhh24mi')
                    END AS NEXT_TIME
            FROM
                    CNET_LECT_SCHD_INFO A
                        inner join cnet_lect_info b
                            on a.lect_ser = b.lect_ser
            WHERE
                    a.LECT_STAT_CD IN ('101543'
                        /*수강모집*/
                        , '101544'
                        /*모집마감*/
                        , '101548'
                        /*수업예정*/
                        , '101549'
                        /*수업대기*/
                        , '101550'
                        /*수업중*/
                    )
            union ALL
            select to_date(to_char(sysdate+1,'yyyy-mm-dd')||'08:00:00','yyyy-mm-dd hh24:mi:ss') as NEXT_TIME from dual
        )
    </select>

    <select id="listMentorRelMapp" parameterType="java.lang.String" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT
                A.MBR_NO AS COMPANY_MBR_NO /* 기업멘토의 회원번호 */
              , A.POS_CO_NO AS COMPANY_POS_CO_NO /* 기업멘토의 소속업체번호 */
              , (SELECT Z.CO_NM
                   FROM CNET_CO_INFO Z
                  WHERE Z.CO_NO = A.POS_CO_NO) AS COMPANY_CO_NM /* 기업멘토의 소속업체명 */
              , C.TARGT_MBR_NO AS GROUP_MBR_NO /* 그룹관리자(교육청담당자)의 회원번호 */
              , D.POS_CO_NO AS GROUP_POS_CO_NO /* 그룹관리자(교육청담당자)의 소속업체(교육청)번호 */
              , CASE WHEN D.MBR_CUALF_CD = '101500' THEN (SELECT Z.CO_NM FROM CNET_CO_INFO Z WHERE Z.CO_NO = D.POS_CO_NO) /* 기업멘토의 상위 관리자가 그룹관리자(교육청담당자)일 경우만 화면에 표시 */
                     ELSE '-'
                END AS GROUP_CO_NM /* 그룹관리자(교육청담당자)의 소속업체(교육청)명 */
          FROM CNET_MBR_INFO A
         INNER JOIN CNET_MBR_REL_MAPP B ON (B.REG_MBR_NO = A.MBR_NO AND B.REL_CLASS_CD = '101508' AND B.AUTH_STAT_CD = '101027')
          LEFT OUTER JOIN CNET_MBR_REL_MAPP C ON ( C.REG_MBR_NO = A.MBR_NO AND C.REL_CLASS_CD = '101507' AND C.AUTH_STAT_CD = '101027')
          LEFT OUTER JOIN CNET_MBR_INFO D ON (D.MBR_NO = C.TARGT_MBR_NO)
         WHERE B.TARGT_MBR_NO = #{mbrNo}
    </select>

    <select id="listLectPicInfo" parameterType="java.lang.Integer" resultMap="resultLectPicInfo">
        SELECT
                A.LECT_SER
              , A.FILE_SER
              , A.REG_DTM
              , A.REG_MBR_NO
              , B.FILE_NM
              , B.FILE_SIZE
              , B.FILE_EXT
              , B.ORI_FILE_NM
              , B.DW_CNT
              , B.USE_YN
          FROM CNET_LECT_PIC_INFO A
         INNER JOIN CNET_COM_FILE_INFO B ON (B.FILE_SER = A.FILE_SER)
         WHERE A.LECT_SER = #{lectSer}
    </select>

    <select id="retireveLectPicInfo" parameterType="kr.or.career.mentor.domain.LectInfo" resultMap="resultLectPicInfo">
        SELECT
        A.LECT_SER
        , A.FILE_SER
        , A.REG_DTM
        , A.REG_MBR_NO
        , B.FILE_NM
        , B.FILE_SIZE
        , B.FILE_EXT
        , B.ORI_FILE_NM
        , B.DW_CNT
        , B.USE_YN
        FROM CNET_LECT_PIC_INFO A
        INNER JOIN CNET_COM_FILE_INFO B ON (B.FILE_SER = A.FILE_SER)
        WHERE A.LECT_SER = #{lectSer}
    </select>

    <update id="updateLectureSchdStatCd" parameterType="kr.or.career.mentor.domain.ApprovalDTO">
        UPDATE CNET_LECT_SCHD_INFO
        <set>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
        lect_stat_cd = #{lectStatCd},
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectSessId)">
        lect_sess_id = #{lectSessId},
        </if>
        </set>
        WHERE lect_ser = #{lectSer}
          AND lect_tims = #{lectTims}
          <if test="schdSeq != null">
          AND schd_seq = #{schdSeq}
          </if>
    </update>

    <update id="updateLectureTimsStatCd" parameterType="kr.or.career.mentor.domain.ApprovalDTO">
        UPDATE
                    CNET_LECT_TIMS_INFO
        SET
                    LECT_STAT_CD = #{lectStatCd}
        <if test="@org.apache.commons.lang3.StringUtils@equals(lectStatCd, '101547')">
                ,  EXPS_YN = 'N'
        </if>
        WHERE LECT_SER = #{lectSer}
          AND LECT_TIMS = #{lectTims}
    </update>

    <update id="updateLectureInfoStatCd" parameterType="kr.or.career.mentor.domain.ApprovalDTO">
        UPDATE CNET_LECT_INFO SET
        LECT_STAT_CD = #{lectStatCd}
        ,CHG_DTM = SYSDATE
        WHERE LECT_SER = #{lectSer}
    </update>

    <!-- 수업정보 복사 -->
    <insert id="copySaveOpenLect" parameterType="kr.or.career.mentor.domain.LectInfo">
        <selectKey keyProperty="lectSer" resultType="Integer" order="BEFORE">
            SELECT SQ_LECT_INFO.NEXTVAL FROM DUAL
        </selectKey>
        /* LectureInfomationMapper.xml 설명 : 수업정보 등록, ID : insertLectInfo, 작성일 : 2015.10.02 */
        INSERT INTO CNET_LECT_INFO (
          LECT_TYPE_CD
        , LECT_TARGT_CD
        , LECT_TITLE
        , LECT_START_DTM
        , LECT_END_DTM
        , LECTR_MBR_NO
        , LECTR_NM
        , LECTR_JOB_NO
        , LECT_PIC_PATH
        , LECT_OUTLN_INFO
        , LECT_INTDC_INFO
        , LECT_SUST_INFO
        , MAX_APPL_CNT
        , MAX_OBSV_CNT
        , LECT_REQ_SER
        , LECT_STAT_CD
        , LECT_SER
        , REG_DTM
        , REG_MBR_NO
        )
       (SELECT  LECT_TYPE_CD
              , LECT_TARGT_CD
              , LECT_TITLE
              , LECT_START_DTM
              , LECT_END_DTM
              , LECTR_MBR_NO
              , LECTR_NM
              , LECTR_JOB_NO
              , LECT_PIC_PATH
              , LECT_OUTLN_INFO
              , LECT_INTDC_INFO
              , LECT_SUST_INFO
              , MAX_APPL_CNT
              , MAX_OBSV_CNT
              , LECT_REQ_SER
              , #{lectStatCd}
              , #{lectSer}
              , SYSDATE
              , #{copyLectrMbrNo, jdbcType=VARCHAR}
        FROM CNET_LECT_INFO
        WHERE LECT_SER = #{copyLectSer})
    </insert>
    <select id="listLectureSchedule" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* LectureInfomationMapper.xml 설명 : 수업스케줄 목록조회, ID : listLectureSchedule, 작성일 : 2015.10.26 */
        /* paging */
        SELECT
                T.LECT_SER
              , T.LECT_TIMS
              , T.SCHD_SEQ
              , T.LECT_DAY
              , T.LECT_START_TIME
              , T.LECT_END_TIME
              , (SUBSTR (T.LECTURE_TIME, 12, 8)) AS LECTURE_TIME
              , T.LECTR_NM
              , T.LECTR_MBR_NO
              , T.LECT_TYPE_CD
              , T.LECT_TYPE_CD_NM
              , T.LECT_TITLE
              , T.LECT_STAT_CD
              , T.LECT_STAT_CD_NM
              , T.APPL_CNT
              , T.OBSV_CNT
              , T.LECTURE_CNT
              , T.JOB_NM
              , (
                    SELECT
                    SUBSTR(MAX(REVERSE(SYS_CONNECT_BY_PATH(REVERSE(CD_NM), '>'))), 1, INSTR(MAX(REVERSE(SYS_CONNECT_BY_PATH(REVERSE(CD_NM), '>'))), '>', -1)-1)
                    FROM CNET_JOB_CLSF_CD
                    START WITH CD = T.JOB_CLSF_CD
                    CONNECT BY NOCYCLE PRIOR SUP_CD = CD
                 ) AS JOB_STRUCT
              , ROW_NUMBER() OVER(ORDER BY T.LECT_DAY DESC, T.LECT_START_TIME DESC) AS RN
        /* paging */
          FROM (
                    SELECT
                            A.LECT_SER
                            , B.LECT_TIMS
                            , C.SCHD_SEQ
                            , C.LECT_DAY
                            , C.LECT_START_TIME
                            , C.LECT_END_TIME
                            , NUMTODSINTERVAL(TO_DATE(C.LECT_END_TIME, 'HH24MI') - TO_DATE(C.LECT_START_TIME, 'HH24MI'), 'DAY') AS LECTURE_TIME
                            , A.LECTR_NM
                            , A.LECTR_MBR_NO
                            , A.LECT_TYPE_CD
                            , (
                                SELECT Z.CD_NM
                                  FROM CNET_CODE Z
                                 WHERE Z.SUP_CD = '101528'
                                   AND Z.CD = A.LECT_TYPE_CD) AS LECT_TYPE_CD_NM
                                     , A.LECT_TITLE
                                     , A.lect_targt_cd
                                     , C.LECT_STAT_CD
                                     , C.lect_sess_id
                                     , (
                                        SELECT Z.CD_NM
                                          FROM CNET_CODE Z
                                         WHERE Z.SUP_CD = '101541'
                                           AND Z.CD = C.LECT_STAT_CD
                                       ) AS LECT_STAT_CD_NM
                    , (
                        SELECT COUNT(1)
                        FROM CNET_LECT_APPL_INFO Z
                        WHERE Z.LECT_SER = A.LECT_SER
                        AND Z.LECT_TIMS = B.LECT_TIMS
                        AND Z.APPL_STAT_CD IN ('101576', '101577') AND APPL_CLASS_CD = '101716'
                      ) AS OBSV_CNT
                    , (
                        SELECT COUNT(1)
                        FROM CNET_LECT_APPL_INFO Z
                        WHERE Z.LECT_SER = A.LECT_SER
                        AND Z.LECT_TIMS = B.LECT_TIMS
                        AND Z.APPL_STAT_CD IN ('101576', '101577') AND APPL_CLASS_CD = '101715'
                    ) AS APPL_CNT
                    , CASE WHEN A.LECT_TYPE_CD = '101529' THEN 1 /*단강*/
                           WHEN A.LECT_TYPE_CD = '101530' THEN 1 /*연강*/
                           WHEN A.LECT_TYPE_CD = '101531' THEN 1 /*특강*/
                           WHEN A.LECT_TYPE_CD = '101532' THEN 2 /*블록*/
                           ELSE 0
                           END AS LECTURE_CNT
                    , (SELECT Z.JOB_NM FROM CNET_JOB_INFO Z WHERE Z.JOB_NO = A.LECTR_JOB_NO) JOB_NM
                    , A.max_appl_cnt as max_appl_cnt
                    , a.max_obsv_cnt as max_obsv_cnt
                    , F.JOB_CLSF_CD
                    FROM CNET_LECT_INFO A
                    INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER)
                    INNER JOIN CNET_LECT_SCHD_INFO C ON (C.LECT_SER = B.LECT_SER AND C.LECT_TIMS = B.LECT_TIMS)
                    INNER JOIN cnet_mbr_info  D
                        ON (D.MBR_NO = A.LECTR_MBR_NO
                            )
                    LEFT JOIN CNET_MBR_JOB_INFO E ON (D.MBR_NO = E.MBR_NO)
                    LEFT JOIN CNET_JOB_INFO F ON (E.JOB_NO = F.JOB_NO)
                    WHERE 1 = 1 AND A.lect_co_no = #{coNo}
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND C.LECT_STAT_CD = #{lectStatCd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101650')">
                    AND A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101651')">
                    AND A.LECTR_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE Z.JOB_NM LIKE '%' || #{keyword} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101652')">
                    AND A.LECTR_NM LIKE '%' || #{keyword} || '%'
                </when>
                <otherwise>
                    AND (   A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                         OR A.LECTR_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE Z.JOB_NM LIKE '%' || #{keyword} || '%')
                         OR A.LECTR_NM LIKE '%' || #{keyword} || '%')
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            <![CDATA[
                   AND C.LECT_DAY >= #{searchStDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchEndDate)">
            <![CDATA[
                   AND C.LECT_DAY <= #{searchEndDate}
            ]]>
        </if>
        ) T
    </select>

    <!-- 수업일시정보 목록조회 -->
    <select id="listLectTimsInfo" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectTimsInfo2">
        /* paging */
        SELECT
                  A.LECT_TIMS
                , A.LECT_SER
                , A.LECT_STAT_CD
                , A.EXPS_YN
                , ROW_NUMBER() OVER(ORDER BY A.REG_DTM) AS rn
                , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = A.LECT_SER AND LECT_TIMS= A.LECT_TIMS AND APPL_CLASS_CD = '101715' AND APPL_STAT_CD IN ('101576', '101577')) AS APPL_CNT
                , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = A.LECT_SER AND LECT_TIMS= A.LECT_TIMS AND APPL_CLASS_CD = '101716' AND APPL_STAT_CD IN ('101576', '101577')) AS OBSV_CNT
        /* paging */
        FROM CNET_LECT_TIMS_INFO A
        WHERE 1 = 1
        AND A.LECT_SER = #{lectSer}
        ORDER BY A.LECT_TIMS
    </select>


    <!-- 수업의 정보, 혹은 수업의 차수의 수업 스케줄 조회 -->
    <select id="listLectureScheInfo" parameterType="kr.or.career.mentor.domain.ApprovalDTO" resultMap="resultLectSchdInfo">
        <include refid="listCalculateLecture"></include>
        <where>
        <if test="lectSer != null">
        AND C.LECT_SER = #{lectSer}
        </if>
        <if test="lectTims != null">
        AND C.LECT_TIMS = #{lectTims}
        </if>
        <if test="schdSeq != null">
        AND C.SCHD_SEQ = #{schdSeq}
        </if>
        </where>
    </select>
    <!-- 맨토사이트 메인에서 사용하기 위한, 수업 각 상태별 COUNT -->
    <select id="retrieveLectStatusCnt" parameterType="kr.or.career.mentor.domain.User" resultType="kr.or.career.mentor.domain.StateCnt">
         SELECT NVL(SUM(DECODE(B.LECT_STAT_CD,'101542',1,0)),0) AS ST_101542
               ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101543',1,0)),0) AS ST_101543
               ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101544',1,0)),0) AS ST_101544
               ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101548',1,0)),0) AS ST_101548
               ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101549',1,0)),0) AS ST_101549
               ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101550',1,0)),0) AS ST_101550
               ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101551',1,0)),0) AS ST_101551
               ,NVL(SUM(DECODE(B.LECT_STAT_CD,'101662',1,0)),0) AS ST_101562
           FROM CNET_LECT_INFO B
LEFT OUTER JOIN CNET_LECT_TIMS_INFO A
             ON B.LECT_SER = A.LECT_SER
LEFT OUTER JOIN CNET_LECT_SCHD_INFO C
             ON (C.LECT_SER = A.LECT_SER AND C.LECT_TIMS = A.LECT_TIMS)
          AND A.LECT_STAT_CD IN (
        '101542'    /*101541    수업요청*/
        ,'101543'    /*101541    수강모집*/
        ,'101544'    /*101541    모집마감*/
        /*,'101545'    101541    모집실패*/
        /*,'101546'    101541    모집취소요청*/
        /*,'101547'    101541    모집취소*/
        ,'101548'    /*101541    수업예정*/
        ,'101549'    /*101541    수업대기*/
        ,'101550'    /*101541    수업중*/
        ,'101551'    /*101541    수업완료*/
        /*,'101552'    101541    수업취소요청*/
        /*,'101553'    101541    수업취소*/
        ,'101662'    /*101541    승인반려*/
         )
         <choose>
         <when test="mbrCualfCd eq '101502' or mbrCualfCd eq '101503'">
       WHERE B.LECTR_MBR_NO = #{mbrNo} /*개인멘토, 소속멘토*/
         </when>
         <when test="mbrCualfCd eq '101501'">
       WHERE B.LECTR_MBR_NO IN (
                SELECT  MBR_NO
                FROM    CNET_MBR_INFO
                WHERE   POS_CO_NO = #{posCoNo}
                and     MBR_CUALF_CD = '101502'
             )
         </when>
         </choose>
    </select>
    <!-- 수업요청 목록조회 -->
    <select id="listRequestLecture" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectReqInfo">
        /* paging */
        <include refid="selectLectureRequest"/>
               , C.SCH_NM
               , ROW_NUMBER() OVER (ORDER BY A.REQ_DTM DESC) AS RN
        /* paging */
          FROM CNET_LECT_REQ_INFO A
                INNER JOIN CNET_LECT_REQ_TIME_INFO F ON A.REQ_SER = F.REQ_SER
                LEFT OUTER JOIN CNET_CLAS_ROOM_INFO B ON (B.CLAS_ROOM_SER = A.CLAS_ROOM_SER)
                LEFT OUTER JOIN CNET_SCH_INFO C ON (B.SCH_NO = C.SCH_NO)
         WHERE 1 = 1
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@equals(lectureRequestType, 'open')">
                AND A.TARGT_JOB_NO IS NULL
                AND A.TARGT_MBR_NO IS NULL
                AND A.SOL_KIND_CD IS NULL
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(lectureRequestType, 'job')">
                AND A.TARGT_JOB_NO IS NOT NULL
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(lectureRequestType, 'mentor')">
                AND A.TARGT_MBR_NO IS NOT NULL
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(lectureRequestType, 'solution')">
                AND A.SOL_KIND_CD IS NOT NULL
            </when>
        </choose>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(reqStatCd)">
            AND A.REQ_STAT_CD = #{reqStatCd}
        </if>
        AND TO_DATE (F.LECT_PREF_DAY || F.LECT_PREF_TIME, 'YYYYMMDDHH24MI') >= SYSDATE
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrCualfCd)">
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 기업관리자일 경우 -->
                AND (A.TARGT_MBR_NO IN (
                                        SELECT X.TARGT_MBR_NO
                                          FROM CNET_MBR_REL_MAPP X
                                         WHERE 1 = 1
                                           AND X.REL_CLASS_CD = '101508'
                                           AND X.REG_MBR_NO = #{mbrNo}
                                        )
                OR A.TARGT_JOB_NO IN (
                                        SELECT Y.JOB_NO
                                          FROM CNET_MBR_REL_MAPP X
                                         INNER JOIN CNET_MBR_JOB_INFO Y ON (X.TARGT_MBR_NO = Y.MBR_NO)
                                         WHERE 1 = 1
                                           AND X.REL_CLASS_CD = '101508'
                                           AND X.REG_MBR_NO = #{mbrNo}
                                       )
                    )
            </when>
            <otherwise>
                AND (A.TARGT_MBR_NO = #{mbrNo}
                OR A.TARGT_JOB_NO IN (
                                        SELECT X.JOB_NO FROM CNET_MBR_JOB_INFO X
                                         WHERE 1 = 1
                                           AND X.MBR_NO = #{mbrNo}
                                      )
                    )
            </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, 'titlePlusContents')">
                    AND ( A.LECT_TITLE LIKE '%' || #{keyword} || '%' OR A.LECT_SUST LIKE '%' || #{keyword} || '%' )
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, 'title')">
                    AND A.LECT_TITLE LIKE '%' || #{keyword} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, 'writer')">
                    AND A.REQ_MBR_NO IN (SELECT Z.MBR_NO FROM CNET_MBR_INFO Z WHERE Z.NM LIKE '%' || #{keyword} || '%')
                </when>
            </choose>
        </if>
    </select>

    <!-- 수업요청조회 -->
    <select id="retrieveLectReqInfo" parameterType="kr.or.career.mentor.domain.LectReqInfo" resultType="kr.or.career.mentor.domain.LectReqInfo">
        SELECT   REQ_SER
               , REQ_MBR_NO
               , TARGT_JOB_NO
               , TARGT_MBR_NO
               , CLAS_ROOM_SER
               , LECT_TITLE
               , LECT_SUST
               , SCH_CLASS_CD
               , REQ_STAT_CD
               , REQ_DTM
        FROM CNET_LECT_REQ_INFO
        WHERE 1 = 1
        AND REQ_SER = #{reqSer}
    </select>

    <select id="retrieveClasCnt" parameterType="kr.or.career.mentor.domain.BizSetInfo" resultType="java.lang.Integer">
        SELECT CLAS_CNT
          FROM CNET_BIZ_SET_INFO
         WHERE SET_SER = #{setSer}
    </select>

    <update id="updateLectApplInfo" parameterType="kr.or.career.mentor.domain.LectApplInfo">
        UPDATE CNET_LECT_APPL_INFO
           SET  APPL_MBR_NO = #{applMbrNo}
              , SET_SER = #{setSer}
              , APPL_STAT_CD = #{applStatCd}
              , CHG_DTM = SYSDATE
              , CHG_MBR_NO = #{chgMbrNo}
         WHERE LECT_SER = #{lectSer}
           AND LECT_TIMS = #{lectTims}
           AND CLAS_ROOM_SER = #{clasRoomSer}
    </update>

    <!-- 기업멘토 관련수업 목록조회 -->
    <select id="listCompanyMentorRelationLecture" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* LectureInfomationMapper.xml 설명 : 기업멘토 관련수업 목록조회, ID : listCompanyMentorRelationLecture, 작성일 : 2015.11.05 */
        /* paging */
        SELECT
                A.LECT_SER
              , A.LECT_TIMS
              , A.SCHD_SEQ
              , B.LECT_TITLE
              , A.LECT_DAY
              , A.LECT_START_TIME
              , A.LECT_END_TIME
              , A.LECT_STAT_CD
              , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM
              , B.LECTR_NM
        <choose>
            <when test="@org.apache.commons.lang3.StringUtils@equals(orderBy, 'lecture')">
                , ROW_NUMBER() OVER(ORDER BY A.LECT_DAY DESC, A.LECT_START_TIME DESC, B.LECT_TITLE) AS RN
            </when>
            <when test="@org.apache.commons.lang3.StringUtils@equals(orderBy, 'mentor')">
                , ROW_NUMBER() OVER(ORDER BY B.LECTR_NM) AS RN
            </when>
        </choose>
        /* paging */
          FROM CNET_LECT_SCHD_INFO A
         INNER JOIN CNET_LECT_INFO B ON (B.LECT_SER = A.LECT_SER)
         INNER JOIN CNET_MBR_REL_MAPP C ON (C.TARGT_MBR_NO = B.LECTR_MBR_NO)
         WHERE 1 = 1
           AND C.REG_MBR_NO = #{mbrNo}
           AND C.REL_CLASS_CD = '101508'
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND A.LECT_STAT_CD = #{lectStatCd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            <![CDATA[
                   AND A.LECT_DAY >= #{searchStDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchEndDate)">
            <![CDATA[
                   AND A.LECT_DAY <= #{searchEndDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                   AND A.LECT_START_TIME >= #{lectTime}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101650')">
                    AND B.LECT_TITLE LIKE '%' || #{keyword} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101651')">
                    AND B.LECTR_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE Z.JOB_NM LIKE '%' || #{keyword} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101652')">
                    AND B.LECTR_NM LIKE '%' || #{keyword} || '%'
                </when>
                <otherwise>
                    AND (   B.LECT_TITLE LIKE '%' || #{keyword} || '%'
                    OR B.LECTR_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE Z.JOB_NM LIKE '%' || #{keyword} || '%')
                    OR B.LECTR_NM LIKE '%' || #{keyword} || '%')
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND B.LECT_TYPE_CD = #{lectType}
        </if>
    </select>

    <!-- 기업멘토 관련수업 수업상태별 건수 조회 -->
    <select id="retrieveCompanyMentorRelationLectureCnt" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* LectureInfomationMapper.xml 설명 : 기업멘토 관련수업 수업상태별 건수 조회, ID : retrieveCompanyMentorRelationLectureCnt, 작성일 : 2015.11.05 */
        SELECT
                COUNT(*) AS TOTAL_CNT
              , COUNT(CASE WHEN A.LECT_STAT_CD = '101543' THEN 1 END) AS RECRUITMENT_CNT
              , COUNT(CASE WHEN A.LECT_STAT_CD = '101548' THEN 1 END) AS PREORDINATION_CNT
              , COUNT(CASE WHEN A.LECT_STAT_CD = '101549' THEN 1 END) AS WAITING_CNT
              , COUNT(CASE WHEN A.LECT_STAT_CD = '101550' THEN 1 END) AS PROGRESS_CNT
              , COUNT(CASE WHEN A.LECT_STAT_CD = '101551' THEN 1 END) AS COMPLETE_CNT
          FROM CNET_LECT_SCHD_INFO A
         INNER JOIN CNET_LECT_INFO B ON (B.LECT_SER = A.LECT_SER)
         INNER JOIN CNET_MBR_REL_MAPP C ON (C.TARGT_MBR_NO = B.LECTR_MBR_NO)
         WHERE 1 = 1
           AND C.REG_MBR_NO = #{mbrNo}
           AND C.REL_CLASS_CD = '101508'
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            <![CDATA[
                   AND A.LECT_DAY >= #{searchStDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchEndDate)">
            <![CDATA[
                   AND A.LECT_DAY <= #{searchEndDate}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                   AND A.LECT_START_TIME >= #{lectTime}
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(keyword)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101650')">
                    AND B.LECT_TITLE LIKE '%' || #{keyword} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101651')">
                    AND B.LECTR_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE Z.JOB_NM LIKE '%' || #{keyword} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(category, '101652')">
                    AND B.LECTR_NM LIKE '%' || #{keyword} || '%'
                </when>
                <otherwise>
                    AND (   B.LECT_TITLE LIKE '%' || #{keyword} || '%'
                    OR B.LECTR_JOB_NO IN (SELECT Z.JOB_NO FROM CNET_JOB_INFO Z WHERE Z.JOB_NM LIKE '%' || #{keyword} || '%')
                    OR B.LECTR_NM LIKE '%' || #{keyword} || '%')
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND B.LECT_TYPE_CD = #{lectType}
        </if>
    </select>

    <!-- 관리자 수업현황 -->
    <select id="lectureTotalList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* paging */
        SELECT
        C.LECT_INTDC_INFO
        , C.LECT_SUST_INFO
        , C.MAX_APPL_CNT
        , C.MAX_OBSV_CNT
        , C.LECT_REQ_SER
        , C.REG_DTM
        , C.REG_MBR_NO
        , C.CHG_DTM
        , C.CHG_MBR_NO
        , C.LECT_SER
        , C.LECT_TYPE_CD
        , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM
        , C.LECT_TARGT_CD
        , C.LECT_TITLE
        , C.LECT_START_DTM
        , C.LECT_END_DTM
        , C.LECTR_MBR_NO
        , C.LECTR_NM
        , (SELECT (SELECT X.NM FROM CNET_MBR_INFO X WHERE X.MBR_NO = Y.REG_MBR_NO)
        FROM CNET_MBR_INFO Z
        INNER JOIN CNET_MBR_REL_MAPP Y ON (Y.TARGT_MBR_NO = Z.MBR_NO)
        WHERE Z.MBR_NO = C.LECTR_MBR_NO
        AND Y.AUTH_STAT_CD = '101027'
        AND Y.REL_CLASS_CD = '101508') AS GROUP_CO_NM
        , (SELECT (SELECT X.MBR_NO FROM CNET_MBR_INFO X WHERE X.MBR_NO = Y.REG_MBR_NO)
        FROM CNET_MBR_INFO Z
        iNNER JOIN CNET_MBR_REL_MAPP Y ON (Y.TARGT_MBR_NO = Z.MBR_NO)
        WHERE Z.MBR_NO = C.LECTR_MBR_NO
        AND Y.AUTH_STAT_CD = '101027'
        AND Y.REL_CLASS_CD = '101508') AS GROUP_CO_NO
        , C.LECTR_JOB_NO
        , C.LECT_PIC_PATH
        , C.LECT_OUTLN_INFO
        , B.LECT_TIMS
        , A.LECT_STAT_CD
        , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM
        , A.SCHD_SEQ
        , A.LECT_DAY
        , A.LECT_START_TIME
        , A.LECT_END_TIME
        , A.MC_NO
        , A.STDO_NO
        , A.LECT_CNCL_RSN_SUST
        , A.LECT_SESS_ID
        , D.MBR_CUALF_CD
        , F.JOB_NM
        , B.EXPS_YN
        <if test="@org.apache.commons.lang3.StringUtils@equals(orderBy, 'lectDay')">
            , ROW_NUMBER() OVER(ORDER BY A.LECT_DAY DESC, A.LECT_START_TIME DESC) AS rn
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(orderBy, 'mentor')">
            ,ROW_NUMBER() OVER(ORDER BY CASE WHEN D.MBR_CUALF_CD IN ('101502') THEN 0 ELSE 1 END, C.LECTR_NM, A.LECT_DAY DESC, A.LECT_START_TIME DESC) AS rn
        </if>
        /* paging */
        FROM CNET_LECT_SCHD_INFO A
        INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
        INNER JOIN CNET_LECT_INFO C ON (C.LECT_SER = B.LECT_SER)
        INNER JOIN CNET_MBR_INFO D ON (D.MBR_NO = C.LECTR_MBR_NO)
        LEFT JOIN CNET_MBR_JOB_INFO F ON (F.MBR_NO = C.LECTR_MBR_NO)
        WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(A.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101534')">
                    AND C.LECT_TARGT_CD IN ('101534', '101537' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101535')">
                    AND C.LECT_TARGT_CD IN ('101535', '101537' ,'101538', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101536')">
                    AND C.LECT_TARGT_CD IN ('101536', '101538' ,'101539', '101540')
                </when>
                <otherwise>
                    AND C.LECT_TARGT_CD = #{schoolGrd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                AND TO_DATE(A.LECT_START_TIME,'HH24MI') >= TO_DATE(#{lectTime},'HH24MI')
             ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND C.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND A.LECT_STAT_CD = #{lectStatCd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mentorType)">
            AND D.MBR_CUALF_CD = #{mentorType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                    AND (C.LECTR_NM LIKE '%' || #{searchKey} || '%' OR F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%' OR F.JOB_NM LIKE '%' || #{searchKey} || '%' OR C.LECT_TITLE LIKE '%' || #{searchKey} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                    AND F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                    AND F.JOB_NM LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                    AND C.LECT_TITLE LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                    AND C.LECTR_NM LIKE '%' || #{searchKey} || '%'
                </when>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101500')"> <!-- 그룹관리자일 경우 -->
            AND C.LECTR_MBR_NO IN (
            SELECT TARGT_MBR_NO
            FROM CNET_MBR_REL_MAPP
            WHERE REG_MBR_NO IN (SELECT TARGT_MBR_NO
            FROM CNET_MBR_REL_MAPP
            WHERE REG_MBR_NO IN (SELECT MBR_NO
            FROM CNET_MBR_INFO
            WHERE POS_CO_NO = (SELECT POS_CO_NO
            FROM CNET_MBR_INFO
            WHERE MBR_NO = #{mbrNo})))
            )
        </if>
    </select>


    <!-- 관리자 수업현황 엑셀다운로드-->
    <select id="excelDownListLectureStatus" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT
        C.LECT_INTDC_INFO
        , C.LECT_SUST_INFO
        , C.MAX_APPL_CNT
        , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO Z WHERE Z.LECT_SER = B.LECT_SER AND Z.LECT_TIMS = B.LECT_TIMS AND Z.APPL_STAT_CD IN ('101576', '101577')) AS APPL_CNT /* 신청기기 */
        , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO Z WHERE Z.LECT_SER = B.LECT_SER AND Z.LECT_TIMS = B.LECT_TIMS AND Z.APPL_STAT_CD = '101575') AS STD_BY_CNT /* 대기기기 */
        , C.MAX_OBSV_CNT
        , C.LECT_REQ_SER
        , C.REG_DTM
        , C.REG_MBR_NO
        , C.CHG_DTM
        , C.CHG_MBR_NO
        , C.LECT_SER
        , C.LECT_TYPE_CD
        , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = C.LECT_TYPE_CD) AS LECT_TYPE_CD_NM
        , C.LECT_TARGT_CD
        , C.LECT_TITLE
        , C.LECT_START_DTM
        , C.LECT_END_DTM
        , C.LECTR_MBR_NO
        , C.LECTR_NM
        , C.LECTR_JOB_NO
        , C.LECT_PIC_PATH
        , C.LECT_OUTLN_INFO
        , B.LECT_TIMS
        , A.LECT_STAT_CD
        , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM /* 수업상태 */
        , A.SCHD_SEQ
        , A.LECT_DAY
        , A.LECT_START_TIME
        , A.LECT_END_TIME
        , A.MC_NO
        , A.STDO_NO
        , (SELECT Z.MC_NM FROM CNET_MC_INFO Z WHERE Z.MC_NO = A.MC_NO) AS MC_NM /* MC명 */
        , (SELECT Z.STDO_NM FROM CNET_STDO_INFO Z WHERE Z.STDO_NO = A.STDO_NO) AS STDO_NM /* 스튜디오명 */
        , A.LECT_CNCL_RSN_SUST
        , CASE WHEN C.LECT_TYPE_CD = '101529' THEN 1 /*단강*/
               WHEN C.LECT_TYPE_CD = '101530' THEN 1 /*연강*/
               WHEN C.LECT_TYPE_CD = '101531' THEN 1 /*특강*/
               WHEN C.LECT_TYPE_CD = '101532' THEN 2
                                                    /*
                                                    CASE WHEN ( (TO_DATE(A.LECT_END_TIME, 'HH24MI') - TO_DATE(A.LECT_START_TIME, 'HH24MI')) * 24 * 60 ) >= 120 THEN 2
                                                         ELSE 1
                                                     END
                                                    */
            ELSE 0
             END AS LECTURE_CNT
        , (SELECT (SELECT X.NM FROM CNET_MBR_INFO X WHERE X.MBR_NO = Y.REG_MBR_NO)
             FROM CNET_MBR_INFO Z
            INNER JOIN CNET_MBR_REL_MAPP Y ON (Y.TARGT_MBR_NO = Z.MBR_NO)
            WHERE Z.MBR_NO = C.LECTR_MBR_NO
              AND Y.AUTH_STAT_CD = '101027'
              AND Y.REL_CLASS_CD = '101508') AS GROUP_CO_NM
        , (SELECT CD_NM
             FROM CNET_JOB_CLSF_CD
            WHERE 1 = 1
              AND cd_lv =0
            START WITH cd = (
           SELECT JOB_CLSF_CD
             FROM CNET_JOB_INFO
            WHERE 1 = 1
        AND JOB_NO = F.JOB_NO)
        CONNECT BY NOCYCLE PRIOR SUP_CD = CD) AS JOB_CTG0
        , (SELECT CD_NM
             FROM CNET_JOB_CLSF_CD
            WHERE 1 = 1
              AND cd_lv =1
            START WITH cd = (
           SELECT JOB_CLSF_CD
             FROM CNET_JOB_INFO
            WHERE 1 = 1
              AND JOB_NO = F.JOB_NO)
          CONNECT BY NOCYCLE PRIOR SUP_CD = CD) AS JOB_CTG1
        , (SELECT CD_NM
             FROM CNET_JOB_CLSF_CD
            WHERE 1 = 1
              AND cd_lv =2
            START WITH cd = (
           SELECT JOB_CLSF_CD
            FROM CNET_JOB_INFO
           WHERE 1 = 1
             AND JOB_NO = F.JOB_NO)
         CONNECT BY NOCYCLE PRIOR SUP_CD = CD) AS JOB_CTG2
        , (SELECT CD_NM
             FROM CNET_JOB_CLSF_CD
            WHERE 1 = 1
              AND cd_lv =3
            START WITH cd = (
           SELECT JOB_CLSF_CD
             FROM CNET_JOB_INFO
            WHERE 1 = 1
              AND JOB_NO = F.JOB_NO)
          CONNECT BY NOCYCLE PRIOR SUP_CD = CD) AS JOB_CTG3
        , F.JOB_NM
        <if test="@org.apache.commons.lang3.StringUtils@equals(orderBy, 'lectDay')">
            , ROW_NUMBER() OVER(ORDER BY A.LECT_DAY DESC, C.REG_DTM DESC, A.SCHD_SEQ) AS rn
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(orderBy, 'mentor')">
            ,ROW_NUMBER() OVER(ORDER BY CASE WHEN D.MBR_CUALF_CD IN ('101502') THEN 0 ELSE 1 END, C.LECTR_NM, A.LECT_DAY DESC, A.REG_DTM DESC, A.SCHD_SEQ) AS rn
        </if>
        FROM CNET_LECT_SCHD_INFO A
        INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
        INNER JOIN CNET_LECT_INFO C ON (C.LECT_SER = B.LECT_SER)
        INNER JOIN CNET_MBR_INFO D ON (D.MBR_NO = C.LECTR_MBR_NO)
         LEFT OUTER JOIN CNET_MBR_JOB_INFO F ON (F.MBR_NO = C.LECTR_MBR_NO)
        WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(A.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101534')">
                    AND C.LECT_TARGT_CD IN ('101534', '101537' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101535')">
                    AND C.LECT_TARGT_CD IN ('101535', '101537' ,'101538', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101536')">
                    AND C.LECT_TARGT_CD IN ('101536', '101538' ,'101539', '101540')
                </when>
                <otherwise>
                    AND C.LECT_TARGT_CD = #{schoolGrd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                AND TO_DATE(A.LECT_START_TIME,'HH24MI') >= TO_DATE(#{lectTime},'HH24MI')
             ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND C.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND A.LECT_STAT_CD = #{lectStatCd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mentorType)">
            AND D.MBR_CUALF_CD = #{mentorType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                    AND (C.LECTR_NM LIKE '%' || #{searchKey} || '%' OR F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%' OR F.JOB_NM LIKE '%' || #{searchKey} || '%' OR C.LECT_TITLE LIKE '%' || #{searchKey} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                    AND F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                    AND F.JOB_NM LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                    AND C.LECT_TITLE LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                    AND C.LECTR_NM LIKE '%' || #{searchKey} || '%'
                </when>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101500')"> <!-- 그룹관리자일 경우 -->
            AND C.LECTR_MBR_NO IN (
                                   SELECT TARGT_MBR_NO
                                     FROM CNET_MBR_REL_MAPP
                                    WHERE REG_MBR_NO IN (SELECT TARGT_MBR_NO
                                                           FROM CNET_MBR_REL_MAPP
                                                          WHERE REG_MBR_NO IN (SELECT MBR_NO
                                                                                 FROM CNET_MBR_INFO
                                                                                WHERE POS_CO_NO = (SELECT POS_CO_NO
                                                                                                     FROM CNET_MBR_INFO
                                                                                                    WHERE MBR_NO = #{mbrNo})))
                                   )
        </if>
    </select>

    <!-- 관리자 수업현황 학교목록조회-->
    <select id="excelDownSchoolList" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
    SELECT '['||TRIM(C.SIDO_NM||' '||C.SGGU_NM)||'] '||C.SCH_NM|| ' ('||D.MOBILE||')' AS SCH_NM, B.CLAS_ROOM_NM, C.SCH_NO
      FROM CNET_LECT_APPL_INFO A
        INNER JOIN CNET_CLAS_ROOM_INFO B ON A.CLAS_ROOM_SER = B.CLAS_ROOM_SER
        INNER JOIN CNET_SCH_INFO C ON B.SCH_NO = C.SCH_NO
        INNER JOIN CNET_MBR_INFO D
                ON A.APPL_MBR_NO = D.MBR_NO
     WHERE A.APPL_STAT_CD IN ('101576', '101577')
       AND A.LECT_SER = #{lectSer}
       AND A.LECT_TIMS = #{lectTims}
    </select>

    <!-- 관리자 수업현황 학교목록조회-->
    <select id="excelDownStandBySchoolList" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        SELECT '['||TRIM(C.SIDO_NM||' '||C.SGGU_NM)||'] '||C.SCH_NM|| ' ('||D.MOBILE||')' AS SCH_NM, B.CLAS_ROOM_NM, C.SCH_NO
        FROM CNET_LECT_APPL_INFO A
        INNER JOIN CNET_CLAS_ROOM_INFO B ON A.CLAS_ROOM_SER = B.CLAS_ROOM_SER
        INNER JOIN CNET_SCH_INFO C ON B.SCH_NO = C.SCH_NO
        INNER JOIN CNET_MBR_INFO D
                ON A.APPL_MBR_NO = D.MBR_NO
        WHERE A.APPL_STAT_CD = '101575'
        AND A.LECT_SER = #{lectSer}
        AND A.LECT_TIMS = #{lectTims}
    </select>

    <!-- 관리자 수업현황 수업 신청 최초 여부-->
    <select id="excelLectureFirstSchoolText" parameterType="kr.or.career.mentor.domain.SchInfo" resultType="String">
        SELECT DECODE(COUNT(1), 0, '최초', '')
        FROM CNET_LECT_APPL_INFO A
        , CNET_LECT_SCHD_INFO B
        , CNET_CLAS_ROOM_INFO C
        WHERE A.LECT_SER = B.LECT_SER
        AND A.LECT_TIMS = B.LECT_TIMS
        AND A.APPL_STAT_CD IN ('101575', '101576', '101577')
        AND B.LECT_STAT_CD IN ('101549', '101550', '101551')
        AND A.CLAS_ROOM_SER = C.CLAS_ROOM_SER
        AND C.SCH_NO = #{schNo}
    </select>

    <resultMap id="resultListLectTimsInfoByAdmin" type="kr.or.career.mentor.domain.LectureInfomationDTO" autoMapping="true">
        <id column="LECT_SER" property="lectSer"></id>
        <id column="LECT_TIMS" property="lectTims"></id>
        <collection property="lectSchdInfoList" column="{lectSer=LECT_SER,lectTims=LECT_TIMS}" javaType="java.util.ArrayList" ofType="resultListLectSchdInfoByAdmin" select="listLectSchdInfoByAdmin"/>
    </resultMap>

    <resultMap id="resultListLectSchdInfoByAdmin" type="kr.or.career.mentor.domain.LectSchdInfo" autoMapping="true">
        <id column="LECT_SER" property="lectSer"></id>
        <id column="LECT_TIMS" property="lectTims"></id>
        <id column="SCHD_SEQ" property="schdSeq"></id>
    </resultMap>

    <!-- 관리자포탈 수업상세 일시정보 목록조회 -->
    <select id="listLectTimsInfoByAdmin" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultListLectTimsInfoByAdmin">
        /* LectureInfomationMapper.xml 설명 : 관리자포탈 수업상세 일시정보 목록조회, ID : listLectTimsInfoByAdmin, 작성일 : 2015.11.05 */
        /* paging */
        SELECT
                T.LECT_SER
              , T.LECT_TIMS
              , T.APPL_CNT
              , T.MAX_APPL_CNT
              , T.LECTURE_CNT
              , T.EXPS_YN
              , ROW_NUMBER() OVER(ORDER BY T.LECT_TIME DESC) AS RN
        /* paging */
          FROM (
                SELECT  B.LECT_SER
                      , B.LECT_TIMS
                      , B.EXPS_YN
                      , ( SELECT COUNT(*) FROM CNET_LECT_APPL_INFO Z WHERE Z.LECT_SER = B.LECT_SER AND Z.LECT_TIMS = B.LECT_TIMS AND Z.APPL_STAT_CD IN ('101576','101577') ) AS APPL_CNT
                      , A.MAX_APPL_CNT
                      , ( SELECT MIN(Z.LECT_DAY || Z.LECT_START_TIME) FROM CNET_LECT_SCHD_INFO Z WHERE Z.LECT_SER = B.LECT_SER AND Z.LECT_TIMS = B.LECT_TIMS ) AS LECT_TIME
                      , ( SELECT SUM(CASE WHEN A.LECT_TYPE_CD = '101529' THEN 1
                                          WHEN A.LECT_TYPE_CD = '101530' THEN 1
                                          WHEN A.LECT_TYPE_CD = '101531' THEN 1
                                          WHEN A.LECT_TYPE_CD = '101532' THEN 2
                                                                              /*
                                                                              CASE WHEN ( (TO_DATE(Z.LECT_END_TIME, 'HH24MI') - TO_DATE(Z.LECT_START_TIME, 'HH24MI')) * 24 * 60 ) >= 120 THEN 2
                                                                                   ELSE 1
                                                                              END
                                                                              */
                                          ELSE 0 END)
                            FROM CNET_LECT_SCHD_INFO Z
                           WHERE Z.LECT_SER = B.LECT_SER AND Z.LECT_TIMS = B.LECT_TIMS ) AS LECTURE_CNT
                  FROM CNET_LECT_INFO A
                 INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER)
                 WHERE 1 = 1
                   AND B.LECT_SER = #{lectSer}
                ) T
    </select>

    <select id="listLectSchdInfoByAdmin" resultMap="resultListLectSchdInfoByAdmin">
        SELECT
                A.LECT_SER
              , A.LECT_TIMS
              , A.SCHD_SEQ
              , A.LECT_DAY
              , A.LECT_START_TIME
              , A.LECT_END_TIME
              , A.LECT_STAT_CD
              , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM
              , SUBSTR (NUMTODSINTERVAL(TO_DATE(A.LECT_END_TIME, 'HH24MI') - TO_DATE(A.LECT_START_TIME, 'HH24MI'), 'DAY'), 12, 5)AS LECTURE_TIME
          FROM CNET_LECT_SCHD_INFO A
         WHERE LECT_SER = #{lectSer}
           AND LECT_TIMS = #{lectTims}
         ORDER BY A.LECT_DAY, A.LECT_START_TIME
    </select>

    <!-- 수업신청정보 조회(IN조건) -->
    <select id="listLectInApplInfo" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectApplInfo">
        <include refid="selectLectApplInfo"/>
        AND A.LECT_SER = #{lectSer}
        AND A.LECT_TIMS = #{lectTims}
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applStatCd)">
        AND A.APPL_STAT_CD IN
            <foreach item="applStatCds" index="index" collection="applStatCds" open="(" close=")" separator="," >
                #{applStatCds}
            </foreach>
        </if>
    </select>

    <!-- 수업신청목록 조회 -->
    <select id="selectApplSchoolList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT  B.NM AS TCHR_NM,
                B.MBR_NO AS TCHR_MBR_NO,
                C.SCH_NO,
                C.SCH_NM,
                A.CLAS_ROOM_SER,
                A.CLAS_ROOM_NM,
                E.GRP_NM, E.GRP_NO,
                F.SET_SER, NVL(G.CLAS_PERM_CNT, F.CLAS_CNT) AS APPL_CNT,
                ROW_NUMBER() OVER(ORDER BY B.NM) AS RN
        FROM    CNET_CLAS_ROOM_INFO A
                    INNER JOIN CNET_CLAS_ROOM_REG_REQ_HIST H
                        ON (A.CLAS_ROOM_SER = H.CLAS_ROOM_SER AND H.REG_STAT_CD = '101526')
                    INNER JOIN CNET_MBR_INFO B
                        ON (H.REQ_MBR_NO = B.MBR_NO
                            AND B.MBR_CUALF_CD IN ('100214','100215')
                            AND B.MBR_STAT_CD = '100862'
                            )
                    INNER JOIN CNET_SCH_INFO C ON A.SCH_NO = C.SCH_NO
                    INNER JOIN CNET_SCH_GRP_MAPP D ON A.SCH_NO = D.SCH_NO
                    INNER JOIN CNET_BIZ_GRP_INFO E ON D.GRP_NO = E.GRP_NO
                    INNER JOIN CNET_BIZ_SET_INFO F ON E.GRP_NO = F.SET_TARGT_NO
                    LEFT OUTER JOIN CNET_LECT_APPL_CNT G ON (G.SET_SER = F.SET_SER AND A.SCH_NO = G.SCH_NO)
        WHERE 1=1
        <foreach item="lectDays" index="index" collection="lectDays">
            AND TO_DATE(#{lectDays}, 'YYYYMMDD') BETWEEN TO_DATE(F.CLAS_START_DAY, 'YYYYMMDD') AND TO_DATE(F.CLAS_END_DAY, 'YYYYMMDD')
        </foreach>

        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrNm)">
            AND B.NM LIKE '%' || #{mbrNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            AND C.SCH_CLASS_CD = #{schoolGrd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrId)">
            AND B.ID LIKE '%' || #{mbrId} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrType)">
            AND B.MBR_CUALF_CD = #{mbrType}
        </if>
    </select>

    <!-- 수업시간이 겹치는 수업이 존재하는지 조회 -->
    <select id="retrieveLectureTimeOverlap" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        <![CDATA[
        /* LectureInfomationMapper.xml 설명 : 수업시간이 겹치는 수업이 존재하는지 조회, ID : retrieveLectureTimeOverlap, 작성일 : 2015.11.16 */
        SELECT
                 B.LECT_SER
               , B.LECT_TITLE
               , A.LECT_STAT_CD
               , (SELECT Z.CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '' AND Z.CD = A.LECT_STAT_CD) AS LECT_STAT_CD_NM
               , A.LECT_DAY
               , A.LECT_START_TIME
               , A.LECT_END_TIME
          FROM CNET_LECT_SCHD_INFO A
         INNER JOIN CNET_LECT_INFO B ON (B.LECT_SER = A.LECT_SER)
         WHERE 1 = 1
           AND B.LECTR_MBR_NO = #{regMbrNo}
           AND A.LECT_DAY = Regexp_Replace(#{lectDay}, '[[:punct:]]', '')
           AND A.LECT_START_TIME < #{lectEndTime}
           AND A.LECT_END_TIME > #{lectStartTime}
           AND A.LECT_STAT_CD IN ('101542','101543','101548','101549','101550','101551','101552')
        ]]>
    </select>

    <!-- 수업상태현황 카운트 -->
    <select id="lectureStatusCnt" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT COUNT(*) AS LECT_STAT_CNT,
               A.LECT_STAT_CD
          FROM CNET_LECT_SCHD_INFO A
         INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
         INNER JOIN CNET_LECT_INFO C ON (C.LECT_SER = B.LECT_SER)
         INNER JOIN CNET_MBR_INFO D ON (D.MBR_NO = C.LECTR_MBR_NO)
          LEFT JOIN CNET_MBR_JOB_INFO F ON (F.MBR_NO = C.LECTR_MBR_NO)
         WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(A.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101534')">
                    AND C.LECT_TARGT_CD IN ('101534', '101537' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101535')">
                    AND C.LECT_TARGT_CD IN ('101535', '101537' ,'101538', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101536')">
                    AND C.LECT_TARGT_CD IN ('101536', '101538' ,'101539', '101540')
                </when>
                <otherwise>
                    AND C.LECT_TARGT_CD = #{schoolGrd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                AND TO_DATE(A.LECT_START_TIME,'HH24MI') >= TO_DATE(#{lectTime},'HH24MI')
             ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND C.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND A.LECT_STAT_CD = #{lectStatCd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mentorType)">
            AND D.MBR_CUALF_CD = #{mentorType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                    AND (C.LECTR_NM LIKE '%' || #{searchKey} || '%' OR F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%' OR F.JOB_NM LIKE '%' || #{searchKey} || '%' OR C.LECT_TITLE LIKE '%' || #{searchKey} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                    AND F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                    AND F.JOB_NM LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                    AND C.LECT_TITLE LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                    AND C.LECTR_NM LIKE '%' || #{searchKey} || '%'
                </when>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101500')"> <!-- 그룹관리자일 경우 -->
              AND C.LECTR_MBR_NO IN (
                                     SELECT TARGT_MBR_NO
                                       FROM CNET_MBR_REL_MAPP
                                      WHERE REG_MBR_NO IN (SELECT TARGT_MBR_NO
                                                             FROM CNET_MBR_REL_MAPP
                                                            WHERE REG_MBR_NO IN (SELECT MBR_NO
                                                                                   FROM CNET_MBR_INFO
                                                                                  WHERE POS_CO_NO = (SELECT POS_CO_NO
                                                                                                       FROM CNET_MBR_INFO
                                                                                                      WHERE MBR_NO = #{mbrNo})))
                                     )
        </if>
         GROUP BY A.LECT_STAT_CD
    </select>

    <select id="secessionCheck" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="java.lang.Integer">
        SELECT COUNT(*) AS CNT
          FROM CNET_LECT_SCHD_INFO A
         INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
         INNER JOIN CNET_LECT_INFO C ON (C.LECT_SER = B.LECT_SER)
         WHERE 1 = 1
           AND C.LECTR_MBR_NO = #{mbrNo}
           AND A.LECT_STAT_CD IN ('101543', '101546', '101548', '101549', '101550')
        <!-- 수강모집 , 모집취소요청 , 수업예정 , 수업대기 , 수업중 -->
    </select>

    <select id="listJobStatistics" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        select  DECODE(t.cd_lv, 1, t.cd_nm, '') AS LEV1
               ,DECODE(t.cd_lv, 2, t.cd_nm, '') AS LEV2
               ,DECODE(t.cd_lv, 3, t.cd_nm, '') AS LEV3
               ,(SELECT
                        COUNT(sMji.mbr_no)
                  FROM cnet_job_clsf_cd sJcc
                  LEFT JOIN cnet_job_info sJi ON (sJi.job_clsf_cd = sJcc.cd)
                  LEFT JOIN cnet_mbr_job_info sMji ON (sJi.job_no = sMji.job_no)
                  LEFT JOIN cnet_mbr_info sMi ON (sMji.mbr_no = sMi.mbr_no)
                 WHERE 1 = 1
                   AND sMi.mbr_class_cd = '101505'
                   AND sMi.mbr_stat_cd = '100862'
                   AND sJcc.cd_lv = 3
                 START WITH sJcc.cd = t.cd
               CONNECT BY NOCYCLE PRIOR sJcc.cd = sJcc.sup_cd) as mentor_cnt
               ,(SELECT
                        COUNT(*)
                   FROM cnet_job_clsf_cd sJcc
                   LEFT JOIN cnet_job_info sJi ON (sJi.job_clsf_cd = sJcc.cd)
                   LEFT JOIN cnet_mbr_job_info sMji ON (sJi.job_no = sMji.job_no)
                   LEFT JOIN cnet_mbr_info sMi ON (sMji.mbr_no = sMi.mbr_no)
                   LEFT JOIN cnet_lect_info sCl ON (sCl.lectr_mbr_no = sMi.mbr_no)
                   LEFT JOIN cnet_lect_tims_info sClm ON (sCl.lect_ser = sClm.lect_ser)
                   LEFT JOIN cnet_lect_schd_info sCls ON (sCls.lect_ser = sClm.lect_ser and sCls.lect_tims = sClm.lect_tims)
                  WHERE 1 = 1
                    AND sMi.mbr_class_cd = '101505'
                    AND sMi.mbr_stat_cd = '100862'
                    AND sJcc.cd_lv = 3
                    AND sCls.lect_stat_cd = '101543'
                  START WITH sJcc.cd = t.cd
                CONNECT BY NOCYCLE PRIOR sJcc.cd = sJcc.sup_cd) as lecture_cnt
        from(
                select a.cd_nm, a.cd, a.cd_lv
                 from cnet_job_clsf_cd a
                 where 1=1
                 START WITH cd_lv = 1
               CONNECT BY NOCYCLE PRIOR a.cd=a.sup_cd
                 ORDER SIBLINGS BY a.DISP_SEQ ) t
        WHERE T.CD_LV IN (1, 2, 3)
    </select>

    <select id="listLectStatistics" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
         select          t.lect_day
                        ,NVL(SUM(DECODE(t.LECT_TARGT_CD,'101534',1,0)),0) AS TC_101534
                        ,NVL(SUM(DECODE(t.LECT_TARGT_CD,'101535',1,0)),0) AS TC_101535
                        ,NVL(SUM(DECODE(t.LECT_TARGT_CD,'101536',1,0)),0) AS TC_101536
                        ,NVL(SUM(DECODE(t.LECT_TARGT_CD,'101537',1,0)),0) AS TC_101537
                        ,NVL(SUM(DECODE(t.LECT_TARGT_CD,'101538',1,0)),0) AS TC_101538
                        ,NVL(SUM(DECODE(t.LECT_TARGT_CD,'101539',1,0)),0) AS TC_101539
                        ,NVL(SUM(DECODE(t.LECT_TARGT_CD,'101540',1,0)),0) AS TC_101540
                        ,SUM(CASE WHEN t.LECT_TARGT_CD = '101534' THEN 1
                                  WHEN t.LECT_TARGT_CD = '101537' THEN 1
                                  WHEN t.LECT_TARGT_CD = '101539' THEN 1
                                  WHEN t.LECT_TARGT_CD = '101540' THEN 1
                              ELSE 0
                         END) AS Elementary_School
                        ,SUM(CASE WHEN t.LECT_TARGT_CD = '101535' THEN 1
                                  WHEN t.LECT_TARGT_CD = '101537' THEN 1
                                  WHEN t.LECT_TARGT_CD = '101538' THEN 1
                                  WHEN t.LECT_TARGT_CD = '101540' THEN 1
                              ELSE 0
                        END) AS Middle_school
                        ,SUM(CASE WHEN t.LECT_TARGT_CD = '101536' THEN 1
                                  WHEN t.LECT_TARGT_CD = '101538' THEN 1
                                  WHEN t.LECT_TARGT_CD = '101539' THEN 1
                                  WHEN t.LECT_TARGT_CD = '101540' THEN 1
                                  ELSE 0
                             END) AS HIGH_school
        from(
                select
                        a.lect_day, c.lect_targt_cd
                 from cnet_lect_schd_info a
                inner join cnet_lect_tims_info b on (a.lect_ser = b.lect_ser and a.lect_tims = b.lect_tims)
                inner join cnet_lect_info c on (a.lect_ser = c.lect_ser)
               where c.lect_stat_cd in ('101543', '101548', '101549', '101550')
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
                 AND TO_DATE(A.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
            </if>
        ) t
        group by t.lect_day
        order by t.lect_day ASC
    </select>

    <select id="listJobStatisticsByLv1" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
    <![CDATA[
        SELECT
                T.CD as lectrJobNo
                ,DECODE(T.CD_LV, 1, T.CD_NM, '') AS LEV1
                ,DECODE(T.CD_LV, 2, T.CD_NM, '') AS LEV2
                ,DECODE(T.CD_LV, 3, T.CD_NM, '') AS LEV3
                ,(  SELECT
                            COUNT(SMJI.MBR_NO)
                    FROM    CNET_JOB_CLSF_CD SJCC
                                LEFT JOIN CNET_JOB_INFO SJI ON (SJI.JOB_CLSF_CD = SJCC.CD)
                                LEFT JOIN CNET_MBR_JOB_INFO SMJI ON (SJI.JOB_NO = SMJI.JOB_NO)
                                LEFT JOIN CNET_MBR_INFO SMI ON (SMJI.MBR_NO = SMI.MBR_NO)
                    WHERE   1 = 1
                    AND     SMI.MBR_CLASS_CD = '101505'
                    AND     SMI.MBR_STAT_CD = '100862'
                    AND     SJCC.CD_LV >= 3
                    START WITH SJCC.CD = T.CD
                    CONNECT BY NOCYCLE PRIOR SJCC.CD = SJCC.SUP_CD
                ) AS MENTOR_CNT
               ,(   SELECT
                            COUNT(*)
                    FROM    CNET_JOB_CLSF_CD SJCC
                                LEFT JOIN CNET_JOB_INFO SJI ON (SJI.JOB_CLSF_CD = SJCC.CD)
                                LEFT JOIN CNET_MBR_JOB_INFO SMJI ON (SJI.JOB_NO = SMJI.JOB_NO)
                                LEFT JOIN CNET_MBR_INFO SMI ON (SMJI.MBR_NO = SMI.MBR_NO)
                                LEFT JOIN CNET_LECT_INFO SCL ON (SCL.LECTR_MBR_NO = SMI.MBR_NO)
                                LEFT JOIN CNET_LECT_TIMS_INFO SCLM ON (SCL.LECT_SER = SCLM.LECT_SER)
                    WHERE   1 = 1
                    AND     SMI.MBR_CLASS_CD = '101505'
                    AND     SMI.MBR_STAT_CD = '100862'
                    AND     SJCC.CD_LV >= 3
                    AND     SCLM.LECT_STAT_CD = '101543'
                    START WITH SJCC.CD = T.CD
                    CONNECT BY NOCYCLE PRIOR SJCC.CD = SJCC.SUP_CD
                ) AS LECTURE_CNT
        FROM    (
                    SELECT A.CD_NM, A.CD, A.CD_LV
                    FROM CNET_JOB_CLSF_CD A
                    WHERE A.CD_LV  = 1
                    START WITH CD = 100040
                    CONNECT BY NOCYCLE PRIOR A.CD=A.SUP_CD
                    ORDER SIBLINGS BY A.DISP_SEQ
                ) T
        UNION ALL
        SELECT  *
        FROM    (
                    SELECT
                            '' as lectrJobNo
                            ,SUM(DECODE(A.CD_LV, 1, 1, 0))||'' AS LEV1
                            ,SUM(DECODE(A.CD_LV, 2, 1, 0))||'' AS LEV2
                            ,SUM(DECODE(A.CD_LV, 3, 1, 0))||'' AS LEV3
                            ,0 AS MENTOR_CNT
                            ,0 AS LECTURE_CNT
                    FROM    CNET_JOB_CLSF_CD A
                    WHERE   A.CD_LV  >= 1
                    START WITH CD = 100040
                    CONNECT BY NOCYCLE PRIOR A.CD=A.SUP_CD
                    ORDER SIBLINGS BY A.DISP_SEQ
                )
    ]]>
    </select>

    <select id="listJobStatisticsByLv2" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
    <![CDATA[
        SELECT  DECODE(T.CD_LV, 1, T.CD_NM, '') AS LEV1
                ,DECODE(T.CD_LV, 2, T.CD_NM, '') AS LEV2
                ,DECODE(T.CD_LV, 3, T.CD_NM, '') AS LEV3
                ,(
                    SELECT
                            COUNT(SMJI.MBR_NO)
                    FROM    CNET_JOB_CLSF_CD SJCC
                                LEFT JOIN CNET_JOB_INFO SJI ON (SJI.JOB_CLSF_CD = SJCC.CD)
                                LEFT JOIN CNET_MBR_JOB_INFO SMJI ON (SJI.JOB_NO = SMJI.JOB_NO)
                                LEFT JOIN CNET_MBR_INFO SMI ON (SMJI.MBR_NO = SMI.MBR_NO)
                    WHERE 1 = 1
                    AND SMI.MBR_CLASS_CD = '101505'
                    AND SMI.MBR_STAT_CD = '100862'
                    AND SJCC.CD_LV >= 3
                    START WITH SJCC.CD = T.CD
                    CONNECT BY NOCYCLE PRIOR SJCC.CD = SJCC.SUP_CD
                ) AS MENTOR_CNT
               ,(
                    SELECT
                            COUNT(*)
                    FROM    CNET_JOB_CLSF_CD SJCC
                                LEFT JOIN CNET_JOB_INFO SJI ON (SJI.JOB_CLSF_CD = SJCC.CD)
                                LEFT JOIN CNET_MBR_JOB_INFO SMJI ON (SJI.JOB_NO = SMJI.JOB_NO)
                                LEFT JOIN CNET_MBR_INFO SMI ON (SMJI.MBR_NO = SMI.MBR_NO)
                                LEFT JOIN CNET_LECT_INFO SCL ON (SCL.LECTR_MBR_NO = SMI.MBR_NO)
                                LEFT JOIN CNET_LECT_TIMS_INFO SCLM ON (SCL.LECT_SER = SCLM.LECT_SER)
                    WHERE   1 = 1
                    AND     SMI.MBR_CLASS_CD = '101505'
                    AND     SMI.MBR_STAT_CD = '100862'
                    AND     SJCC.CD_LV >= 3
                    AND     SCLM.LECT_STAT_CD = '101543'
                    START WITH SJCC.CD = T.CD
                    CONNECT BY NOCYCLE PRIOR SJCC.CD = SJCC.SUP_CD
                ) AS LECTURE_CNT
        FROM    (
                    SELECT  A.CD_NM, A.CD, A.CD_LV
                    FROM CNET_JOB_CLSF_CD A
                    WHERE A.CD_LV  > 1
                    START WITH CD = #{jobNo}
                    CONNECT BY NOCYCLE PRIOR A.CD=A.SUP_CD
                    ORDER SIBLINGS BY A.DISP_SEQ
                ) T
    ]]>
    </select>

    <select id="getCurrentPeopleInLecture" resultType="kr.or.career.mentor.domain.PeopleInLecture">
        <![CDATA[
        SELECT  a.lect_sess_id,b.APPL_MBR_NO,b.clas_room_ser,c.lectr_mbr_no
        from    CNET_LECT_SCHD_INFO A
                    inner join cnet_lect_info c
                        on a.lect_ser = c.lect_ser
                    inner join CNET_LECT_APPL_INFO B
                        on (a.lect_ser = b.lect_ser
                            and a.lect_tims = b.lect_tims)
        where   A.LECT_STAT_CD = '101550' /*수업중*/
        and     b.appl_stat_cd in ('101576','101577')
        and     A.LECT_DAY = TO_CHAR(SYSDATE,'YYYYMMDD')
        AND     a.LECT_START_TIME = TO_CHAR(SYSDATE,'hh24mi')
        ]]>
    </select>

    <!-- 수업 차수 노출/비노출 수정 -->
    <update id="updateExpsLectureInfo" parameterType="kr.or.career.mentor.domain.LectTimsInfo">
        /* LectureInfomationMapper.xml 설명 : 수업 차수 노출/비노출 수정, ID : updateExpsLectureInfo, 작성일 : 2016.05.17 */
        UPDATE CNET_LECT_TIMS_INFO
        SET EXPS_YN      = CASE WHEN EXPS_YN = 'N' THEN 'Y' ELSE 'N' END
        WHERE 1 = 1
        AND LECT_SER  = #{lectSer}
        AND LECT_TIMS = #{lectTims}
    </update>

    <!-- 캘린더 데이터 조회 -->
    <select id="selectLectureSchCalendarInfo" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectCalendarInfo">
        SELECT
            D.STR_DAY AS DTM, TO_NUMBER(SUBSTR(D.STR_DAY, 7,2)) AS NUM_DAY
            , TO_CHAR(TO_DATE(D.STR_DAY, 'YYYYMMDD'), 'D') AS D
            <choose>
                <when test="thisMonth != null and calPreNxt != null">
                    , CASE WHEN INSTR(D.STR_DAY, TO_CHAR(ADD_MONTHS(TO_DATE(#{thisMonth},'YYYYMM'), #{calPreNxt}),'YYYYMM') ) > 0 THEN NULL ELSE 'nd' END THIS_MONTH
                </when>
                <otherwise>
                    , CASE WHEN INSTR(D.STR_DAY, TO_CHAR(SYSDATE, 'YYYYMM')) > 0 THEN NULL ELSE 'nd' END THIS_MONTH
                </otherwise>
            </choose>
            , CASE WHEN D.STR_DAY = TO_CHAR(SYSDATE, 'YYYYMMDD') THEN 'today' ELSE NULL END TO_DAY
            , COUNT(C.LECT_SER) AS TOT_CNT
            , SUM(CASE WHEN A.LECT_TARGT_CD IN (101534, 101537, 101539, 101540) THEN 1 ELSE 0 END) ELE_CNT /* 초등 */
            , SUM(CASE WHEN A.LECT_TARGT_CD IN (101535, 101537, 101538, 101540) THEN 1 ELSE 0 END) MID_CNT /* 중등 */
            , SUM(CASE WHEN A.LECT_TARGT_CD IN (101536, 101538, 101539, 101540) THEN 1 ELSE 0 END) HIGH_CNT /* 고등 */
        FROM CNET_LECT_INFO A
        INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(expsYn)">
            AND B.EXPS_YN = #{expsYn}
        </if>
        )
        INNER JOIN CNET_LECT_SCHD_INFO C ON (B.LECT_SER = C.LECT_SER AND B.LECT_TIMS = C.LECT_TIMS <!--AND C.LECT_STAT_CD = '101543' /* 수강모집 */ -->
        <if test="schdSeq != null">
            AND C.SCHD_SEQ = #{schdSeq}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND C.LECT_STAT_CD = #{lectStatCd}
        </if>
        <if test="exceptLectStatCdList != null and exceptLectStatCdList.size() > 0">
            AND C.LECT_STAT_CD NOT IN
            <foreach collection="exceptLectStatCdList" item="item" index="index" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        )
        RIGHT OUTER JOIN CNET_CAL_INFO D ON (D.STR_DAY = C.LECT_DAY)
        <choose>
            <when test="thisMonth != null and calPreNxt != null">
        WHERE D.STR_DAY BETWEEN
            TO_CHAR(TRUNC(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(#{thisMonth}, 'YYYYMM'), #{calPreNxt}), 'YYYYMM')||'01', 'YYYYMMDD'), 'D'), 'YYYYMMDD')
            AND
            TO_CHAR(TRUNC(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(#{thisMonth}, 'YYYYMM'), #{calPreNxt}), 'YYYYMM')||'01', 'YYYYMMDD')), 'D') + 6, 'YYYYMMDD')
            </when>
            <otherwise>
        WHERE D.STR_DAY BETWEEN
            TO_CHAR(TRUNC(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM')||'01', 'YYYYMMDD'), 'D'), 'YYYYMMDD')
            AND
            TO_CHAR(TRUNC(LAST_DAY(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM')||'01', 'YYYYMMDD')), 'D') + 6, 'YYYYMMDD')
            </otherwise>
        </choose>
        GROUP BY D.STR_DAY
        ORDER BY D.STR_DAY
    </select>

    <!-- 관리자 수업현황 > 수업목록 엑셀다운로드-->
    <select id="excelDownLoadLectureList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureStatusExcelDTO">
        /* LectureInfomationMapper.xml 설명 : 관리자 수업현황 > 수업목록 엑셀다운로드, ID : excelDownLoadLectureList, 작성자 : 박경준, 작성일 : 2016.05.23 */
        SELECT
            ROW_NUMBER() OVER(ORDER BY C.LECT_DAY DESC, C.LECT_START_TIME ASC) AS NO
            , A.LECT_SER||'-'||B.LECT_TIMS AS LECT_ID
            , CASE WHEN (SELECT     COUNT(1)
                        FROM    CNET_LECT_APPL_INFO Z
                        WHERE   Z.LECT_SER = C.LECT_SER
                        AND     Z.LECT_TIMS = C.LECT_TIMS
                        AND     Z.APPL_STAT_CD IN ('101576','101577')
                        GROUP BY Z.LECT_SER,Z.LECT_TIMS)  = A.MAX_APPL_CNT
                AND B.LECT_STAT_CD IN ('101543','101548')
              THEN '정원마감'
              ELSE
                (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = C.LECT_STAT_CD)
              END AS LECT_STAT_CD_NM
            , TO_CHAR(TO_DATE(C.LECT_DAY, 'YYYYMMDD'), 'YYYY-MM-DD') AS LECT_DAY
            , TO_CHAR(TO_DATE(C.LECT_START_TIME, 'HH24:MI'), 'HH24:MI')||'~'||TO_CHAR(TO_DATE(C.LECT_END_TIME, 'HH24:MI'), 'HH24:MI') AS LECT_TIME
            , (SELECT
                    CD_NM
                FROM CNET_JOB_CLSF_CD
                WHERE 1 = 1
                AND CD_LV = 1
                START WITH CD = G.JOB_CLSF_CD
                CONNECT BY NOCYCLE PRIOR SUP_CD = CD) AS LECT_JOB_CLSF_NM
            , NVL((SELECT Z.JOB_NM FROM CNET_JOB_INFO Z WHERE Z.JOB_NO = A.LECTR_JOB_NO), F.JOB_NM) AS JOB_NM
            , A.LECTR_NM
            , A.LECT_TITLE
            , CASE WHEN A.LECT_TARGT_CD IN ('101534', '101537' ,'101539', '101540') THEN '초' ELSE '' END AS ELE_TARGT
            , CASE WHEN A.LECT_TARGT_CD IN ('101535', '101537' ,'101538', '101540') THEN '중' ELSE '' END AS MID_TARGT
            , CASE WHEN A.LECT_TARGT_CD IN ('101536', '101538' ,'101539', '101540') THEN '고' ELSE '' END AS HIGH_TARGT
            , (SELECT     COUNT(1)
                FROM    CNET_LECT_APPL_INFO Z
                WHERE   Z.LECT_SER = C.LECT_SER
                AND     Z.LECT_TIMS = C.LECT_TIMS
                AND     Z.APPL_STAT_CD IN ('101576','101577') )||'/'||A.MAX_APPL_CNT AS APPL_DVC
            , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = A.LECT_TYPE_CD) AS LECT_TYPE_CD_NM
            <!--, SCHD_CNT AS LECTURE_CNT-->
            , CASE WHEN A.LECT_TYPE_CD = '101532' THEN 2 ELSE SCHD_CNT END AS LECTURE_CNT /* 블럭 일 경우는 2 */
            , (SELECT Z.MC_NM FROM CNET_MC_INFO Z WHERE Z.MC_NO = C.MC_NO) AS MC_NM /* MC명 */
            , (SELECT Z.STDO_NM FROM CNET_STDO_INFO Z WHERE Z.STDO_NO = C.STDO_NO) AS STDO_NM /* 스튜디오명 */
            , (SELECT Y.CO_NM
                FROM CNET_MBR_INFO Z
                INNER JOIN CNET_CO_INFO Y ON (Y.CO_NO = Z.POS_CO_NO)
                WHERE Z.MBR_NO = A.LECTR_MBR_NO) AS GROUP_CO_NM
        FROM CNET_LECT_INFO A
        INNER JOIN CNET_LECT_TIMS_INFO B ON (A.LECT_SER = B.LECT_SER)
        INNER JOIN (
            SELECT /* 연강의 경우 첫번째 수업 정보만 보여준다. */
                LECT_SER, LECT_TIMS, LECT_TITLE, LECT_STAT_CD, COUNT(1) AS SCHD_CNT
                , MAX(CASE WHEN SCHD_SEQ =  1 THEN LECT_DAY ELSE NULL END) AS LECT_DAY
                , MAX(CASE WHEN SCHD_SEQ =  1 THEN LECT_START_TIME ELSE NULL END) AS LECT_START_TIME
                , MAX(CASE WHEN SCHD_SEQ =  1 THEN LECT_END_TIME ELSE NULL END) AS LECT_END_TIME
                , MAX(CASE WHEN SCHD_SEQ =  1 THEN MC_NO ELSE NULL END) AS MC_NO
                , MAX(CASE WHEN SCHD_SEQ =  1 THEN STDO_NO ELSE NULL END) AS STDO_NO
            FROM CNET_LECT_SCHD_INFO
            GROUP BY LECT_SER, LECT_TIMS, LECT_TITLE, LECT_STAT_CD
        ) C ON (B.LECT_SER = C.LECT_SER AND B.LECT_TIMS = C.LECT_TIMS)
        LEFT OUTER JOIN CNET_MBR_JOB_INFO F ON (F.MBR_NO = A.LECTR_MBR_NO)
        LEFT OUTER JOIN CNET_JOB_INFO G ON (G.JOB_NO = F.JOB_NO)
        INNER JOIN CNET_MBR_INFO H ON (H.MBR_NO = A.LECTR_MBR_NO)
        WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(C.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101534')">
                    AND A.LECT_TARGT_CD IN ('101534', '101537' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101535')">
                    AND A.LECT_TARGT_CD IN ('101535', '101537' ,'101538', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101536')">
                    AND A.LECT_TARGT_CD IN ('101536', '101538' ,'101539', '101540')
                </when>
                <otherwise>
                    AND A.LECT_TARGT_CD = #{schoolGrd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                AND TO_DATE(C.LECT_START_TIME,'HH24MI') >= TO_DATE(#{lectTime},'HH24MI')
             ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND A.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND C.LECT_STAT_CD = #{lectStatCd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mentorType)">
            AND H.MBR_CUALF_CD = #{mentorType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                    AND (A.LECTR_NM LIKE '%' || #{searchKey} || '%' OR F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%' OR F.JOB_NM LIKE '%' || #{searchKey} || '%' OR A.LECT_TITLE LIKE '%' || #{searchKey} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                    AND F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                    AND F.JOB_NM LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                    AND A.LECT_TITLE LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                    AND A.LECTR_NM LIKE '%' || #{searchKey} || '%'
                </when>
            </choose>
        </if>
    </select>

    <!-- 관리자 수업현황 > 수업별 클래스 엑셀다운로드-->
    <select id="excelDownLoadLectureClassList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureStatusExcelDTO">
        /* LectureInfomationMapper.xml 설명 : 관리자 수업현황 > 수업별 클래스 엑셀다운로드, ID : excelDownLoadLectureClassList, 작성자 : 박경준, 작성일 : 2016.05.24 */
        SELECT
            ROW_NUMBER() OVER(ORDER BY A.LECT_DAY DESC, A.LECT_START_TIME ASC, A.LECT_SER DESC, A.LECT_TIMS DESC) AS NO
            , A.LECT_SER||'-'||B.LECT_TIMS AS LECT_ID
            , CASE WHEN (SELECT     COUNT(1)
                        FROM    CNET_LECT_APPL_INFO Z
                        WHERE   Z.LECT_SER = C.LECT_SER
                        AND     Z.LECT_TIMS = A.LECT_TIMS
                        AND     Z.APPL_STAT_CD IN ('101576','101577')
                        GROUP BY Z.LECT_SER,Z.LECT_TIMS)  = C.MAX_APPL_CNT
                    AND B.LECT_STAT_CD IN ('101543','101548')
                    THEN '정원마감'
                    ELSE
                        (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = A.LECT_STAT_CD)
                    END AS LECT_STAT_CD_NM
        , TO_CHAR(TO_DATE(A.LECT_DAY, 'YYYYMMDD'), 'YYYY-MM-DD') AS LECT_DAY
        , TO_CHAR(TO_DATE(A.LECT_START_TIME, 'HH24:MI'), 'HH24:MI')||'~'||TO_CHAR(TO_DATE(A.LECT_END_TIME, 'HH24:MI'), 'HH24:MI') AS LECT_TIME
        , NVL((SELECT Z.JOB_NM FROM CNET_JOB_INFO Z WHERE Z.JOB_NO = C.LECTR_JOB_NO), D.JOB_NM) AS JOB_NM
        , C.LECTR_NM
        , C.LECT_TITLE
        , (SELECT     COUNT(1)
            FROM    CNET_LECT_APPL_INFO Z
            WHERE   Z.LECT_SER = A.LECT_SER
            AND     Z.LECT_TIMS = A.LECT_TIMS
            AND     Z.APPL_STAT_CD IN ('101576','101577') )||'/'||C.MAX_APPL_CNT AS APPL_DVC
        , G.CLAS_ROOM_SER
        , G.CLAS_ROOM_NM
        , H.SIDO_NM
        , H.SGGU_NM
        , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = H.SCH_CLASS_CD) AS SCH_CLASS_NM
        , H.SCH_NO
        , H.SCH_NM AS SCHOOL_NM
        , FN_SCH_PRSN_INFO(H.SCH_NO, 'NM') AS NM
        , FN_SCH_PRSN_INFO(H.SCH_NO, 'MOBILE') AS MOBILE
        , (SELECT CD_NM FROM CNET_CODE WHERE CD = H.JOIN_CLASS)||NVL2(H.DEVICE_TYPE, '('||(SELECT CD_NM FROM CNET_CODE WHERE CD = H.DEVICE_TYPE)||')', NULL) AS JOIN_CLASS_CD_NM
        <!--, (SELECT COUNT(1) FROM CNET_LECT_APPL_INFO WHERE CLAS_ROOM_SER = G.CLAS_ROOM_SER AND APPL_STAT_CD IN ('101576', '101577')) AS LECT_CNT-->
        , (SELECT COUNT(1) FROM CNET_LECT_APPL_INFO LAI, CNET_LECT_SCHD_INFO LSI
            WHERE LAI.LECT_SER = LSI.LECT_SER AND LAI.LECT_TIMS = LSI.LECT_TIMS AND LSI.LECT_STAT_CD = '101551'
            AND LAI.CLAS_ROOM_SER = G.CLAS_ROOM_SER AND LAI.APPL_STAT_CD IN ('101576', '101577')
            ) AS LECT_CNT
        FROM CNET_LECT_SCHD_INFO A
        INNER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
        INNER JOIN CNET_LECT_INFO C ON (C.LECT_SER = B.LECT_SER)
        LEFT OUTER JOIN CNET_MBR_JOB_INFO D ON (D.MBR_NO = C.LECTR_MBR_NO)
        INNER JOIN CNET_MBR_INFO E ON (E.MBR_NO = C.LECTR_MBR_NO)
        LEFT OUTER JOIN CNET_LECT_APPL_INFO F ON (
            F.LECT_SER = A.LECT_SER
            AND F.LECT_TIMS = A.LECT_TIMS
            AND F.APPL_STAT_CD IN ('101576', '101577')
        )
        LEFT OUTER JOIN CNET_CLAS_ROOM_INFO G ON (G.CLAS_ROOM_SER = F.CLAS_ROOM_SER)
        LEFT OUTER JOIN CNET_SCH_INFO H ON (H.SCH_NO = G.SCH_NO)
        WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(A.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101534')">
                    AND C.LECT_TARGT_CD IN ('101534', '101537' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101535')">
                    AND C.LECT_TARGT_CD IN ('101535', '101537' ,'101538', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101536')">
                    AND C.LECT_TARGT_CD IN ('101536', '101538' ,'101539', '101540')
                </when>
                <otherwise>
                    AND C.LECT_TARGT_CD = #{schoolGrd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                AND TO_DATE(A.LECT_START_TIME,'HH24MI') >= TO_DATE(#{lectTime},'HH24MI')
             ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND C.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            AND A.LECT_STAT_CD = #{lectStatCd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mentorType)">
            AND E.MBR_CUALF_CD = #{mentorType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                    AND (C.LECTR_NM LIKE '%' || #{searchKey} || '%' OR D.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%' OR D.JOB_NM LIKE '%' || #{searchKey} || '%' OR C.LECT_TITLE LIKE '%' || #{searchKey} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                    AND D.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                    AND D.JOB_NM LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                    AND C.LECT_TITLE LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                    AND C.LECTR_NM LIKE '%' || #{searchKey} || '%'
                </when>
            </choose>
        </if>
    </select>



    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureTimsList
        Description : 관리자 수업 차수 현황 리스트
        author jhseo
        since 2016. 6. 30.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 6. 30.    jhseo                최초 생성
    -->
    <select id="lectureTimsList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* paging */
        SELECT   /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureTimsList */
                  LECT.LECT_SER
                , LECT.LECTR_MBR_NO
                , LECT.LECT_TITLE
                , LECT.LECT_TYPE_CD
                , LECT.LECTR_NM
                , LECT.LECT_TARGT_CD
                , SCHD.LECT_STAT_CD
                , TIMS.EXPS_YN
                , TIMS.MAX_APPL_CNT
                , TIMS.MAX_OBSV_CNT
                , TIMS.LECT_TIMS
                , SCHD.LECT_DAY
                , SCHD.LECT_START_TIME
                , SCHD.LECT_END_TIME
                , MJOB.JOB_NM
                , CO.CO_NM
                , BIZ.GRP_NM
                , (SELECT CD_NM FROM CNET_JOB_CLSF_CD Z WHERE Z.CD = MJOB.JOB_CLSF_CD) AS LECT_JOB_CLSF_NM
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = LECT.LECT_TYPE_CD) AS LECT_TYPE_CD_NM
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = SCHD.LECT_STAT_CD ) AS LECT_STAT_CD_NM
                , (SELECT MC_NM FROM CNET_MC_INFO WHERE MC_NO = SCHD.MC_NO) AS MC_NM
                , (SELECT STDO_NM FROM CNET_STDO_INFO WHERE STDO_NO = SCHD.STDO_NO) AS STDO_NM
                , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS AND APPL_CLASS_CD = '101715' AND APPL_STAT_CD IN ('101576', '101577')) AS APPL_CNT
                , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS AND APPL_CLASS_CD = '101716' AND APPL_STAT_CD IN ('101576', '101577')) AS OBSV_CNT
                , ( SELECT SUM(CASE WHEN X.LECT_TYPE_CD = '101529' THEN 1
                    WHEN X.LECT_TYPE_CD = '101530' THEN 1
                    WHEN X.LECT_TYPE_CD = '101531' THEN 1
                    WHEN X.LECT_TYPE_CD = '101532' THEN 2
                    ELSE 0 END)
                    FROM CNET_LECT_INFO X
                    INNER JOIN CNET_LECT_SCHD_INFO Z ON X.LECT_SER = Z.LECT_SER
                    WHERE Z.LECT_SER = TIMS.LECT_SER AND Z.LECT_TIMS = TIMS.LECT_TIMS
                  ) AS LECTURE_CNT  /*차감회수*/
                <!--, ROW_NUMBER() OVER(ORDER BY SCHD.LECT_DAY DESC, SCHD.LECT_START_TIME DESC) AS rn -->
                , ROW_NUMBER() OVER(ORDER BY SCHD.LECT_DAY DESC, SCHD.LECT_START_TIME ASC, LECT.LECT_SER DESC) AS rn /* 멘토포탈 메인 수업 정렬과 일치 시킴 */
        /* paging */
        FROM
                   CNET_LECT_INFO LECT
        INNER JOIN CNET_CO_INFO CO ON CO.CO_NO=LECT.LECT_CO_NO
        INNER JOIN CNET_BIZ_GRP_INFO BIZ ON BIZ.GRP_NO = LECT.LECT_GRP_NO
        INNER JOIN CNET_LECT_TIMS_INFO TIMS ON LECT.LECT_SER = TIMS.LECT_SER
        INNER JOIN CNET_LECT_SCHD_INFO SCHD ON TIMS.LECT_SER = SCHD.LECT_SER AND TIMS.LECT_TIMS = SCHD.LECT_TIMS
        LEFT  JOIN CNET_JOB_INFO MJOB ON MJOB.JOB_NO = LECT.LECTR_JOB_NO
        WHERE 1=1
        <if test="schdSeq != 0">
            AND SCHD.SCHD_SEQ = 1
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND LECT.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(schoolGrdExList)" >
            AND LECT.LECT_TARGT_CD NOT IN
            <foreach collection="schoolGrdExList" item="schoolGrdExList"   open="(" close=")" separator=",">
                #{schoolGrdExList}
            </foreach>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolEtcGrd)">
            AND LECT.LECT_TARGT_CD = #{schoolEtcGrd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTitle)">
            AND LECT.LECT_TITLE LIKE '%' || #{lectTitle} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrNm)">
            AND LECT.LECTR_NM LIKE '%' || #{lectrNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrJob)">
            AND MJOB.JOB_NM LIKE '%' || #{lectrJob} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
            AND BIZ.GRP_NM LIKE '%' || #{grpNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNm)">
            AND CO.CO_NM LIKE '%' || #{coNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(expsYn)">
            AND TIMS.EXPS_YN = #{expsYn}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(SCHD.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(lectStatCd, '101551')">
                    AND TIMS.LECT_STAT_CD IN ( '101551', '101553', '101545')
                </when>
                <otherwise>
                    AND TIMS.LECT_STAT_CD = #{lectStatCd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101500')"> <!-- 주관기관일 경우 -->
            AND LECT.GRP_NO IN (SELECT GRP_NO FROM CNET_BIZ_GRP_INFO WHERE CO_NO=(SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 수행기관일 경우 -->
            AND LECT.LECT_CO_NO = (SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>

    </select>



    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureTimsListCnt
        Description : 관리자 수업 회차 현황 카운트
        author jhseo
        since 2016. 6. 30.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 8. 12.    jhseo                최초 생성
    -->
    <select id="lectureTimsListCnt" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="integer">
        SELECT   /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureTimsListCnt */
                COUNT(LECT.LECT_SER)
        FROM
        CNET_LECT_INFO LECT
        INNER JOIN CNET_CO_INFO CO ON CO.CO_NO=LECT.LECT_CO_NO
        INNER JOIN CNET_BIZ_GRP_INFO BIZ ON BIZ.GRP_NO = LECT.LECT_GRP_NO
        INNER JOIN CNET_LECT_TIMS_INFO TIMS ON LECT.LECT_SER = TIMS.LECT_SER
        INNER JOIN CNET_LECT_SCHD_INFO SCHD ON TIMS.LECT_SER = SCHD.LECT_SER AND TIMS.LECT_TIMS = SCHD.LECT_TIMS
        LEFT  JOIN CNET_MBR_JOB_INFO MJOB ON MJOB.MBR_NO = LECT.LECTR_MBR_NO
        WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND LECT.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(schoolGrdExList)" >
            AND LECT.LECT_TARGT_CD NOT IN
            <foreach collection="schoolGrdExList" item="schoolGrdExList"   open="(" close=")" separator=",">
                #{schoolGrdExList}
            </foreach>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolEtcGrd)">
            AND LECT.LECT_TARGT_CD = #{schoolEtcGrd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTitle)">
            AND LECT.LECT_TITLE LIKE '%' || #{lectTitle} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrNm)">
            AND LECT.LECTR_NM LIKE '%' || #{lectrNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrJob)">
            AND MJOB.JOB_NM LIKE '%' || #{lectrJob} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
            AND BIZ.GRP_NM LIKE '%' || #{grpNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNm)">
            AND CO.CO_NM LIKE '%' || #{coNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(expsYn)">
            AND TIMS.EXPS_YN = #{expsYn}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(SCHD.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(lectStatCd, '101551')">
                    AND TIMS.LECT_STAT_CD IN ( '101551', '101553', '101545')
                </when>
                <otherwise>
                    AND TIMS.LECT_STAT_CD = #{lectStatCd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101500')"> <!-- 주관기관일 경우 -->
            AND LECT.GRP_NO IN (SELECT GRP_NO FROM CNET_BIZ_GRP_INFO WHERE CO_NO=(SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 수행기관일 경우 -->
            AND LECT.LECT_CO_NO = (SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>

    </select>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureTimsStatusCnt
        Description : 관리자 수업 차수 상태별 카운트 현황
        author jhseo
        since 2016. 6. 30.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 6. 30.    jhseo                최초 생성
    -->
    <select id="lectureTimsStatusCnt" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT   /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureTimsStatusCnt */
                    COUNT(*) AS LECT_STAT_CNT,
                    TIMS.LECT_STAT_CD
        FROM
                    CNET_LECT_INFO LECT
        INNER JOIN CNET_CO_INFO CO ON CO.CO_NO=LECT.LECT_CO_NO
        INNER JOIN CNET_BIZ_GRP_INFO BIZ ON BIZ.GRP_NO = LECT.LECT_GRP_NO
        INNER JOIN CNET_LECT_TIMS_INFO TIMS ON LECT.LECT_SER = TIMS.LECT_SER
        INNER JOIN CNET_LECT_SCHD_INFO SCHD ON TIMS.LECT_SER = SCHD.LECT_SER AND TIMS.LECT_TIMS = SCHD.LECT_TIMS AND SCHD.SCHD_SEQ = 1
        LEFT  JOIN CNET_MBR_JOB_INFO MJOB ON MJOB.MBR_NO = LECT.LECTR_MBR_NO
        WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND LECT.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(schoolGrdExList)" >
            AND LECT.LECT_TARGT_CD NOT IN
            <foreach collection="schoolGrdExList" item="schoolGrdExList"   open="(" close=")" separator=",">
                #{schoolGrdExList}
            </foreach>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolEtcGrd)">
            AND LECT.LECT_TARGT_CD = #{schoolEtcGrd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTitle)">
            AND LECT.LECT_TITLE LIKE '%' || #{lectTitle} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrNm)">
            AND LECT.LECTR_NM LIKE '%' || #{lectrNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrJob)">
            AND MJOB.JOB_NM LIKE '%' || #{lectrJob} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
            AND BIZ.GRP_NM LIKE '%' || #{grpNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNm)">
            AND CO.CO_NM LIKE '%' || #{coNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(expsYn)">
            AND TIMS.EXPS_YN = #{expsYn}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(SCHD.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101500')"> <!-- 주관기관일 경우 -->
            AND LECT.GRP_NO IN (SELECT GRP_NO FROM CNET_BIZ_GRP_INFO WHERE CO_NO=(SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 수행기관일 경우 -->
            AND LECT.LECT_CO_NO = (SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>
        GROUP BY TIMS.LECT_STAT_CD
    </select>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureTimsStatusCnt
        Description : 관리자 수업정보 상세조회
        author jhseo
        since 2016. 6. 30.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 6. 30.    jhseo                최초 생성
    -->
    <select id="lectureInfo" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectInfo5">
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureInfo */
                  LECT.LECT_GRP_NO
                , (SELECT SET_SER FROM CNET_BIZ_SET_INFO WHERE SET_TARGT_NO=LECT.LECT_GRP_NO) AS SET_SER
                , LECT.LECT_SER
                , BIZ.GRP_NM
                , LECT.MAX_APPL_CNT
                , LECT.MAX_OBSV_CNT
                , LECT.LECT_TITLE
                , LECT.LECT_TYPE_CD
                , LECT.LECTR_NM
                , LECT.LECT_TARGT_CD
                , LECT.LECTR_MBR_NO
                , LJOB.JOB_NM AS LECTR_JOB_NM
                , LECT.LECT_OUTLN_INFO
                , LECT.LECT_INTDC_INFO
                , LECT.LECT_SUST_INFO
                , LECT.LECT_CO_NO
                , LECT.LECT_STAT_CD
                , CO.CO_NM
                , WCO.CO_NM AS REG_CO_NM
                , NVL(UCO.CO_NM, WCO.CO_NM) AS CHG_CO_NM
                , LECT.REG_DTM
                , WMBR.NM AS REG_MBR_NM
                , NVL(LECT.CHG_DTM, LECT.REG_DTM) CHG_DTM
                , NVL(UMBR.NM, WMBR.NM) AS CHG_MBR_NM
                , (SELECT JOB_TAG_INFO FROM CNET_MBR_JOB_INFO WHERE MBR_NO = LECT.LECTR_MBR_NO) AS JOB_TAG_INFO
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = LECT.LECT_TYPE_CD) AS LECT_TYPE_CD_NM
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = LECT.LECT_STAT_CD) AS LECT_STAT_CD_NM
                , (SELECT Z.ICON_KIND_CD FROM CNET_MBR_ICON_INFO Z WHERE Z.MBR_NO = LECT.LECTR_MBR_NO AND Z.ICON_KIND_CD = '101598') AS ICON_KIND_CD
        FROM
                   CNET_LECT_INFO LECT
        INNER JOIN CNET_BIZ_GRP_INFO BIZ ON BIZ.GRP_NO = LECT.LECT_GRP_NO
        INNER JOIN CNET_CO_INFO CO ON CO.CO_NO = LECT.LECT_CO_NO
        INNER JOIN CNET_MBR_INFO WMBR ON WMBR.MBR_NO = LECT.REG_MBR_NO
        LEFT  JOIN CNET_JOB_INFO LJOB ON LJOB.JOB_NO = LECT.LECTR_JOB_NO
        LEFT  JOIN CNET_MBR_INFO UMBR ON UMBR.MBR_NO = LECT.CHG_MBR_NO
        LEFT  JOIN CNET_CO_INFO  WCO  ON WCO.CO_NO = WMBR.POS_CO_NO
        LEFT  JOIN CNET_CO_INFO  UCO  ON UCO.CO_NO = UMBR.POS_CO_NO
        WHERE
                   1=1
        AND        LECT.LECT_SER = #{lectSer}
    </select>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureInfoList
        Description : 관리자 수업정보 리스트
        author jhseo
        since 2016. 6. 30.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 14.    jhseo                최초 생성
    -->
    <select id="lectureInfoList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectInfo">
        /* paging */
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureInfoList */
                      LECT.LECT_GRP_NO
                    , LECT.LECT_SER
                    , BIZ.GRP_NM
                    , LECT.LECT_TITLE
                    , LECT.LECT_TYPE_CD
                    , LECT.LECTR_NM
                    , LECT.LECTR_MBR_NO
                    , LJOB.JOB_NM AS LECTR_JOB_NM
                    , LECTR_JOB_NO
                    , LECT.LECT_TARGT_CD
                    , LECT.LECT_OUTLN_INFO
                    , LECT.LECT_INTDC_INFO
                    , LECT.LECT_SUST_INFO
                    , LECT.LECT_CO_NO
                    , CO.CO_NM
                    , WCO.CO_NM AS REG_CO_NM
                    , NVL(UCO.CO_NM, WCO.CO_NM) AS CHG_CO_NM
                    , LECT.REG_DTM
                    , WMBR.NM AS REG_MBR_NM
                    , NVL(LECT.CHG_DTM, LECT.REG_DTM) CHG_DTM
                    , NVL(UMBR.NM, WMBR.NM) AS CHG_MBR_NM
                    , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101528' AND Z.CD = LECT.LECT_TYPE_CD) AS LECT_TYPE_CD_NM
                    , (SELECT COUNT(*) FROM CNET_LECT_TIMS_INFO WHERE LECT_SER = LECT.LECT_SER) LECT_TIMS_CNT
                    , ROW_NUMBER() OVER(ORDER BY NVL(LECT.CHG_DTM,LECT.REG_DTM) DESC) AS rn
        /* paging */
        FROM
                    CNET_LECT_INFO LECT
        INNER JOIN  CNET_BIZ_GRP_INFO BIZ ON BIZ.GRP_NO = LECT.LECT_GRP_NO
        INNER JOIN  CNET_CO_INFO CO ON CO.CO_NO = LECT.LECT_CO_NO
        INNER JOIN  CNET_MBR_INFO WMBR ON WMBR.MBR_NO = LECT.REG_MBR_NO
        LEFT  JOIN  CNET_JOB_INFO LJOB ON LJOB.JOB_NO = LECT.LECTR_JOB_NO
        LEFT  JOIN  CNET_MBR_INFO UMBR ON UMBR.MBR_NO = LECT.CHG_MBR_NO
        LEFT  JOIN  CNET_CO_INFO  WCO  ON WCO.CO_NO = WMBR.POS_CO_NO
        LEFT  JOIN  CNET_CO_INFO  UCO  ON UCO.CO_NO = UMBR.POS_CO_NO
        WHERE
                    1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND LECT.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(schoolGrdExList)" >
            AND LECT.LECT_TARGT_CD NOT IN
            <foreach collection="schoolGrdExList" item="schoolGrdExList"   open="(" close=")" separator=",">
                #{schoolGrdExList}
            </foreach>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolEtcGrd)">
            AND LECT.LECT_TARGT_CD = #{schoolEtcGrd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTitle)">
            AND LECT.LECT_TITLE LIKE '%' || #{lectTitle} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrNm)">
            AND LECT.LECTR_NM LIKE '%' || #{lectrNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrJob)">
            AND LJOB.JOB_NM LIKE '%' || #{lectrJob} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
            AND BIZ.GRP_NM LIKE '%' || #{grpNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNm)">
            AND CO.CO_NM LIKE '%' || #{coNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectMbrNo)">
            AND LECT.LECTR_MBR_NO = #{lectMbrNo}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND NVL(LECT.CHG_DTM, LECT.REG_DTM) BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101500')"> <!-- 주관기관일 경우 -->
            AND LECT.GRP_NO IN (SELECT GRP_NO FROM CNET_BIZ_GRP_INFO WHERE CO_NO=(SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 수행기관일 경우 -->
            AND LECT.LECT_CO_NO = (SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>

    </select>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureTimsSchdInfo
        Description : 관리자 수업 차수 상세조회
        author jhseo
        since 2016. 7. 04.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 04.    jhseo                최초 생성
    -->
    <select id="lectureTimsSchdInfo" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectureTimsInfo">
        /* paging */
        SELECT /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureTimsSchdInfo */
                  TIMS.LECT_SER
                , TIMS.LECT_TIMS
                , TIMS.EXPS_YN
                , TIMS.MAX_APPL_CNT
                , TIMS.MAX_OBSV_CNT
                , TIMS.LECT_STAT_CD
                , LECT_CNCL_RSN_SUST
                , TO_CHAR(CNCL_DTM, 'YYYY.MM.DD HH24:MI') AS CNCL_DTM
                , MBR.NM AS CNCL_MBR_NM
                , (SELECT CO_NM FROM CNET_CO_INFO WHERE CO_NO = MBR.POS_CO_NO) AS CNCL_CO_NM
                , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS AND APPL_CLASS_CD = '101715' AND APPL_STAT_CD IN ('101576', '101577')) AS APPL_CNT
                , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS AND APPL_CLASS_CD = '101716' AND APPL_STAT_CD IN ('101576', '101577')) AS OBSV_CNT
                , CASE WHEN
                    (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO
                                     WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS
                                     AND APPL_CLASS_CD = '101715'
                                     AND APPL_STAT_CD IN ('101576', '101577')) >= TIMS.MAX_APPL_CNT
                    AND TIMS.LECT_STAT_CD = '101543'
                  THEN '정원마감'
                  ELSE (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = TIMS.LECT_STAT_CD) END AS LECT_STAT_CD_NM
                , ( SELECT SUM(CASE WHEN X.LECT_TYPE_CD = '101529' THEN 1
                                    WHEN X.LECT_TYPE_CD = '101530' THEN 1
                                    WHEN X.LECT_TYPE_CD = '101531' THEN 1
                                    WHEN X.LECT_TYPE_CD = '101532' THEN 2
                                    ELSE 0 END)
                    FROM CNET_LECT_INFO X
                    INNER JOIN CNET_LECT_SCHD_INFO Z ON X.LECT_SER = Z.LECT_SER
                    WHERE Z.LECT_SER = TIMS.LECT_SER AND Z.LECT_TIMS = TIMS.LECT_TIMS
                  ) AS LECTURE_CNT  /*차감회수*/
        /* paging */
        FROM
                  CNET_LECT_TIMS_INFO TIMS
        LEFT JOIN CNET_MBR_INFO MBR ON MBR.MBR_NO = TIMS.CNCL_MBR_NO
        WHERE
                  LECT_SER=#{lectSer}
        AND       LECT_TIMS=#{lectTims}
    </select>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureSchdList
        Description : 관리자 수업 회차 리스트 조회
        author jhseo
        since 2016. 7. 04.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 04.    jhseo                최초 생성
    -->
    <select id="lectureSchdList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectSchdInfo">
        SELECT     /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureSchdList */
                      SCHD.LECT_SER
                    , SCHD.LECT_TIMS
                    , SCHD.LECT_STAT_CD
                    , SCHD.SCHD_SEQ
                    , TO_CHAR(TO_DATE(SCHD.LECT_DAY, 'YYYYMMDD'), 'YYYY.MM.DD') AS LECT_DAY
                    , TO_CHAR(TO_DATE(SCHD.LECT_START_TIME, 'HH24MI'), 'HH24:MI') AS LECT_START_TIME
                    , TO_CHAR(TO_DATE(SCHD.LECT_END_TIME, 'HH24MI'), 'HH24:MI') AS LECT_END_TIME
                    , ROUND(TO_CHAR(TO_DATE(SCHD.LECT_END_TIME, 'HH24MI') - TO_DATE(SCHD.LECT_START_TIME, 'HH24MI'))* (24*60)) AS  LECT_RUN_TIME
                    , SCHD.LECT_SESS_ID
                    , MC.MC_NO
                    , MC.MC_NM
                    , MC.GEN_CD
                    , STDO.STDO_NO
                    , STDO.STDO_NM
                    , LECT.LECT_TITLE
                    , LECT.LECTR_MBR_NO
                    , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = SCHD.LECT_STAT_CD) AS LECT_STAT_CD_NM
        FROM
                    CNET_LECT_SCHD_INFO SCHD
        INNER JOIN  CNET_LECT_INFO LECT ON LECT.LECT_SER = SCHD.LECT_SER
        LEFT JOIN   CNET_MC_INFO MC ON MC.MC_NO = SCHD.MC_NO AND MC.USE_YN='Y'
        LEFT JOIN   CNET_STDO_INFO STDO ON STDO.STDO_NO = SCHD.STDO_NO AND STDO.USE_YN='Y'
        WHERE
                    SCHD.LECT_SER=#{lectSer}
        AND         SCHD.LECT_TIMS=#{lectTims}
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schdSeq)">
        AND         SCHD.SCHD_SEQ=#{schdSeq}
        </if>
        ORDER BY    SCHD.SCHD_SEQ
    </select>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureApplList
        Description : 관리자 수업 신청/참관 정보 리스트
        author jhseo
        since 2016. 7. 04.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 06.    jhseo                최초 생성
    -->
    <select id="lectureApplList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureApplList */
                  SCH.SCH_NO
                , SCH.SCH_NM
                , SCH.SIDO_NM
                , SCH.SGGU_NM
                , CLAS.CLAS_ROOM_SER
                , CLAS.CLAS_ROOM_NM
                , MBR.MBR_NO AS TCHR_MBR_NO
                , MBR.NM AS TCHR_NM
                , MBR.MOBILE AS TCHR_MOBILE
                , APPL.SET_SER
                , APPL.APPL_STAT_CD
                , APPL.APPL_CLASS_CD
                , (SELECT CD_NM FROM CNET_CODE WHERE CD = MBR.MBR_CUALF_CD) AS MBR_CUALF_CD
                , TO_CHAR(APPL.REG_DTM,'YYYY.MM.DD') APPL_REG_DTM
                , (SELECT CD_NM FROM CNET_CODE WHERE CD = SCH.SCH_CLASS_CD) AS SCH_CLASS_CD_NM
                , (SELECT COUNT(*) FROM
                   CNET_CLAS_ROOM_REG_REQ_HIST S
                   INNER JOIN CNET_MBR_INFO S2 ON S.REQ_MBR_NO = S2.MBR_NO AND S2.MBR_CLASS_CD = '100858' /*일반회원*/
                   WHERE S.CLAS_ROOM_SER  = CLAS.CLAS_ROOM_SER AND S.REG_STAT_CD = '101526' /*승인상태*/
                  ) AS STDNT_CNT /*소속학생수*/
        FROM
                   CNET_LECT_APPL_INFO APPL
        INNER JOIN CNET_CLAS_ROOM_INFO CLAS ON CLAS.CLAS_ROOM_SER = APPL.CLAS_ROOM_SER
        INNER JOIN CNET_SCH_INFO SCH ON SCH.SCH_NO = CLAS.SCH_NO
        INNER JOIN CNET_MBR_INFO MBR ON MBR_NO = APPL.APPL_MBR_NO
        WHERE
                   APPL.LECT_SER = #{lectSer}
        AND        APPL.LECT_TIMS = #{lectTims}
        AND        APPL.APPL_CLASS_CD = #{applClassCd}
        AND        APPL.APPL_STAT_CD IN ('101576', '101577', '101728', '101729')
        ORDER BY APPL.REG_DTM DESC
    </select>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureOtherTimsList
        Description : 관리자 동일 수업 다른 차수 리스트
        author jhseo
        since 2016. 7. 04.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 06.    jhseo                최초 생성
    -->
    <select id="lectureOtherTimsList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultMap="resultLectTimsData">
        /* paging */
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureOtherTimsList */
                      TIMS.LECT_SER
                    , TIMS.LECT_TIMS
                    , SCHD.SCHD_SEQ
                    , TO_CHAR(TO_DATE(SCHD.LECT_DAY, 'YYYYMMDD'), 'YYYY.MM.DD') AS LECT_DAY
                    , TO_CHAR(TO_DATE(SCHD.LECT_START_TIME, 'HH24MI'), 'HH24:MI') AS LECT_START_TIME
                    , TO_CHAR(TO_DATE(SCHD.LECT_END_TIME, 'HH24MI'), 'HH24:MI') AS LECT_END_TIME
                    , ROUND(TO_CHAR(TO_DATE(SCHD.LECT_END_TIME, 'HH24MI') - TO_DATE(SCHD.LECT_START_TIME, 'HH24MI'))* (24*60)) AS  LECT_RUN_TIME
                    , MC.MC_NM
                    , STDO.STDO_NM
                    , TIMS.EXPS_YN
                    , TIMS.MAX_APPL_CNT
                    , TIMS.MAX_OBSV_CNT
                    , TIMS.LECT_STAT_CD
                    , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS AND APPL_CLASS_CD = '101715' AND APPL_STAT_CD IN ('101576', '101577')) AS APPL_CNT
                    , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS AND APPL_CLASS_CD = '101716' AND APPL_STAT_CD IN ('101576', '101577')) AS OBSV_CNT
                    , CASE WHEN
                            (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO
                            WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS
                            AND APPL_STAT_CD IN ('101576', '101577')) >= (TIMS.MAX_APPL_CNT + TIMS.MAX_OBSV_CNT) AND TIMS.LECT_STAT_CD = '101543'
                      THEN '정원마감'
                      ELSE (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = TIMS.LECT_STAT_CD)
                      END AS LECT_STAT_CD_NM
                    , ( SELECT SUM(CASE WHEN X.LECT_TYPE_CD = '101529' THEN 1
                        WHEN X.LECT_TYPE_CD = '101530' THEN 1
                        WHEN X.LECT_TYPE_CD = '101531' THEN 1
                        WHEN X.LECT_TYPE_CD = '101532' THEN 2
                        ELSE 0 END)
                        FROM CNET_LECT_INFO X
                        INNER JOIN CNET_LECT_SCHD_INFO Z ON X.LECT_SER = Z.LECT_SER
                        WHERE Z.LECT_SER = TIMS.LECT_SER AND Z.LECT_TIMS = TIMS.LECT_TIMS
                      ) AS LECTURE_CNT  /*차감회수*/
                    , ROW_NUMBER() OVER(ORDER BY TIMS.LECT_TIMS DESC) AS rn
        /* paging */
        FROM
                   CNET_LECT_TIMS_INFO TIMS
        INNER JOIN CNET_LECT_SCHD_INFO SCHD ON SCHD.LECT_SER = TIMS.LECT_SER AND SCHD.LECT_TIMS = TIMS.LECT_TIMS AND SCHD.SCHD_SEQ = 1
        LEFT  JOIN CNET_MC_INFO MC ON MC.MC_NO = SCHD.MC_NO AND MC.USE_YN = 'Y'
        LEFT  JOIN CNET_STDO_INFO STDO ON STDO.STDO_NO = SCHD.STDO_NO AND STDO.USE_YN = 'Y'
        WHERE
                    TIMS.LECT_SER = #{lectSer}
        <if test="lectTims != null and lectTims != 0">
        AND         NOT TIMS.LECT_TIMS=#{lectTims}
        </if>
    </select>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectStatTimsInfo
        Description : 관리자 수업 취소 차수정보 테이블 업데이트
        author jhseo
        since 2016. 7. 11.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 11.    jhseo                최초 생성
    -->
    <update id="updateLectStatTimsInfo" parameterType="kr.or.career.mentor.domain.LectTimsInfo">
        UPDATE  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectStatTimsInfo */
                CNET_LECT_TIMS_INFO
        SET
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
                LECT_STAT_CD = #{lectStatCd},
            <if test="@org.apache.commons.lang3.StringUtils@equals(lectStatCd, '101547')">
                EXPS_YN = 'N',
            </if>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectCnclRsnSust)">
                LECT_CNCL_RSN_SUST = #{lectCnclRsnSust},
        </if>
                CNCL_DTM = SYSDATE,
                CNCL_MBR_NO = #{cnclMbrNo}
        WHERE
                LECT_SER = #{lectSer}
        AND     LECT_TIMS = #{lectTims}
    </update>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectStatSchdList
        Description : 관리자 수업 취소 회차정보 테이블 업데이트
        author jhseo
        since 2016. 7. 11.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 11.    jhseo                최초 생성
    -->
    <update id="updateLectStatSchdList" parameterType="kr.or.career.mentor.domain.LectTimsInfo">
        UPDATE  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectStatSchdList */
                    CNET_LECT_SCHD_INFO
        SET
                    LECT_STAT_CD = #{lectStatCd},
                    CHG_DTM = SYSDATE,
                    CHG_MBR_NO = #{cnclMbrNo}
        WHERE
                    LECT_SER = #{lectSer}
        AND         LECT_TIMS = #{lectTims}
    </update>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectStatApplCntList
        Description : 관리자 수업 취소후 차감회수 복구 처리
        author jhseo
        since 2016. 7. 11.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 11.    jhseo                최초 생성
    -->
    <update id="updateLectStatApplCntList" parameterType="kr.or.career.mentor.domain.LectApplInfo">
        UPDATE
                    CNET_LECT_APPL_CNT
        SET
                      CLAS_PERM_CNT = CLAS_PERM_CNT + #{clasApplCnt}
                    , CLAS_APPL_CNT = CLAS_PERM_CNT  - #{clasApplCnt}
        WHERE
                    SCH_NO = #{schNo}
        AND         SET_SER = #{setSer}
    </update>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectStatApplList
        Description : 관리자 수업 취소 수업 신청정보 테이블 업데이트
        author jhseo
        since 2016. 7. 11.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 11.    jhseo                최초 생성
    -->
    <update id="updateLectStatApplList" parameterType="kr.or.career.mentor.domain.LectTimsInfo">
        UPDATE      /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectStatApplList */
                    CNET_LECT_APPL_INFO
        SET
                    APPL_STAT_CD = #{applStatCd},
                    CHG_DTM = SYSDATE,
                    CHG_MBR_NO = #{cnclMbrNo}
        WHERE
                    LECT_SER = #{lectSer}
        AND         LECT_TIMS = #{lectTims}
        <if test="clasRoomSer != null and clasRoomSer != 0">
        AND         CLAS_ROOM_SER = #{clasRoomSer}
        </if>
    </update>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureMcList
        Description : 관리자 수업 참여 가능 MC 리스트
        author jhseo
        since 2016. 7. 04.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 11.    jhseo                최초 생성
    -->
    <select id="lectureMcList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.McInfo">
        SELECT      /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureMcList */
                      MC.MC_NO
                    , MC.MC_NM
                    , (SELECT CD_NM FROM CNET_CODE WHERE CD=MC.GEN_CD) GEN_CD
                    , CO.CO_NM AS MNGR_POS_NM
        FROM
                    CNET_MC_INFO MC
        LEFT JOIN   CNET_CO_INFO CO ON CO.CO_NO = MC.POS_CO_NO AND CO.USE_YN='Y'
        WHERE
                    MC.USE_YN='Y'
        AND NOT EXISTS( SELECT 1 FROM CNET_LECT_SCHD_INFO WHERE MC_NO=MC.MC_NO AND LECT_DAY = #{lectDay}
                        AND (LECT_START_TIME BETWEEN #{searchStDate} and #{searchEndDate} OR LECT_END_TIME BETWEEN #{searchStDate} and #{searchEndDate})
                        AND  LECT_STAT_CD IN (101543,101548,101549,101550)
                       )
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mcNm)">
        AND       MC_NM LIKE '%' || #{mcNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNm)">
        AND       CO_NM LIKE '%' || #{coNm} || '%'
        </if>
        ORDER BY MC.MC_NM
    </select>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureStdoList
        Description : 관리자 수업 수정 스튜디오 리스트
        author jhseo
        since 2016. 7. 04.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 11.    jhseo                최초 생성
    -->
    <select id="lectureStdoList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.StdoInfo">
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureStdoList */
                      STDO.STDO_NO
                    , STDO.STDO_NM
                    , STDO.LOCA_ADDR
                    , CO.CO_NM AS POS_CO_NM
        FROM
                    CNET_STDO_INFO STDO
        LEFT JOIN   CNET_CO_INFO CO ON CO.CO_NO = STDO.POS_CO_NO AND CO.USE_YN='Y'
        WHERE
                    STDO.USE_YN='Y'
        AND NOT EXISTS( SELECT 1 FROM CNET_LECT_SCHD_INFO WHERE STDO_NO=STDO.STDO_NO AND LECT_DAY = #{lectDay}
                        AND (LECT_START_TIME BETWEEN #{searchStDate} and #{searchEndDate} OR LECT_END_TIME BETWEEN #{searchStDate} and #{searchEndDate})
                        AND  LECT_STAT_CD IN (101543,101548,101549,101550)
                      )
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(stdoNm)">
        AND       STDO.STDO_NM LIKE '%' || #{stdoNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNm)">
        AND       CO.CO_NM LIKE '%' || #{coNm} || '%'
        </if>
        ORDER BY STDO.STDO_NM
    </select>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectMcStdoInfo
        Description : 관리자 수업 MC/스튜디오 수정
        author jhseo
        since 2016. 7. 11.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 12.    jhseo                최초 생성
    -->
    <update id="updateLectMcStdoInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo">
        UPDATE   /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectMcStdoInfo */
                CNET_LECT_SCHD_INFO
        SET
                MC_NO = #{mcNo},
                STDO_NO = #{stdoNo},
                CHG_DTM = SYSDATE,
                CHG_MBR_NO = #{chgMbrNo}
        WHERE
                LECT_SER = #{lectSer}
        AND     LECT_TIMS = #{lectTims}
        AND     SCHD_SEQ = #{schdSeq}
    </update>

    <!--
         Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectTimsBizCnt
         Description : 차수 그룹 허용 신청수 수정
         author jhseo
         since 2016. 7. 11.
         Modification Information
            since          author              description
         ===========    =============    ===========================
         2016. 7. 12.    jhseo                최초 생성
     -->
    <update id="updateLectTimsBizCnt" parameterType="kr.or.career.mentor.domain.LectTimsInfo">
        UPDATE   /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectTimsBizCnt */
                CNET_LECT_TIMS_INFO
        SET
                MAX_APPL_CNT = #{maxApplCnt},
                MAX_OBSV_CNT = #{maxObsvCnt}
        WHERE
                LECT_SER = #{lectSer}
        AND     LECT_TIMS = #{lectTims}
    </update>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureApplClasList
        Description : 관리자 수업 수동 신청 CLASS 리스트
        author jhseo
        since 2016. 7. 13.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 13.    jhseo                최초 생성
    -->
    <select id="lectureApplClasList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.ClasRoomInfo">
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureApplClasList */
                      A.CLAS_ROOM_CUALF_CD
                    , (SELECT CD_NM FROM CNET_CODE WHERE CD=A.CLAS_ROOM_CUALF_CD) TCHR_MBR_CLASS_NM
                    , D.NM AS TCHR_MBR_NM
                    , D.MBR_NO AS TCHR_MBR_NO
                    , C.SCH_CLASS_CD AS SCH_GRD_CD
                    , (SELECT CD_NM FROM CNET_CODE WHERE CD=C.SCH_CLASS_CD) SCH_GRD_NM
                    , C.SCH_NO
                    , C.SCH_NM
                    , B.CLAS_ROOM_SER
                    , B.CLAS_ROOM_NM
                    , NVL(E.CLAS_PERM_CNT,0) AS APPLY_CNT
                    , E.SET_SER
        FROM
                    CNET_CLAS_ROOM_REG_REQ_HIST A
        INNER JOIN  CNET_CLAS_ROOM_INFO B ON B.CLAS_ROOM_SER = A.CLAS_ROOM_SER AND B.USE_YN = 'Y' AND SYSDATE BETWEEN VALID_START_DAY AND VALID_END_DAY AND B.DEL_YN = 'N'
        INNER JOIN  CNET_SCH_INFO C ON C.SCH_NO = B.SCH_NO AND C.USE_YN = 'Y'
        INNER JOIN  CNET_MBR_INFO D ON D.MBR_NO = A.REQ_MBR_NO AND D.MBR_STAT_CD = '100862'
        LEFT  JOIN  (
                        SELECT
                                   Z.SCH_NO
                                 , NVL(W.CLAS_PERM_CNT, V.CLAS_CNT) AS CLAS_PERM_CNT
                                 , V.SET_SER
                        FROM       CNET_LECT_INFO X
                        INNER JOIN CNET_BIZ_GRP_INFO Y ON Y.GRP_NO = X.LECT_GRP_NO AND Y.USE_YN = 'Y'
                        INNER JOIN CNET_SCH_GRP_MAPP Z ON Z.GRP_NO = Y.GRP_NO
                        INNER JOIN CNET_BIZ_SET_INFO V ON V.SET_TARGT_NO = Z.GRP_NO AND SYSDATE BETWEEN TO_DATE(V.CLAS_START_DAY, 'YYYYMMDDHH24MI') AND TO_DATE(V.CLAS_END_DAY, 'YYYYMMDDHH24MI')
                        LEFT  JOIN CNET_LECT_APPL_CNT W ON W.SCH_NO = Z.SCH_NO AND W.SET_SER = V.SET_SER
                        WHERE
                                 X.LECT_SER = #{lectSer}
                    ) E ON E.SCH_NO = C.SCH_NO
        WHERE
                    1=1
        AND         A.REG_STAT_CD = '101526'
        AND         NOT A.CLAS_ROOM_CUALF_CD = '101690'

        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrType)">
            AND A.CLAS_ROOM_CUALF_CD = #{mbrType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            AND C.SCH_CLASS_CD = #{schoolGrd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schNm)">
            AND C.SCH_NM LIKE '%' || #{schNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrNm)">
            AND D.NM LIKE '%' || #{mbrNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(mbrId)">
            AND LOWER(D.ID) LIKE '%' || LOWER(#{mbrId}) || '%'
        </if>

    </select>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.selectChkLectTarget
        Description : 관리자 해당 학교의 수업대상 여부 확인
        author jhseo
        since 2016. 7. 13.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 13.    jhseo                최초 생성
    -->
    <select id="selectChkLectTarget" parameterType="kr.or.career.mentor.domain.LectureInfomationDTO" resultType="string">
        SELECT /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.selectChkLectTarget */
                USER_DEF1_INFO
        FROM
                CNET_CODE WHERE CD IN (#{schClassCd}, #{lectTargtCd})
    </select>



    <!-- 반에서 수업중복 되는 시간체크-->
    <select id="dupLectSchdInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="Integer">
        <![CDATA[
        SELECT COUNT(*)
          FROM CNET_LECT_SCHD_INFO A
         INNER JOIN CNET_LECT_APPL_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS)
         INNER JOIN CNET_LECT_TIMS_INFO C ON (B.LECT_SER = C.LECT_SER AND B.LECT_TIMS = C.LECT_TIMS)
         WHERE 1 = 1
           AND B.CLAS_ROOM_SER = #{clasRoomSer}
           AND A.LECT_DAY = #{lectDay}
           AND A.LECT_START_TIME < #{lectEndTime}
           AND A.LECT_END_TIME > #{lectStartTime}
           AND B.APPL_STAT_CD IN ('101575', '101576', '101577')
           AND C.LECT_STAT_CD IN ('101542', '101543', '101548', '101549', '101550')
        ]]>
    </select>

    <!-- 멘토 수업중복 되는 시간체크 -->
    <select id="dupMentorSchdInfo" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="Integer">
        <![CDATA[
        SELECT COUNT(*)
          FROM CNET_LECT_SCHD_INFO A
         INNER JOIN CNET_LECT_INFO B ON (B.LECT_SER = A.LECT_SER)
         WHERE 1 = 1
           AND B.LECTR_MBR_NO = #{lectrMbrNo}
           AND A.LECT_DAY = Regexp_Replace(#{lectDay}, '[[:punct:]]', '')
           AND A.LECT_START_TIME < #{lectEndTime}
           AND A.LECT_END_TIME > #{lectStartTime}
           AND A.LECT_STAT_CD IN ('101542','101543','101548','101549','101550')
        ]]>
    </select>


    <!-- 수업신청정보 등록 -->
    <insert id="insertLectApplInfo" parameterType="kr.or.career.mentor.domain.LectApplInfo">
        MERGE   /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.insertLectApplInfo */
                INTO CNET_LECT_APPL_INFO A
        USING   DUAL
        ON      ( LECT_SER = #{lectSer, jdbcType=VARCHAR} AND LECT_TIMS = #{lectTims, jdbcType=VARCHAR} AND CLAS_ROOM_SER = #{clasRoomSer, jdbcType=VARCHAR})
        WHEN MATCHED THEN
        UPDATE
        SET
                  APPL_STAT_CD = #{applStatCd, jdbcType=VARCHAR}
                , CHG_MBR_NO = #{regMbrNo, jdbcType=VARCHAR}
                , CHG_DTM = SYSDATE
                , APPL_CLASS_CD = #{applClassCd, jdbcType=VARCHAR}
        WHEN NOT MATCHED THEN
        INSERT  (
                  LECT_SER
                , LECT_TIMS
                , CLAS_ROOM_SER
                , APPL_MBR_NO
                , SET_SER
                , APPL_STAT_CD
                , REG_DTM
                , REG_MBR_NO
                , APPL_CLASS_CD
        ) VALUES (
                #{lectSer, jdbcType=VARCHAR}
                , #{lectTims, jdbcType=VARCHAR}
                , #{clasRoomSer, jdbcType=VARCHAR}
                , #{applMbrNo, jdbcType=VARCHAR}
                , #{setSer, jdbcType=VARCHAR}
                , #{applStatCd, jdbcType=VARCHAR}
                , SYSDATE
                , #{regMbrNo, jdbcType=VARCHAR}
                , #{applClassCd, jdbcType=VARCHAR}
        )
    </insert>


    <!-- 수업신청이력 등록 -->
    <insert id="insertLectApplHist" parameterType="kr.or.career.mentor.domain.LectApplInfo">
        INSERT INTO CNET_LECT_APPL_HIST (
                LECT_SER
                , LECT_TIMS
                , CLAS_ROOM_SER
                , REG_DTM
                , APPL_MBR_NO
                , SET_SER
                , APPL_STAT_CD
                , REG_MBR_NO
                , APPL_CLASS_CD
        )
        VALUES (
                #{lectSer, jdbcType=INTEGER}
                , #{lectTims, jdbcType=INTEGER}
                , #{clasRoomSer, jdbcType=INTEGER}
                , SYSDATE
                , #{applMbrNo, jdbcType=VARCHAR}
                , #{setSer, jdbcType=INTEGER}
                , #{applStatCd, jdbcType=VARCHAR}
                , #{regMbrNo, jdbcType=VARCHAR}
                , #{applClassCd, jdbcType=VARCHAR}
        )
    </insert>

    <!-- 수업횟수차감 현행화 처리-->
    <update id="updateUseLectAppl" parameterType="kr.or.career.mentor.domain.LectApplInfo">
        <![CDATA[
        MERGE  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateUseLectAppl */
                        INTO CNET_LECT_APPL_CNT  APPL
        USING DUAL ON
                    (APPL.SET_SER = #{setSer} AND APPL.SCH_NO = #{schNo})
        WHEN MATCHED THEN
            UPDATE
            SET
                       CLAS_PERM_CNT = CLAS_PERM_CNT - #{clasApplCnt}
                   ,   CLAS_APPL_CNT = CLAS_APPL_CNT + #{clasApplCnt}
        WHEN NOT MATCHED THEN
            INSERT (
                       SCH_NO
                    ,  SET_SER
                    ,  CLAS_PERM_CNT
                    ,  CLAS_APPL_CNT
            )
            VALUES (
                       #{schNo}
                    ,  #{setSer}
                    ,  (SELECT CLAS_CNT FROM CNET_BIZ_SET_INFO WHERE SET_SER= #{setSer}) - #{clasApplCnt}
                    ,  #{clasApplCnt}
            )
        ]]>
    </update>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.delLectPicFile
        Description : 수업 수정시 수업이미지 파일정보 삭제
        author jhseo
        since 2016. 7. 13.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 13.    jhseo                최초 생성
    -->
    <delete id="delLectPicFile" parameterType="kr.or.career.mentor.domain.LectInfo">
        DELETE  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.delLectPicFile */
        FROM
                CNET_COM_FILE_INFO COM
        WHERE
                1=1
        AND     FILE_SER IN
        <foreach collection="fileSerList" open="(" close=")" separator="," item="fileSer" >
                #{fileSer, jdbcType=INTEGER}
        </foreach>
    </delete>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.delLectPicInfo
        Description : 수업 수정시 수업이미지 맵핑정보 삭제
        author jhseo
        since 2016. 7. 13.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 20.    jhseo                최초 생성
    -->
    <delete id="delLectPicInfo" parameterType="kr.or.career.mentor.domain.LectInfo">
        DELETE  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.delLectPicInfo */
        FROM
                CNET_LECT_PIC_INFO
        WHERE
                LECT_SER=#{lectSer}
        AND     FILE_SER IN
        <foreach collection="fileSerList" open="(" close=")" separator="," item="fileSer" >
                #{fileSer, jdbcType=INTEGER}
        </foreach>
    </delete>

    <!-- 수업정보 수정 -->
    <update id="updateLectInformation" parameterType="kr.or.career.mentor.domain.LectInfo">
        UPDATE
                  CNET_LECT_INFO
        SET
                  LECT_TITLE      = #{lectTitle, jdbcType=VARCHAR}
                , LECT_PIC_PATH   = (SELECT
                                            FILE_SER
                                     FROM
                                            (SELECT
                                                      FILE_SER
                                                    , ROW_NUMBER() OVER(ORDER BY FILE_SER DESC) AS rn
                                             FROM
                                                    CNET_LECT_PIC_INFO
                                             WHERE
                                                    LECT_SER=#{lectSer}
                                            ) A
                                     WHERE
                                            A.RN=1
                                     )
                , LECT_INTDC_INFO = #{lectIntdcInfo, jdbcType=VARCHAR}
                , LECT_SUST_INFO  = #{lectSustInfo, jdbcType=VARCHAR}
                , LECT_OUTLN_INFO  = #{lectOutlnInfo, jdbcType=VARCHAR}
                , CHG_DTM         = SYSDATE
                , CHG_MBR_NO      = #{chgMbrNo}
        WHERE
                1 = 1
        AND     LECT_SER = #{lectSer}
    </update>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.mentorLectSchdList
        Description : 멘토 회차 기준 리스트 (멘토 수업현황)
        author jhseo
        since 2016. 7. 13.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 21.    jhseo                최초 생성
    -->
    <select id="mentorLectSchdList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        /* paging */
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.mentorLectSchdList */
                          A.LECT_SER
                        , NVL(B.MAX_APPL_CNT, A.MAX_APPL_CNT) AS MAX_APPL_CNT
                        , NVL(B.MAX_OBSV_CNT, A.MAX_OBSV_CNT) AS MAX_OBSV_CNT
                        , A.LECT_REQ_SER
                        , A.REG_DTM
                        , A.REG_MBR_NO
                        , A.CHG_DTM
                        , A.CHG_MBR_NO
                        , A.LECT_TYPE_CD
                        , (SELECT CD_NM FROM CNET_CODE WHERE CD = A.LECT_TYPE_CD) AS LECT_TYPE_NM
                        , A.LECT_TARGT_CD
                        , A.LECT_TITLE
                        , A.LECTR_MBR_NO
                        , A.LECTR_NM
                        , A.LECTR_JOB_NO
                        , A.LECT_PIC_PATH
                        , B.LECT_TIMS
                        , NVL(C.LECT_STAT_CD, A.LECT_STAT_CD) AS LECT_STAT_CD
                        , CASE WHEN C.LECT_STAT_CD IS NULL AND A.LECT_STAT_CD = '101543' THEN '일시추가'
                          ELSE (SELECT Z.CD_NM FROM CNET_CODE Z WHERE SUP_CD = '101541' AND Z.CD = NVL(C.LECT_STAT_CD, A.LECT_STAT_CD))
                          END AS LECT_STAT_CD_NM
                        , C.SCHD_SEQ
                        , C.LECT_DAY
                        , C.LECT_START_TIME
                        , C.LECT_END_TIME
                        , C.MC_NO
                        , C.STDO_NO
                        <choose>
                            <when test="@org.apache.commons.lang3.StringUtils@equals(viewType, 'mentorMain')">
                                , ROW_NUMBER() OVER(ORDER BY C.LECT_DAY DESC, C.LECT_START_TIME ASC, A.LECT_SER DESC) AS RN
                            </when>
                            <otherwise>
                                , ROW_NUMBER() OVER(ORDER BY CASE WHEN C.LECT_STAT_CD IS NULL THEN 0 WHEN C.LECT_STAT_CD IN ('101549') THEN 1 ELSE 2 END, C.LECT_DAY DESC, C.LECT_START_TIME DESC, A.REG_DTM DESC) AS RN
                            </otherwise>
                        </choose>
                        , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = B.LECT_SER AND LECT_TIMS= B.LECT_TIMS AND APPL_CLASS_CD = '101715' AND APPL_STAT_CD IN ('101576', '101577')) AS APPL_CNT
                        , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = B.LECT_SER AND LECT_TIMS= B.LECT_TIMS AND APPL_CLASS_CD = '101716' AND APPL_STAT_CD IN ('101576', '101577')) AS OBSV_CNT
                        , C.LECT_SESS_ID
        /* paging */
        FROM            CNET_LECT_INFO A
        LEFT OUTER JOIN CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER)
        LEFT OUTER JOIN CNET_LECT_SCHD_INFO C ON (B.LECT_SER = C.LECT_SER AND B.LECT_TIMS = C.LECT_TIMS)
        LEFT OUTER JOIN CNET_MBR_INFO D ON (D.MBR_NO = A.LECTR_MBR_NO)
        LEFT OUTER JOIN CNET_MBR_JOB_INFO F ON (F.MBR_NO = A.LECTR_MBR_NO)
        WHERE
                        1 = 1
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            <![CDATA[
                AND C.LECT_DAY >= Regexp_Replace(#{searchStDate}, '[[:punct:]]', '')
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchEndDate)">
            <![CDATA[
                AND C.LECT_DAY <= Regexp_Replace(#{searchEndDate}, '[[:punct:]]', '')
            ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolGrd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101534')">
                    AND A.LECT_TARGT_CD IN ('101534', '101537' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101535')">
                    AND A.LECT_TARGT_CD IN ('101535', '101537' ,'101538', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101536')">
                    AND A.LECT_TARGT_CD IN ('101536', '101538' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101537')">
                    AND A.LECT_TARGT_CD IN ('101534', '101535', '101537', '101538' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101538')">
                    AND A.LECT_TARGT_CD IN ('101535', '101536', '101537', '101538' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101539')">
                    AND A.LECT_TARGT_CD IN ('101534', '101536', '101537', '101538' ,'101539', '101540')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(schoolGrd, '101713')">
                    AND A.LECT_TARGT_CD = '101713'
                </when>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTime)">
            <![CDATA[
                AND TO_DATE(C.LECT_START_TIME,'HH24MI') >= TO_DATE(#{lectTime},'HH24MI')
             ]]>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND A.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(lectStatCd, '101551')">
                    AND C.LECT_STAT_CD IN ( '101547', '101551', '101553', '101545')
                </when>
                <otherwise>
                    AND C.LECT_STAT_CD = #{lectStatCd}
             </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(lectStatusCds)">
            AND C.LECT_STAT_CD IN
            <foreach collection="lectStatusCds" item="lectStatusCd" index="index" separator="," open="(" close=")">
                #{lectStatusCd}
            </foreach>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKey)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'all')">
                    AND (   A.LECTR_NM LIKE '%' || #{searchKey} || '%'
                         OR F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                         OR F.JOB_NM LIKE '%' || #{searchKey} || '%'
                         OR C.LECT_TITLE LIKE '%' || #{searchKey} || '%')
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobTagInfo')">
                    AND F.JOB_TAG_INFO LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'jobNm')">
                    AND F.JOB_NM LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'lectTitle')">
                    AND A.LECT_TITLE LIKE '%' || #{searchKey} || '%'
                </when>
                <when test="@org.apache.commons.lang3.StringUtils@equals(searchType, 'mentorNm')">
                    AND A.LECTR_NM LIKE '%' || #{searchKey} || '%'
                </when>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 수행기관일 경우 -->
            AND A.LECT_CO_NO = #{coNo}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101503') or @org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101502')"> <!-- 개인멘토일 경우 -->
            AND A.LECTR_MBR_NO = #{mbrNo}
        </if>
    </select>


    <select id="mentorMainLectStatusCount" parameterType="kr.or.career.mentor.domain.LectureStatusCountInfo" resultType="kr.or.career.mentor.domain.LectureStatusCountInfo">
        /* LectureInfomationMapper.xml 설명 : 멘토포탈 메인 상단 수업 상태 별 현황, ID : mentorMainLectStatusCount, 작성일 : 2016.07.27 */
        SELECT
            NVL(SUM(CASE WHEN SCHD.LECT_STAT_CD = '101551' THEN 1 ELSE 0 END), 0) AS FINISH_LECT                                                        /* 총 누적수업(완료) */
            , NVL(SUM(CASE WHEN SCHD.LECT_STAT_CD IN ('101543', '101548', '101549') AND TIMS.EXPS_YN = 'N' THEN 1 ELSE 0 END), 0) AS OPEN_WAIT_LECT     /* 오픈대기 */
            , NVL(SUM(CASE WHEN SCHD.LECT_STAT_CD = '101543' AND TIMS.EXPS_YN = 'Y' THEN 1 ELSE 0 END), 0) AS APPL_LECT                                 /* 수강모집 */
            , NVL(SUM(CASE WHEN SCHD.LECT_STAT_CD = '101548' AND TIMS.EXPS_YN = 'Y' THEN 1 ELSE 0 END), 0) AS EXPECT_LECT                               /* 수업예정 */
            , NVL(SUM(CASE WHEN SCHD.LECT_STAT_CD = '101553' THEN 1 ELSE 0 END), 0) AS CANCEL_LECT                                                      /* 수업취소 */
            , NVL(SUM(CASE WHEN SCHD.LECT_STAT_CD = '101545' THEN 1 ELSE 0 END), 0) AS CLOSE_LECT                                                       /* 수업폐강 */
        FROM CNET_LECT_INFO LECT
        INNER JOIN CNET_LECT_TIMS_INFO TIMS ON LECT.LECT_SER = TIMS.LECT_SER
        INNER JOIN CNET_LECT_SCHD_INFO SCHD ON TIMS.LECT_SER = SCHD.LECT_SER AND TIMS.LECT_TIMS = SCHD.LECT_TIMS AND SCHD.SCHD_SEQ = 1
        <where>
            <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 수행기관일 경우 -->
            AND LECT.LECT_CO_NO = (SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO = #{mbrNo})
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101503') or @org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101502')"> <!-- 멘토일 경우 -->
            AND LECT.LECTR_MBR_NO = #{mbrNo}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(period, 'month')">
            AND SCHD.LECT_DAY BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE, -1) + 1, 'YYYYMMDD') AND TO_CHAR(SYSDATE, 'YYYYMMDD')
            </if>
        </where>
    </select>

    <select id="selectLectReqInfoList" parameterType="kr.or.career.mentor.domain.LectReqInfo" resultType="kr.or.career.mentor.domain.LectReqInfo">
        /* paging */
        SELECT
            A.REQ_SER
            , A.REQ_TYPE_CD
            , A.REQ_MBR_NO
            , A.TARGT_JOB_NO
            , A.TARGT_MBR_NO
            , B.NM AS TARGT_MBR_NM
            , C.JOB_NM AS TARGT_JOB_NM
            , A.CLAS_ROOM_SER
            , A.LECT_TITLE
            , A.LECT_SUST
            , A.FILE_SER
            , A.SCH_CLASS_CD
            , A.SOL_KIND_CD
            , A.SOL_CO_TEL
            , A.REQ_STAT_CD
            , A.REQ_DTM
            , A.AUTH_STAT_CD
            , A.PROC_SUST
            , A.PROC_DTM
            , A.PROC_MBR_NO
            , A.OPEN_YN
            , A.USE_YN
            , A.VCNT
            , ROW_NUMBER() OVER(ORDER BY A.REQ_DTM DESC) AS RN
            , (SELECT CD_NM FROM CNET_CODE WHERE CD=A.AUTH_STAT_CD) AS AUTH_STAT_CD_NM
        /* paging */
        FROM CNET_LECT_REQ_INFO A
        LEFT OUTER JOIN  CNET_MBR_INFO B ON B.MBR_NO = A.TARGT_MBR_NO
        LEFT OUTER JOIN  CNET_MBR_JOB_INFO C ON C.MBR_NO = A.TARGT_MBR_NO
        <where>
            AND A.USE_YN = 'Y'
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(reqTypeCd)">
                AND A.REQ_TYPE_CD = #{reqTypeCd}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(authStatCd)">
                AND A.AUTH_STAT_CD = #{authStatCd}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(openYn)">
                AND A.OPEN_YN = #{openYn}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(reqMbrNo)">
                AND A.REQ_MBR_NO = #{reqMbrNo}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101503') or @org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101502')"> <!-- 멘토일 경우 -->
                AND (
                    TARGT_MBR_NO = #{mbrNo}
                    OR
                    TARGT_JOB_NO IN (
                        SELECT JOB_NO FROM CNET_MBR_JOB_INFO
                        WHERE MBR_NO = #{mbrNo}
                    )
                )
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 수행기관일 경우 -->
                AND (
                    TARGT_MBR_NO IN (
                        SELECT LECTR_MBR_NO FROM CNET_LECT_INFO
                        WHERE LECT_CO_NO = #{coNo}
                    )
                    OR
                    TARGT_JOB_NO IN (
                        SELECT JOB_NO FROM CNET_MBR_JOB_INFO
                        WHERE MBR_NO IN (
                            SELECT LECTR_MBR_NO FROM CNET_LECT_INFO
                            WHERE LECT_CO_NO = #{coNo}
                            AND LECT_STAT_CD = '101551' /* 수업완료 */
                        )
                    )
                )
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
                <![CDATA[
                AND A.REQ_DTM >= TO_DATE (#{searchStDate}, 'YYYY-MM-DD')
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
                <![CDATA[
                AND A.REQ_DTM <= TO_DATE (#{searchEndDate}, 'YYYY-MM-DD') +1
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTitle)">
                <![CDATA[
                 AND  A.LECT_TITLE LIKE '%' || #{lectTitle} || '%'
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(targtMbrNm)">
                <![CDATA[
                 AND  B.NM LIKE '%' || #{targtMbrNm} || '%'
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(targtJobNm)">
                <![CDATA[
                 AND  C.JOB_NM LIKE '%' || #{targtJobNm} || '%'
            ]]>
            </if>
        </where>
    </select>

    <select id="selectLectReqInfoCount" parameterType="kr.or.career.mentor.domain.LectReqInfo" resultType="kr.or.career.mentor.domain.LectReqInfo">
        SELECT
            NVL(SUM(CASE WHEN AUTH_STAT_CD = '101026' THEN 1 ELSE 0 END), 0) AS APPL_CNT
            , NVL(SUM(CASE WHEN AUTH_STAT_CD = '101027' THEN 1 ELSE 0 END), 0) AS APPR_CNT
            , NVL(SUM(CASE WHEN AUTH_STAT_CD = '101028' THEN 1 ELSE 0 END), 0) AS RJT_CNT
            , COUNT(1) AS TOT_CNT
        FROM CNET_LECT_REQ_INFO A
        LEFT OUTER JOIN  CNET_MBR_INFO B ON B.MBR_NO = A.TARGT_MBR_NO
        LEFT OUTER JOIN  CNET_MBR_JOB_INFO C ON C.MBR_NO = A.TARGT_MBR_NO
        <where>
            AND A.USE_YN = 'Y'
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(reqTypeCd)">
                AND A.REQ_TYPE_CD = #{reqTypeCd}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(authStatCd)">
                AND A.AUTH_STAT_CD = #{authStatCd}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(openYn)">
                AND A.OPEN_YN = #{openYn}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(reqMbrNo)">
                AND A.REQ_MBR_NO = #{reqMbrNo}
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101503') or @org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101502')"> <!-- 멘토일 경우 -->
                AND (
                    TARGT_MBR_NO = #{mbrNo}
                    OR
                    TARGT_JOB_NO IN (
                        SELECT JOB_NO FROM CNET_MBR_JOB_INFO
                        WHERE MBR_NO = #{mbrNo}
                    )
                )
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 수행기관일 경우 -->
                AND (
                    TARGT_MBR_NO IN (
                        SELECT LECTR_MBR_NO FROM CNET_LECT_INFO
                        WHERE LECT_CO_NO = #{coNo}
                    )
                    OR
                    TARGT_JOB_NO IN (
                        SELECT JOB_NO FROM CNET_MBR_JOB_INFO
                        WHERE MBR_NO IN (
                            SELECT LECTR_MBR_NO FROM CNET_LECT_INFO
                            WHERE LECT_CO_NO = #{coNo}
                            AND LECT_STAT_CD = '101551' /* 수업완료 */
                        )
                    )
                )
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
                <![CDATA[
                AND A.REQ_DTM >= TO_DATE (#{searchStDate}, 'YYYY-MM-DD')
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
                <![CDATA[
                AND A.REQ_DTM <= TO_DATE (#{searchEndDate}, 'YYYY-MM-DD') + 1
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTitle)">
                <![CDATA[
                 AND  A.LECT_TITLE LIKE '%' || #{lectTitle} || '%'
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(targtMbrNm)">
                <![CDATA[
                 AND  B.NM LIKE '%' || #{targtMbrNm} || '%'
            ]]>
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(targtJobNm)">
                <![CDATA[
                 AND  C.JOB_NM LIKE '%' || #{targtJobNm} || '%'
            ]]>
            </if>
        </where>
    </select>

    <!-- 수업신청 참관 기기조회(수업대상정보)-->
    <select id="listLectObsvClas" parameterType="kr.or.career.mentor.domain.LectSchdInfo" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT TB.*,
        Z.NM AS TCHR_NM,
        Z.MOBILE AS TCHR_MOBILE,
        (SELECT COUNT(*) FROM CNET_CLAS_ROOM_REG_REQ_HIST S
        INNER JOIN CNET_MBR_INFO S2 ON S.REQ_MBR_NO = S2.MBR_NO
        WHERE 1=1
        AND S.CLAS_ROOM_SER = TB.CLAS_ROOM_SER
        AND S2.MBR_CLASS_CD = '100858'  /*회원구분코드:일반(학생만 조회)*/
        ) AS STDNT_CNT
        FROM
        (SELECT
        D.SCH_NM,
        D.SIDO_NM,
        B.CLAS_ROOM_NM,
        B.CLAS_ROOM_SER,
        B.TCHR_MBR_NO,
        A.APPL_MBR_NO,
        B.SCH_NO,
        A.SET_SER,
        A.APPL_STAT_CD,
        ROW_NUMBER() OVER(ORDER BY A.REG_DTM) AS rn
        FROM CNET_LECT_APPL_INFO A
        INNER JOIN CNET_CLAS_ROOM_INFO B ON A.CLAS_ROOM_SER = B.CLAS_ROOM_SER
        INNER JOIN CNET_SCH_INFO D ON D.SCH_NO = B.SCH_NO
        WHERE 1=1
        AND A.APPL_CLASS_CD = '101716'  /*참여 상태가 참관 */
        AND A.LECT_SER =  #{lectSer, jdbcType=INTEGER}
        AND A.LECT_TIMS =  #{lectTims, jdbcType=INTEGER}
        ) TB
        INNER JOIN CNET_MBR_INFO Z ON Z.MBR_NO = TB.APPL_MBR_NO
    </select>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.insertLectOpenReq
        Description : 멘토 수업개설 신청 등록
        author jhseo
        since 2016. 7. 29.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 29.    jhseo                최초 생성
    -->
    <insert id="insertLectOpenReq" parameterType="kr.or.career.mentor.domain.LectReqInfo">
        <selectKey keyProperty="reqSer" resultType="Integer" order="BEFORE">
            SELECT SQ_LECT_REQ_INFO.NEXTVAL FROM DUAL
        </selectKey>
        INSERT /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.insertLectOpenReq */
        INTO
                CNET_LECT_REQ_INFO
                (
                       REQ_SER
                    ,  REQ_MBR_NO
                    ,  TARGT_JOB_NO
                    ,  TARGT_MBR_NO
                    ,  LECT_TITLE
                    ,  LECT_SUST
                    ,  REQ_DTM
                    ,  REQ_TYPE_CD
                    ,  FILE_SER
                    ,  AUTH_STAT_CD
                    ,  OPEN_YN
                    ,  USE_YN
                    ,  CLAS_ROOM_SER
                )
        VALUES (
                       #{reqSer}
                    ,  #{mbrNo}
                    ,  (SELECT JOB_NO from CNET_MBR_JOB_INFO WHERE MBR_NO=#{mbrNo})
                    ,  #{mbrNo}
                    ,  #{lectTitle}
                    ,  #{lectSust}
                    ,  SYSDATE
                    ,  #{reqTypeCd}
                    ,  #{fileSer}
                    ,  #{authStatCd}
                    ,  'N'
                    ,  'Y'
                    ,  null
                )
    </insert>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.selectLectReqInfo
        Description : 멘토 수업개설 신청 상세조회
        author jhseo
        since 2016. 7. 29.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 29.    jhseo                최초 생성
    -->
    <select id="selectLectReqInfo" parameterType="kr.or.career.mentor.domain.LectReqInfo" resultType="kr.or.career.mentor.domain.LectReqInfo">
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.selectLectReqInfo */
                      A.REQ_SER
                    , A.REQ_TYPE_CD
                    , A.REQ_MBR_NO
                    , A.TARGT_JOB_NO
                    , (SELECT JOB_NM FROM CNET_MBR_JOB_INFO WHERE MBR_NO = A.TARGT_MBR_NO) AS TARGT_JOB_NM
                    , A.TARGT_MBR_NO
                    , (SELECT NM FROM CNET_MBR_INFO WHERE MBR_NO = A.TARGT_MBR_NO) AS TARGT_MBR_NM
                    , A.CLAS_ROOM_SER
                    , A.LECT_TITLE
                    , A.LECT_SUST
                    , A.FILE_SER
                    , A.SCH_CLASS_CD
                    , A.SOL_KIND_CD
                    , A.SOL_CO_TEL
                    , A.REQ_STAT_CD
                    , A.REQ_DTM
                    , A.AUTH_STAT_CD
                    , A.PROC_SUST
                    , A.PROC_DTM
                    , A.PROC_MBR_NO
                    , (SELECT NM FROM CNET_MBR_INFO WHERE MBR_NO = A.PROC_MBR_NO) AS PROC_MBR_NM
                    , (SELECT CO_NM FROM CNET_CO_INFO WHERE CO_NO = (SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO = A.PROC_MBR_NO)) AS PROC_CO_NM
                    , A.OPEN_YN
                    , A.USE_YN
                    , A.VCNT
                    , ROW_NUMBER() OVER(ORDER BY A.REQ_DTM DESC) AS RN
                    , (SELECT CD_NM FROM CNET_CODE WHERE CD=A.AUTH_STAT_CD) AS AUTH_STAT_CD_NM
                    , B.FILE_SIZE
                    , B.ORI_FILE_NM
        FROM
                    CNET_LECT_REQ_INFO A
        LEFT JOIN   CNET_COM_FILE_INFO B ON A.FILE_SER = B.FILE_SER AND B.USE_YN='Y'
        WHERE
                A.REQ_SER = #{reqSer}
    </select>

    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectOpenReq
        Description : 멘토 수업개설신청 수정
        author jhseo
        since 2016. 7. 29.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 7. 29.    jhseo                최초 생성
    -->
    <update id="updateLectOpenReq" parameterType="kr.or.career.mentor.domain.LectReqInfo">
        UPDATE  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.updateLectOpenReq */
                CNET_LECT_REQ_INFO
        <set>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTitle)">
                LECT_TITLE = #{lectTitle},
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectSust)">
                LECT_SUST = #{lectSust},
            </if>
            <if test="fileSer != null">
                FILE_SER = #{fileSer},
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(authStatCd)">
                AUTH_STAT_CD = #{authStatCd},
                PROC_DTM = SYSDATE,
                PROC_MBR_NO = #{procMbrNo},
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(procSust)">
                PROC_SUST = #{procSust},
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(openYn)">
                OPEN_YN = #{openYn},
            </if>
            <if test="vcnt != null">
                VCNT = #{vcnt},
            </if>
        </set>
        <where>
            REQ_SER = #{reqSer}
        </where>
    </update>



    <!--
    Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.myLectureTotalStatCnt
    Description : 학교 마이페이지 -> 나의수업 신청현황 카운트 조회
    author jhseo
    since 2016. 7. 29.
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 8. 03.    jhseo                최초 생성
    -->
    <select id="myLectureTotalStatCnt" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="kr.or.career.mentor.domain.LectureApplInfoDTO">
        SELECT /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.myLectureTotalStatCnt */
                     NVL(SUM(DECODE(C.LECT_STAT_CD,'101542', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101542
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101543', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101543
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101544', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101544
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101545', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101545
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101546', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101546
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101547', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101547
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101548', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101548
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101549', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101549
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101550', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101550
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101551', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101551
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101552', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101552
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101553', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101553
                    ,NVL(SUM(DECODE(C.LECT_STAT_CD,'101662', DECODE(A.APPL_STAT_CD, '101578', 0, 1), 0)), 0) AS ST_101662
                    ,NVL(SUM(DECODE(A.APPL_STAT_CD,'101575',1,0)),0) AS ST_101575
                    ,NVL(SUM(DECODE(A.APPL_STAT_CD,'101576',1,0)),0) AS ST_101576
                    ,NVL(SUM(DECODE(A.APPL_STAT_CD,'101577',1,0)),0) AS ST_101577
                    ,NVL(SUM(DECODE(A.APPL_STAT_CD,'101578',1,0)),0) AS ST_101578
        FROM        CNET_LECT_APPL_INFO A
        INNER JOIN  CNET_LECT_TIMS_INFO B ON (B.LECT_SER = A.LECT_SER AND B.LECT_TIMS = A.LECT_TIMS) AND B.EXPS_YN = 'Y'
        INNER JOIN  CNET_LECT_SCHD_INFO C ON (C.LECT_SER = B.LECT_SER AND C.LECT_TIMS = B.LECT_TIMS)
        INNER JOIN  CNET_LECT_INFO D ON (D.LECT_SER = B.LECT_SER)
        WHERE
                    1 = 1
        AND         EXISTS ( SELECT 1 FROM CNET_CLAS_ROOM_REG_REQ_HIST CLAS
                             WHERE CLAS.CLAS_ROOM_SER = A.CLAS_ROOM_SER AND CLAS.REG_STAT_CD= '101526' AND REQ_MBR_NO = #{applMbrNo}
                           )
    </select>


    <!--
    Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.myLectureReqCnt
    Description : 학교 마이페이지 -> 나의 요청수업 현황 카운트 조회 (요청수업에서 개설된 수업중 신청된 수업은 제외)
    author jhseo
    since 2016. 8. 03.
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 8. 03.    jhseo                최초 생성
    -->
    <select id="myLectureReqCnt" parameterType="kr.or.career.mentor.domain.LectApplInfo" resultType="integer">
        SELECT /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.myLectureReqCnt */
                COUNT(*)
        FROM
                CNET_LECT_REQ_INFO Q
        LEFT OUTER JOIN CNET_LECT_INFO W ON (W.LECT_REQ_SER = Q.REQ_SER)
        LEFT OUTER JOIN CNET_LECT_TIMS_INFO Y ON (W.LECT_SER = Y.LECT_SER) AND Y.EXPS_YN = 'Y'
        WHERE
                1 = 1
        AND     (
                    (W.LECT_SER IS NOT NULL AND Y.LECT_SER IS NOT NULL)
                OR
                    (W.LECT_SER IS NULL AND Y.LECT_SER IS NULL)
                )
        AND     Q.REQ_MBR_NO = #{applMbrNo}
        AND     NOT EXISTS(SELECT 1 FROM CNET_LECT_APPL_INFO WHERE APPL_MBR_NO = Q.REQ_MBR_NO AND LECT_SER = Y.LECT_SER AND LECT_TIMS = Y.LECT_TIMS)
    </select>



    <select id="selectSetSchoolInfo" parameterType="kr.or.career.mentor.domain.SchInfo" resultType="kr.or.career.mentor.domain.ClasRoomInfo">
        SELECT
                      NVL(APPL.CLAS_PERM_CNT, BSET.CLAS_CNT) AS PERM_CNT
                    , NVL(APPL.CLAS_APPL_CNT, 0) AS APPLY_CNT

        FROM
                    CNET_BIZ_SET_INFO BSET
        LEFT JOIN   CNET_LECT_APPL_CNT APPL ON BSET.SET_SER = APPL.SET_SER AND APPL.SCH_NO = #{schNo}
        WHERE
                    BSET.SET_SER = #{setSer}
        AND         SYSDATE BETWEEN TO_DATE(BSET.CLAS_START_DAY, 'YYYYMMDDHH24MI') AND TO_DATE(BSET.CLAS_END_DAY, 'YYYYMMDDHH24MI')
    </select>


    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureSchdInfo
        Description : 학교포털 특정 회차 상세 정보
        author jhseo
        since 2016. 7. 04.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 8. 09.    jhseo                최초 생성
    -->
    <select id="lectureSchdInfo" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectureSchdInfo */
                      LECT.LECT_SER
                    , TIMS.LECT_TIMS
                    , SCHD.SCHD_SEQ
                    , LECT.LECT_TITLE
                    , LECT.LECTR_NM
                    , (SELECT JOB_NM FROM CNET_MBR_JOB_INFO WHERE MBR_NO = LECT.LECTR_MBR_NO) AS JOB_NM
                    , TO_CHAR(TO_DATE(SCHD.LECT_DAY, 'YYYYMMDD'), 'YYYY.MM.DD') AS LECT_DAY
                    , TO_CHAR(TO_DATE(SCHD.LECT_START_TIME, 'HH24MI'), 'HH24:MI') AS LECT_START_TIME
                    , TO_CHAR(TO_DATE(SCHD.LECT_END_TIME, 'HH24MI'), 'HH24:MI') AS LECT_END_TIME
                    , (SELECT NM FROM CNET_MBR_INFO WHERE MBR_NO = APPL.APPL_MBR_NO) AS TCHR_NM
                    , CLAS.CLAS_ROOM_NM
                    , (SELECT SCH_NM FROM CNET_SCH_INFO WHERE SCH_NO = CLAS.SCH_NO) AS SCH_NM
        FROM
                    CNET_LECT_INFO LECT
        INNER JOIN  CNET_LECT_TIMS_INFO TIMS ON LECT.LECT_SER = TIMS.LECT_SER
        INNER JOIN  CNET_LECT_SCHD_INFO SCHD ON TIMS.LECT_SER = SCHD.LECT_SER AND TIMS.LECT_TIMS = SCHD.LECT_TIMS
        INNER JOIN CNET_LECT_APPL_INFO APPL ON APPL.LECT_SER = TIMS.LECT_SER AND APPL.LECT_TIMS = TIMS.LECT_TIMS
        INNER JOIN CNET_CLAS_ROOM_INFO CLAS ON CLAS.CLAS_ROOM_SER = APPL.CLAS_ROOM_SER
        WHERE
                    LECT.LECT_SER = #{lectSer}
        AND         TIMS.LECT_TIMS = #{lectTims}
        AND         SCHD.SCHD_SEQ = #{schdSeq}
        AND         APPL.CLAS_ROOM_SER = #{clasRoomSer}
    </select>


    <!--
    Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.regObsvHist
    Description : 수업참관시 참관이력 저장
    author jhseo
    since 2016. 8. 16.
    Modification Information
       since          author              description
    ===========    =============    ===========================
    2016. 8. 16.    jhseo                최초 생성
    -->
    <insert id="regObsvHist" parameterType="kr.or.career.mentor.domain.LectApplInfo">
        <![CDATA[
        MERGE  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.regObsvHist */
            INTO CNET_LECT_OBSV_HIST  A
        USING DUAL
            ON (A.LECT_SESS_ID = #{lectSessId, jdbcType=INTEGER} AND A.TOMMS_ID = #{applMbrNo, jdbcType=VARCHAR})
        WHEN MATCHED THEN
            UPDATE SET
                    SCH_NO = #{schNo, jdbcType=VARCHAR}
                    ,  SET_SER  = #{setSer, jdbcType=INTEGER}
                    ,  OBSV_DTM  = SYSDATE
        WHEN NOT MATCHED THEN
            INSERT (
                    LECT_SESS_ID
                    ,  TOMMS_ID
                    ,  SCH_NO
                    ,  SET_SER
                    ,  WITHDRAW_CNT_STD
                    ,  WITHDRAW_YN
                    ,  OBSV_DTM
            )
            VALUES (
                    #{lectSessId, jdbcType=INTEGER}
                    ,  #{applMbrNo, jdbcType=VARCHAR}
                    ,  #{schNo, jdbcType=VARCHAR}
                    ,  #{setSer, jdbcType=VARCHAR}
                    ,  #{withdrawCnt, jdbcType=DOUBLE}
                    ,  'Y'
                    ,  SYSDATE
            )
        ]]>
    </insert>

    <select id="selectObsvHist" resultType="kr.or.career.mentor.domain.WithdrawInfo">
        <![CDATA[
            SELECT  LECT_SESS_ID as sessionId
                    ,TOMMS_ID
            FROM    CNET_LECT_OBSV_HIST
            WHERE   TO_DATE(TO_CHAR(OBSV_DTM,'YYYYMMDD'),'YYYYMMDD') <= TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD'),'YYYYMMDD')
            AND     BAT_SUC_YN = 'N'
        ]]>
    </select>

    <update id="updateObsvHist" parameterType="list">
        <![CDATA[
        MERGE INTO CNET_LECT_OBSV_HIST A
          USING ( SELECT  LECT_SESS_ID,TOMMS_ID
                  FROM  CNET_LECT_OBSV_HIST
                  WHERE (LECT_SESS_ID,CLAS_ROOM_SER) IN
        ]]>
        <foreach item="item" index="index" collection="list" open=" (" separator="," close=")">
            (#{item.sessionId,jdbcType=VARCHAR},#{item.clasRoomSer,jdbcType=INTEGER})
        </foreach>
        <![CDATA[
                ) B
            ON (  A.LECT_SESS_ID = B.LECT_SESS_ID
                  AND A.CLAS_ROOM_SER = B.CLAS_ROOM_SER
                )
        WHEN MATCHED THEN
          UPDATE
            SET A.WITHDRAW_YN = 'N'
        ]]>
    </update>

    <update id="updateObsvHistBatchSuccess" parameterType="list">
        <![CDATA[
        MERGE INTO CNET_LECT_OBSV_HIST A
          USING ( SELECT  LECT_SESS_ID,TOMMS_ID
                  FROM  CNET_LECT_OBSV_HIST
                  WHERE (LECT_SESS_ID,TOMMS_ID) IN
        ]]>
        <foreach item="item" index="index" collection="list" open=" (" separator="," close=")">
            (#{item.sessionId,jdbcType=VARCHAR},#{item.tommsId,jdbcType=VARCHAR})
        </foreach>
        <![CDATA[
                ) B
            ON (  A.LECT_SESS_ID = B.LECT_SESS_ID
                  AND A.TOMMS_ID = B.TOMMS_ID
                )
        WHEN MATCHED THEN
          UPDATE
            SET A.BAT_SUC_YN = 'Y'
        ]]>
    </update>
    
    <select id="selectWithdrawApplyCount" resultType="kr.or.career.mentor.domain.WithdrawInfo">
        <![CDATA[
        SELECT  SET_SER
                ,SCH_NO
                ,SUM(WITHDRAW_CNT_STD) AS rollbackCnt
        FROM    CNET_LECT_OBSV_HIST
        WHERE   TO_DATE(TO_CHAR(OBSV_DTM,'YYYYMMDD'),'YYYYMMDD') <= TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD'),'YYYYMMDD')
        AND     WITHDRAW_YN = 'Y'
        AND     BAT_SUC_YN = 'N'
        GROUP BY SET_SER,SCH_NO,TO_DATE(TO_CHAR(OBSV_DTM,'YYYYMMDD'),'YYYYMMDD')
        ]]>
    </select>

    <update id="withdrawApplyCount" parameterType="list">
        <![CDATA[
            MERGE INTO CNET_LECT_APPL_CNT A
              USING ( SELECT  SET_SER,SCH_NO
                      FROM  CNET_LECT_APPL_CNT
                      WHERE (SET_SER,SCH_NO) IN
        ]]>
        <foreach item="item" index="index" collection="list" open=" (" separator="," close=")">
            (#{item.setSer},#{item.schNo})
        </foreach>
        <![CDATA[
                ) B
            ON (  A.SET_SER = B.SET_SER
                  AND A.SCH_NO = B.SCH_NO
                )
        WHEN MATCHED THEN
          UPDATE
            SET A.CLAS_PERM_CNT = A.CLAS_PERM_CNT + #{item.rollbackCnt,jdbcType=DOUBLE}
                ,A.CLAS_APPL_CNT = A.CLAS_APPL_CNT - #{item.rollbackCnt,jdbcType=DOUBLE}
        ]]>
    </update>

    <select id="getRpsClasStdt" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="integer">
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.myLectureTotalStatCnt */
                   COUNT(1)
        FROM
                   CNET_CLAS_ROOM_REG_REQ_HIST HIS
        INNER JOIN CNET_CLAS_ROOM_INFO CLAS ON CLAS.CLAS_ROOM_SER = HIS.CLAS_ROOM_SER
        WHERE
                   HIS.REQ_MBR_NO=#{mbrNo}
        AND        HIS.REG_STAT_CD='101526'
        AND        CLAS_ROOM_CUALF_CD='101691'
        AND        SYSDATE BETWEEN CLAS.VALID_START_DAY AND CLAS.VALID_END_DAY
        AND        CLAS.USE_YN='Y' AND DEL_YN='N'
    </select>




    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectApplClasList
        Description : 관리자 수업 클래스별 신청 현황 리스트
        author jhseo
        since 2016. 6. 30.
        Modification Information
           since          author              description,
        ===========    =============    ===========================
        2016. 8. 29.    jhseo                최초 생성
    -->
    <select id="lectApplClasList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.LectureInfomationDTO">
        /* paging */
        SELECT   /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.lectApplClasList */
                  LECT.LECT_SER
                , LECT.LECTR_MBR_NO
                , LECT.LECT_TITLE
                , LECT.LECT_TYPE_CD
                , LECT.LECTR_NM
                , LECT.LECT_TARGT_CD
                , SCHD.LECT_STAT_CD
                , TIMS.EXPS_YN
                , TIMS.MAX_APPL_CNT
                , TIMS.MAX_OBSV_CNT
                , TIMS.LECT_TIMS
                , SCHD.LECT_DAY
                , SCHD.LECT_START_TIME
                , SCHD.LECT_END_TIME
                , ROUND(TO_CHAR(TO_DATE(SCHD.LECT_END_TIME, 'HH24MI') - TO_DATE(SCHD.LECT_START_TIME, 'HH24MI'))* (24*60)) AS  LECT_RUN_TIME
                , MJOB.JOB_NM
                , CO.CO_NM
                , BIZ.GRP_NM
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.SUP_CD = '101541' AND Z.CD = SCHD.LECT_STAT_CD ) AS LECT_STAT_CD_NM
                , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS AND APPL_CLASS_CD = '101715' AND APPL_STAT_CD IN ('101576', '101577')) AS APPL_CNT
                , (SELECT COUNT(*) FROM CNET_LECT_APPL_INFO WHERE LECT_SER = TIMS.LECT_SER AND LECT_TIMS= TIMS.LECT_TIMS AND APPL_CLASS_CD = '101716' AND APPL_STAT_CD IN ('101576', '101577')) AS OBSV_CNT
                , TO_CHAR(APPL.REG_DTM,'YYYY.MM.DD') APPL_REG_DTM
                , CASE WHEN APPL.APPL_STAT_CD = '101578' THEN
                        CASE WHEN APPL.APPL_CLASS_CD = '101715' THEN '수업취소'
                             WHEN APPL.APPL_CLASS_CD = '101716' THEN '참관취소'
                        END
                  ELSE (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = APPL.APPL_CLASS_CD )
                  END APPL_CLASS_CD_NM
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = LECT.LECT_TYPE_CD ) AS LECT_TYPE_CD_NM
                , SCH.SIDO_NM
                , SCH.SGGU_NM
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = SCH.SCH_CLASS_CD ) AS SCH_CLASS_CD_NM
                , SCH.SCH_NO
                , SCH.SCH_NM AS SCHOOL_NM
                , CLAS.CLAS_ROOM_NM
                , (SELECT COUNT(*) FROM CNET_CLAS_ROOM_REG_REQ_HIST WHERE CLAS_ROOM_SER = CLAS.CLAS_ROOM_SER AND REG_STAT_CD = '101526' AND CLAS_ROOM_CUALF_CD IN ('101690','101691')) AS CLAS_PERSON_CNT
                , TMBR.NM AS TCHR_NM
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = (SELECT CLAS_ROOM_CUALF_CD FROM CNET_CLAS_ROOM_REG_REQ_HIST WHERE REQ_MBR_NO = APPL.APPL_MBR_NO AND CLAS_ROOM_SER=APPL.CLAS_ROOM_SER AND REG_STAT_CD='101526') ) AS CLAS_ROOM_CUALF_CD_NM
                , TMBR.MOBILE AS TCHR_MOBILE
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = SCH.JOIN_CLASS) AS JOIN_CLASS_NM
                , (SELECT CD_NM FROM CNET_CODE Z WHERE Z.CD = SCH.DEVICE_TYPE) AS DEVICE_TYPE_NM
                , ROW_NUMBER() OVER(ORDER BY SCHD.LECT_DAY DESC, SCHD.LECT_START_TIME ASC, LECT.LECT_SER DESC) AS rn
        /* paging */
        FROM
                   CNET_LECT_INFO LECT
        INNER JOIN CNET_CO_INFO CO ON CO.CO_NO=LECT.LECT_CO_NO
        INNER JOIN CNET_BIZ_GRP_INFO BIZ ON BIZ.GRP_NO = LECT.LECT_GRP_NO
        INNER JOIN CNET_LECT_TIMS_INFO TIMS ON LECT.LECT_SER = TIMS.LECT_SER
        INNER JOIN CNET_LECT_SCHD_INFO SCHD ON TIMS.LECT_SER = SCHD.LECT_SER AND TIMS.LECT_TIMS = SCHD.LECT_TIMS
        INNER JOIN CNET_LECT_APPL_INFO APPL ON TIMS.LECT_SER = APPL.LECT_SER AND TIMS.LECT_TIMS = APPL.LECT_TIMS
        INNER JOIN CNET_CLAS_ROOM_INFO CLAS ON CLAS.CLAS_ROOM_SER = APPL.CLAS_ROOM_SER AND CLAS.USE_YN = 'Y' AND CLAS.DEL_YN = 'N' AND SYSDATE BETWEEN CLAS.VALID_START_DAY AND CLAS.VALID_END_DAY
        INNER JOIN CNET_SCH_INFO SCH ON SCH.SCH_NO = CLAS.SCH_NO AND SCH.USE_YN = 'Y'
        INNER JOIN CNET_MBR_INFO TMBR ON TMBR.MBR_NO = APPL.APPL_MBR_NO
        LEFT  JOIN CNET_JOB_INFO MJOB ON MJOB.JOB_NO = LECT.LECTR_JOB_NO
        WHERE 1=1
        <if test="schdSeq != 0">
            AND SCHD.SCHD_SEQ = 1
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectType)">
            AND LECT.LECT_TYPE_CD = #{lectType}
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(schoolGrdExList)" >
            AND LECT.LECT_TARGT_CD NOT IN
            <foreach collection="schoolGrdExList" item="schoolGrdExList"   open="(" close=")" separator=",">
                #{schoolGrdExList}
            </foreach>
        </if>
        <if test="schClassCds != null" >
            AND SCH.SCH_CLASS_CD IN
            <foreach collection="schClassCds" item="schClassCds"   open="(" close=")" separator=",">
                #{schClassCds}
            </foreach>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schoolEtcGrd)">
            AND LECT.LECT_TARGT_CD = #{schoolEtcGrd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applStatCd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(applStatCd, '101576')">
                    AND APPL.APPL_STAT_CD IN ('101576', '101577')
                </when>
                <otherwise>
                    AND APPL.APPL_STAT_CD = #{applStatCd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schdSeq)">
            AND SCHD.SCHD_SEQ = #{schdSeq}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applClassCd)">
            AND APPL.APPL_CLASS_CD = #{applClassCd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectTitle)">
            AND LECT.LECT_TITLE LIKE '%' || #{lectTitle} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrNm)">
            AND LECT.LECTR_NM LIKE '%' || #{lectrNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectrJob)">
            AND MJOB.JOB_NM LIKE '%' || #{lectrJob} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(schNm)">
            AND SCH.SCH_NM LIKE '%' || #{schNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applMbrNm)">
            AND TMBR.NM LIKE '%' || #{applMbrNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(grpNm)">
            AND BIZ.GRP_NM LIKE '%' || #{grpNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(coNm)">
            AND CO.CO_NM LIKE '%' || #{coNm} || '%'
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(expsYn)">
            AND TIMS.EXPS_YN = #{expsYn}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStDate)">
            AND TO_DATE(SCHD.LECT_DAY, 'YYYYMMDD') BETWEEN TO_DATE(Regexp_Replace(#{searchStDate}, '[[:punct:]]', ''), 'YYYYMMDD') AND TO_DATE(Regexp_Replace(#{searchEndDate}, '[[:punct:]]', ''),'YYYYMMDD')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(lectStatCd)">
            <choose>
                <when test="@org.apache.commons.lang3.StringUtils@equals(lectStatCd, '101551')">
                    AND TIMS.LECT_STAT_CD IN ( '101551', '101553', '101545')
                </when>
                <otherwise>
                    AND TIMS.LECT_STAT_CD = #{lectStatCd}
                </otherwise>
            </choose>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101500')"> <!-- 주관기관일 경우 -->
            AND LECT.GRP_NO IN (SELECT GRP_NO FROM CNET_BIZ_GRP_INFO WHERE CO_NO=(SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@equals(mbrCualfCd, '101501')"> <!-- 수행기관일 경우 -->
            AND LECT.LECT_CO_NO = (SELECT POS_CO_NO FROM CNET_MBR_INFO WHERE MBR_NO=#{mbrNo})
        </if>
        ORDER BY APPL.REG_DTM DESC

    </select>



    <!--
        Query Name : kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.listBizGrpList
        Description : 학교 포털 수업 현황  -> 배정사업 정보 검색 정보 리스트
        author jhseo
        since 2016. 6. 30.
        Modification Information
           since          author              description
        ===========    =============    ===========================
        2016. 8. 29.    jhseo                최초 생성
    -->
    <select id="listBizGrpList" parameterType="kr.or.career.mentor.domain.LectureSearch" resultType="kr.or.career.mentor.domain.BizGrpInfo">
        SELECT  /* ProgramID=kr.or.career.mentor.service.impl.LectureManagementServiceImpl.LectureInfomationMapper.listBizGrpList */
                   GRP_NM
                 , GRP_NO
        FROM
                   CNET_BIZ_GRP_INFO GRP
        INNER JOIN CNET_BIZ_SET_INFO BSET ON GRP.GRP_NO = BSET.SET_TARGT_NO
        WHERE
                   GRP.USE_YN = 'Y'
        AND        SYSDATE BETWEEN TO_DATE(BSET.CLAS_START_DAY, 'YYYYMMDDHH24MI') AND TO_DATE(BSET.CLAS_END_DAY, 'YYYYMMDDHH24MI')
    </select>


    <update id="updateLectureAppl" parameterType="kr.or.career.mentor.domain.BizGrpInfo">
        UPDATE CNET_LECT_INFO SET
        MAX_APPL_CNT = #{maxApplCnt, jdbcType=INTEGER},
        MAX_OBSV_CNT = #{maxObsvCnt, jdbcType=INTEGER}
        WHERE LECT_GRP_NO = #{grpNo}
    </update>


</mapper>